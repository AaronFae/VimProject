!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
ACID_HASH16	.\libsndfile-1.0.17\src\w64.c	65;"	d	file:
ACLIP	.\libsndfile-1.0.17\tests\alaw_test.c	168;"	d	file:
ACLOCAL	.\libsndfile-1.0.17\reconfigure.mk	/^ACLOCAL = aclocal$/;"	m
ACLOCAL_INC	.\libsndfile-1.0.17\reconfigure.mk	/^  ACLOCAL_INC = -I \/sw\/share\/aclocal$/;"	m
ADP4_MARKER	.\libsndfile-1.0.17\src\aiff.c	82;"	d	file:
AIFC_IMA4_BLOCK_LEN	.\libsndfile-1.0.17\src\aiff.c	94;"	d	file:
AIFC_IMA4_SAMPLES_PER_BLOCK	.\libsndfile-1.0.17\src\aiff.c	95;"	d	file:
AIFC_MARKER	.\libsndfile-1.0.17\src\aiff.c	38;"	d	file:
AIFF_MARKER	.\libsndfile-1.0.17\src\aiff.c	37;"	d	file:
AIFF_PEAK_CHUNK_SIZE	.\libsndfile-1.0.17\src\aiff.c	97;"	d	file:
AIFF_PRIVATE	.\libsndfile-1.0.17\src\aiff.c	/^} AIFF_PRIVATE ;$/;"	t	typeref:struct:__anon18	file:
ALAW_MARKER	.\libsndfile-1.0.17\src\aiff.c	72;"	d	file:
ALAW_MARKER	.\libsndfile-1.0.17\src\wve.c	47;"	d	file:
ALCH_MARKER	.\libsndfile-1.0.17\src\sd2.c	47;"	d	file:
ALSA_PCM_NEW_HW_PARAMS_API	.\libsndfile-1.0.17\examples\sndfile-play.c	31;"	d	file:
ALSA_PCM_NEW_SW_PARAMS_API	.\libsndfile-1.0.17\examples\sndfile-play.c	32;"	d	file:
AMPLITUDE	.\libsndfile-1.0.17\examples\make_sine.c	32;"	d	file:
ANNO_MARKER	.\libsndfile-1.0.17\src\aiff.c	48;"	d	file:
ANNO_MARKER	.\libsndfile-1.0.17\src\svx.c	47;"	d	file:
APCM_inverse_quantization	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^static void APCM_inverse_quantization ($/;"	f	file:	signature:( register word * xMc, word mant, word expon, register word * xMp)
APCM_quantization	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^static void APCM_quantization ($/;"	f	file:	signature:( word * xM, word * xMc, word * mant_out, word * expon_out, word * xmaxc_out )
APCM_quantization_xmaxc_to_exp_mant	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^static void APCM_quantization_xmaxc_to_exp_mant ($/;"	f	file:	signature:( word xmaxc, word * expon_out, word * mant_out )
APPL_MARKER	.\libsndfile-1.0.17\src\aiff.c	43;"	d	file:
ARRAY_LEN	.\libsndfile-1.0.17\regtest\checksum.c	37;"	d	file:
ARRAY_LEN	.\libsndfile-1.0.17\src\common.h	73;"	d
ARRAY_LEN	.\libsndfile-1.0.17\tests\utils.h	35;"	d
ATAK_MARKER	.\libsndfile-1.0.17\src\svx.c	41;"	d	file:
AUTH_MARKER	.\libsndfile-1.0.17\src\aiff.c	47;"	d	file:
AUTH_MARKER	.\libsndfile-1.0.17\src\svx.c	46;"	d	file:
AU_DATA_OFFSET	.\libsndfile-1.0.17\src\au.c	37;"	d	file:
AU_ENCODING_ADPCM_G721_32	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_ADPCM_G721_32			= 23,	\/* G721 32 kbs ADPCM - 4 bits per sample. *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_ADPCM_G722	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_ADPCM_G722				= 24,	\/* G722 64 kbs ADPCM *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_ADPCM_G723_24	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_ADPCM_G723_24			= 25,	\/* G723 24 kbs ADPCM - 3 bits per sample. *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_ADPCM_G723_40	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_ADPCM_G723_40			= 26,	\/* G723 40 kbs ADPCM - 5 bits per sample. *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_ALAW_8	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_ALAW_8					= 27$/;"	e	enum:__anon19	file:
AU_ENCODING_COMPRESSED_EMPHASIZED	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_COMPRESSED_EMPHASIZED	= 20,	\/* A combination of the two above *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DISPLAY	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DISPLAY					= 16,	\/* non-audio display data *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DOUBLE	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DOUBLE					= 7,	\/* double-precision float samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DSP_COMMANDS	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DSP_COMMANDS			= 21,	\/* Music Kit DSP commands *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DSP_COMMANDS_SAMPLES	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DSP_COMMANDS_SAMPLES	= 22,	\/* ? *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DSP_CORE	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DSP_CORE				= 10,	\/* DSP program *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DSP_DATA_16	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DSP_DATA_16				= 12,	\/* 16-bit fixed-point samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DSP_DATA_24	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DSP_DATA_24				= 13,	\/* 24-bit fixed-point samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DSP_DATA_32	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DSP_DATA_32				= 14,	\/* 32-bit fixed-point samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_DSP_DATA_8	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_DSP_DATA_8				= 11,	\/* 8-bit fixed-point samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_EMPHASIZED	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_EMPHASIZED				= 18,	\/* 16-bit linear with emphasis *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_FLOAT	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_FLOAT					= 6,	\/* floating-point samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_INDIRECT	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_INDIRECT				= 8,	\/* fragmented sampled data *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_MULAW_SQUELCH	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_MULAW_SQUELCH			= 17,	\/* ? *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_NESTED	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_NESTED					= 9,	\/* ? *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_NEXT	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_NEXT					= 19,	\/* 16-bit linear with compression (NEXT) *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_PCM_16	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_PCM_16					= 3,	\/* 16-bit linear samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_PCM_24	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_PCM_24					= 4,	\/* 24-bit linear samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_PCM_32	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_PCM_32					= 5,	\/* 32-bit linear samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_PCM_8	.\libsndfile-1.0.17\src\au.c	/^	AU_ENCODING_PCM_8					= 2,	\/* 8-bit linear samples *\/$/;"	e	enum:__anon19	file:
AU_ENCODING_ULAW_8	.\libsndfile-1.0.17\src\au.c	/^{	AU_ENCODING_ULAW_8					= 1,	\/* 8-bit u-law samples *\/$/;"	e	enum:__anon19	file:
AU_FMT	.\libsndfile-1.0.17\src\au.c	/^} AU_FMT ;$/;"	t	typeref:struct:__anon20	file:
AVR_HDR_SIZE	.\libsndfile-1.0.17\src\avr.c	29;"	d	file:
AVR_HEADER	.\libsndfile-1.0.17\src\avr.c	/^} AVR_HEADER ;$/;"	t	typeref:struct:__anon21	file:
AdaptCoeff1	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static int AdaptCoeff1 [MSADPCM_ADAPT_COEFF_COUNT] =$/;"	v	file:
AdaptCoeff2	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static int AdaptCoeff2 [MSADPCM_ADAPT_COEFF_COUNT] =$/;"	v	file:
AdaptationTable	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static int AdaptationTable [] =$/;"	v	file:
Autocorrelation	.\libsndfile-1.0.17\src\GSM610\lpc.c	/^static void Autocorrelation ($/;"	f	file:	signature:( word * s, longword * L_ACF)
BEI2H_INT	.\libsndfile-1.0.17\src\sfendian.h	80;"	d
BEI2H_INT	.\libsndfile-1.0.17\src\sfendian.h	90;"	d
BES2H_SHORT	.\libsndfile-1.0.17\src\sfendian.h	79;"	d
BES2H_SHORT	.\libsndfile-1.0.17\src\sfendian.h	89;"	d
BET2H_INT_PTR	.\libsndfile-1.0.17\src\sfendian.h	103;"	d
BET2H_SHORT_PTR	.\libsndfile-1.0.17\src\sfendian.h	102;"	d
BIG_PRIME	.\libsndfile-1.0.17\regtest\checksum.c	35;"	d	file:
BITWIDTH2BYTES	.\libsndfile-1.0.17\src\common.h	65;"	d
BLOCK_COUNT	.\libsndfile-1.0.17\tests\benchmark.c	55;"	d	file:
BODY_MARKER	.\libsndfile-1.0.17\src\svx.c	39;"	d	file:
BUFFER	.\libsndfile-1.0.17\tests\fix_this.c	/^} BUFFER ;$/;"	t	typeref:union:__anon78	file:
BUFFER	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^} BUFFER ;$/;"	t	typeref:union:__anon80	file:
BUFFER	.\libsndfile-1.0.17\tests\pcm_test.c	/^} BUFFER ;$/;"	t	typeref:union:__anon81	file:
BUFFER	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^} BUFFER ;$/;"	t	typeref:union:__anon83	file:
BUFFER	.\libsndfile-1.0.17\tests\write_read_test.c	/^} BUFFER ;$/;"	t	typeref:union:__anon85	file:
BUFFER_COUNT	.\libsndfile-1.0.17\tests\largefile_test.c	34;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\examples\cooledit-fixer.c	27;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\examples\generate.c	28;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\examples\sfprocess.c	27;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\examples\sndfile-convert.c	27;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\examples\sndfile-info.c	27;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	27;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\examples\sndfile-play.c	60;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\command_test.c	36;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\dither_test.c	31;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\header_test.c	45;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\largefile_test.c	33;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\misc_test.c	45;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\peak_chunk_test.c	34;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\raw_test.c	34;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\stdin_test.c	34;"	d	file:
BUFFER_LEN	.\libsndfile-1.0.17\tests\string_test.c	34;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\src\G72x\g72x_test.c	32;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\alaw_test.c	32;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\benchmark.c	54;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\dwvw_test.c	34;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\error_test.c	33;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\fix_this.c	29;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\headerless_test.c	34;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\lossy_comp_test.c	34;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\pcm_test.c	34;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\scale_clip_test.c	40;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\sfversion.c	30;"	d	file:
BUFFER_SIZE	.\libsndfile-1.0.17\tests\ulaw_test.c	32;"	d	file:
BuffersInUse	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int			BuffersInUse ;$/;"	m	struct:__anon5	file:	access:public
CAF_PEAK_CHUNK_SIZE	.\libsndfile-1.0.17\src\caf.c	65;"	d	file:
CAT_MARKER	.\libsndfile-1.0.17\src\rx2.c	45;"	d	file:
CHAN_MARKER	.\libsndfile-1.0.17\src\svx.c	48;"	d	file:
CHAR_ERROR	.\libsndfile-1.0.17\tests\write_read_test.c	386;"	d	file:
CMP_0_ARGS	.\libsndfile-1.0.17\src\test_log_printf.c	34;"	d	file:
CMP_2_ARGS	.\libsndfile-1.0.17\src\test_log_printf.c	41;"	d	file:
CMP_4_ARGS	.\libsndfile-1.0.17\src\test_log_printf.c	48;"	d	file:
CMP_5_ARGS	.\libsndfile-1.0.17\src\test_log_printf.c	55;"	d	file:
CMP_6_ARGS	.\libsndfile-1.0.17\src\test_log_printf.c	62;"	d	file:
COMM_CHUNK	.\libsndfile-1.0.17\src\aiff.c	/^} COMM_CHUNK ;$/;"	t	typeref:struct:__anon10	file:
COMM_MARKER	.\libsndfile-1.0.17\src\aiff.c	39;"	d	file:
COMPILE_FULL_TEST	.\libsndfile-1.0.17\tests\win32_test.c	51;"	d	file:
COMPILE_FULL_TEST	.\libsndfile-1.0.17\tests\win32_test.c	62;"	d	file:
COMPILE_FULL_TEST	.\libsndfile-1.0.17\tests\win32_test.c	74;"	d	file:
COMPILE_FULL_TEST	.\libsndfile-1.0.17\tests\win32_test.c	76;"	d	file:
COMP_MARKER	.\libsndfile-1.0.17\src\rx2.c	57;"	d	file:
COMT_MARKER	.\libsndfile-1.0.17\src\aiff.c	49;"	d	file:
CONFIG_H	.\libsndfile-1.0.17\src\GSM610\config.h	8;"	d
CONVERT_DATA	.\libsndfile-1.0.17\tests\write_read_test.c	391;"	d	file:
Calculation_of_the_LTP_parameters	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^static void Calculation_of_the_LTP_parameters ($/;"	f	file:	signature:( register word * d, register word * dp, word * bc_out, word * Nc_out )
Calculation_of_the_LTP_parameters	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^static void Calculation_of_the_LTP_parameters ($/;"	f	file:	signature:( register word * din, register word * dp, word * bc_out, word * Nc_out )
Capabilities	.\libsndfile-1.0.17\doc\index.html	/^<A NAME="Capabilities"><\/A>$/;"	a
Capabilities	.\share\doc\libsndfile1-dev\html\index.html	/^<A NAME="Capabilities"><\/A>$/;"	a
Coefficients_0_12	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Coefficients_0_12 ($/;"	f	file:	signature:( register word * LARpp_j_1, register word * LARpp_j, register word * LARp)
Coefficients_13_26	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Coefficients_13_26 ($/;"	f	file:	signature:( register word * LARpp_j_1, register word * LARpp_j, register word * LARp)
Coefficients_27_39	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Coefficients_27_39 ($/;"	f	file:	signature:( register word * LARpp_j_1, register word * LARpp_j, register word * LARp)
Coefficients_40_159	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Coefficients_40_159 ($/;"	f	file:	signature:( register word * LARpp_j, register word * LARp)
Cut_Calculation_of_the_LTP_parameters	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^static void Cut_Calculation_of_the_LTP_parameters ($/;"	f	file:	signature:( struct gsm_state * st, register word * d, register word * dp, word * bc_out, word * Nc_out )
Cut_Fast_Calculation_of_the_LTP_parameters	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^static void Cut_Fast_Calculation_of_the_LTP_parameters ($/;"	f	file:	signature:( struct gsm_state * st, register word * d, register word * dp, word * bc_out, word * Nc_out )
DATA_LENGTH	.\libsndfile-1.0.17\tests\multi_file_test.c	42;"	d	file:
DATA_LENGTH	.\libsndfile-1.0.17\tests\write_read_test.c	41;"	d	file:
DECAY_COUNT	.\libsndfile-1.0.17\src\G72x\g72x_test.c	145;"	d	file:
DECAY_COUNT	.\libsndfile-1.0.17\tests\fix_this.c	276;"	d	file:
DECAY_COUNT	.\libsndfile-1.0.17\tests\lossy_comp_test.c	2023;"	d	file:
DESC_CHUNK	.\libsndfile-1.0.17\src\caf.c	/^} DESC_CHUNK ;$/;"	t	typeref:struct:__anon22	file:
DEVL_MARKER	.\libsndfile-1.0.17\src\rx2.c	53;"	d	file:
DFIL_MARKER	.\libsndfile-1.0.17\src\wve.c	49;"	d	file:
DFT_DATA_LENGTH	.\libsndfile-1.0.17\tests\dft_cmp.h	20;"	d
DFT_SPEC_LENGTH	.\libsndfile-1.0.17\tests\dft_cmp.c	30;"	d	file:
DISP_MARKER	.\libsndfile-1.0.17\src\wav.c	59;"	d	file:
DITHER_DATA	.\libsndfile-1.0.17\src\dither.c	/^} DITHER_DATA ;$/;"	t	typeref:struct:__anon31	file:
DLL_NAME	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	50;"	d	file:
DLL_NAME	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	52;"	d	file:
DNSDOT_MARKER	.\libsndfile-1.0.17\src\au.c	35;"	d	file:
DOTSND_MARKER	.\libsndfile-1.0.17\src\au.c	34;"	d	file:
DOUBLE64_READ	.\libsndfile-1.0.17\src\double64.c	31;"	d	file:
DOUBLE64_READ	.\libsndfile-1.0.17\src\double64.c	34;"	d	file:
DOUBLE64_WRITE	.\libsndfile-1.0.17\src\double64.c	32;"	d	file:
DOUBLE64_WRITE	.\libsndfile-1.0.17\src\double64.c	35;"	d	file:
DOUBLE_BROKEN_BE	.\libsndfile-1.0.17\src\double64.c	/^	DOUBLE_BROKEN_BE	= 0x56$/;"	e	enum:__anon32	file:
DOUBLE_BROKEN_LE	.\libsndfile-1.0.17\src\double64.c	/^	DOUBLE_BROKEN_LE	= 0x45,$/;"	e	enum:__anon32	file:
DOUBLE_CAN_RW_BE	.\libsndfile-1.0.17\src\double64.c	/^	DOUBLE_CAN_RW_BE	= 0x34,$/;"	e	enum:__anon32	file:
DOUBLE_CAN_RW_LE	.\libsndfile-1.0.17\src\double64.c	/^	DOUBLE_CAN_RW_LE	= 0x23,$/;"	e	enum:__anon32	file:
DOUBLE_UNKNOWN	.\libsndfile-1.0.17\src\double64.c	/^{	DOUBLE_UNKNOWN		= 0x00,$/;"	e	enum:__anon32	file:
DWD_HEADER	.\libsndfile-1.0.17\src\dwd.c	/^} DWD_HEADER ;$/;"	t	typeref:struct:__anon33	file:
DWD_HEADER_LEN	.\libsndfile-1.0.17\src\dwd.c	52;"	d	file:
DWD_IDENTIFIER	.\libsndfile-1.0.17\src\dwd.c	49;"	d	file:
DWD_IDENTIFIER_LEN	.\libsndfile-1.0.17\src\dwd.c	50;"	d	file:
DWORD_PTR	.\libsndfile-1.0.17\examples\sndfile-play.c	716;"	d	file:
DWVW_MARKER	.\libsndfile-1.0.17\src\aiff.c	74;"	d	file:
DWVW_PRIVATE	.\libsndfile-1.0.17\src\dwvw.c	/^} DWVW_PRIVATE ;$/;"	t	typeref:struct:__anon34	file:
Decoding_of_the_coded_Log_Area_Ratios	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Decoding_of_the_coded_Log_Area_Ratios ($/;"	f	file:	signature:( word * LARc, word * LARpp)
Download	.\libsndfile-1.0.17\doc\index.html	/^<A NAME="Download"><\/A>$/;"	a
Download	.\share\doc\libsndfile1-dev\html\index.html	/^<A NAME="Download"><\/A>$/;"	a
ENC_BUFFER_SIZE	.\libsndfile-1.0.17\src\flac.c	53;"	d	file:
ENDSWAP_INT	.\libsndfile-1.0.17\src\sfendian.h	44;"	d
ENDSWAP_INT	.\libsndfile-1.0.17\src\sfendian.h	49;"	d
ENDSWAP_SHORT	.\libsndfile-1.0.17\src\sfendian.h	43;"	d
ENDSWAP_SHORT	.\libsndfile-1.0.17\src\sfendian.h	48;"	d
EQ_MARKER	.\libsndfile-1.0.17\src\rx2.c	56;"	d	file:
ERROR_666	.\libsndfile-1.0.17\src\txw.c	97;"	d	file:
EXTENSIBLE_WAV_FMT	.\libsndfile-1.0.17\src\wav_w64.h	/^} EXTENSIBLE_WAV_FMT ;$/;"	t	typeref:struct:__anon73
EXT_SUBFORMAT	.\libsndfile-1.0.17\src\wav_w64.h	/^} EXT_SUBFORMAT ;$/;"	t	typeref:struct:__anon72
ErrorStruct	.\libsndfile-1.0.17\src\sndfile.c	/^} ErrorStruct ;$/;"	t	typeref:struct:__anon53	file:
Event	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	HANDLE		Event ;			\/* signal that a buffer is free *\/$/;"	m	struct:__anon5	file:	access:public
FACT_CHUNK	.\libsndfile-1.0.17\src\wav_w64.h	/^} FACT_CHUNK ;$/;"	t	typeref:struct:__anon75
FAP_MARKER	.\libsndfile-1.0.17\src\paf.c	36;"	d	file:
FAST	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	12;"	d
FILETYPE	.\libsndfile-1.0.17\tests\pipe_test.c	/^} FILETYPE ;$/;"	t	typeref:struct:__anon82	file:
FILTER	.\libsndfile-1.0.17\src\GSM610\short_term.c	349;"	d	file:
FILTER	.\libsndfile-1.0.17\src\GSM610\short_term.c	351;"	d	file:
FILTER	.\libsndfile-1.0.17\src\GSM610\short_term.c	392;"	d	file:
FILTER	.\libsndfile-1.0.17\src\GSM610\short_term.c	395;"	d	file:
FL32_MARKER	.\libsndfile-1.0.17\src\aiff.c	65;"	d	file:
FL64_MARKER	.\libsndfile-1.0.17\src\aiff.c	67;"	d	file:
FLAC_PRIVATE	.\libsndfile-1.0.17\src\flac.c	/^} FLAC_PRIVATE ;$/;"	t	typeref:struct:__anon37	file:
FLOAT32_READ	.\libsndfile-1.0.17\src\float32.c	31;"	d	file:
FLOAT32_READ	.\libsndfile-1.0.17\src\float32.c	34;"	d	file:
FLOAT32_WRITE	.\libsndfile-1.0.17\src\float32.c	32;"	d	file:
FLOAT32_WRITE	.\libsndfile-1.0.17\src\float32.c	35;"	d	file:
FLOAT_BROKEN_BE	.\libsndfile-1.0.17\src\float32.c	/^	FLOAT_BROKEN_BE		= 0x45$/;"	e	enum:__anon38	file:
FLOAT_BROKEN_LE	.\libsndfile-1.0.17\src\float32.c	/^	FLOAT_BROKEN_LE		= 0x34,$/;"	e	enum:__anon38	file:
FLOAT_CAN_RW_BE	.\libsndfile-1.0.17\src\float32.c	/^	FLOAT_CAN_RW_BE		= 0x23,$/;"	e	enum:__anon38	file:
FLOAT_CAN_RW_LE	.\libsndfile-1.0.17\src\float32.c	/^	FLOAT_CAN_RW_LE		= 0x12,$/;"	e	enum:__anon38	file:
FLOAT_CAST_HEADER	.\libsndfile-1.0.17\src\float_cast.h	22;"	d
FLOAT_ERROR	.\libsndfile-1.0.17\tests\write_read_test.c	389;"	d	file:
FLOAT_UNKNOWN	.\libsndfile-1.0.17\src\float32.c	/^{	FLOAT_UNKNOWN		= 0x00,$/;"	e	enum:__anon38	file:
FMT_INT	.\libsndfile-1.0.17\src\test_endswap.c	35;"	d	file:
FMT_INT64	.\libsndfile-1.0.17\src\test_endswap.c	38;"	d	file:
FMT_INT64	.\libsndfile-1.0.17\src\test_endswap.c	40;"	d	file:
FMT_SHORT	.\libsndfile-1.0.17\src\test_endswap.c	34;"	d	file:
FORMAT_TYPE	.\libsndfile-1.0.17\src\wav_w64.c	357;"	d	file:
FORM_MARKER	.\libsndfile-1.0.17\src\aiff.c	36;"	d	file:
FORM_MARKER	.\libsndfile-1.0.17\src\svx.c	35;"	d	file:
FSTAT	.\libsndfile-1.0.17\tests\win32_test.c	44;"	d	file:
FSTAT	.\libsndfile-1.0.17\tests\win32_test.c	55;"	d	file:
FSTAT	.\libsndfile-1.0.17\tests\win32_test.c	66;"	d	file:
FVER_MARKER	.\libsndfile-1.0.17\src\aiff.c	50;"	d	file:
Fast_Autocorrelation	.\libsndfile-1.0.17\src\GSM610\lpc.c	/^static void Fast_Autocorrelation ($/;"	f	file:	signature:( word * s, longword * L_ACF)
Fast_Calculation_of_the_LTP_parameters	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^static void Fast_Calculation_of_the_LTP_parameters ($/;"	f	file:	signature:( register word * din, register word * dp, word * bc_out, word * Nc_out )
Fast_Short_term_analysis_filtering	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Fast_Short_term_analysis_filtering ($/;"	f	file:	signature:( struct gsm_state * S, register word * rp, register int k_n, register word * s )
Fast_Short_term_synthesis_filtering	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Fast_Short_term_synthesis_filtering ($/;"	f	file:	signature:( struct gsm_state * S, register word * rrp, register int k, register word * wt, register word * sr )
Features	.\libsndfile-1.0.17\doc\index.html	/^<A NAME="Features"><\/A>$/;"	a
Features	.\share\doc\libsndfile1-dev\html\index.html	/^<A NAME="Features"><\/A>$/;"	a
G721_32_BITS_PER_SAMPLE	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G721_32_BITS_PER_SAMPLE = 4,$/;"	e	enum:__anon39
G721_32_BYTES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G721_32_BYTES_PER_BLOCK = (G721_32_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon39
G721_32_SAMPLES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G721_32_SAMPLES_PER_BLOCK = G72x_BLOCK_SIZE,$/;"	e	enum:__anon39
G721_40_BITS_PER_SAMPLE	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G721_40_BITS_PER_SAMPLE = 5,$/;"	e	enum:__anon39
G721_40_BYTES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G721_40_BYTES_PER_BLOCK = (G721_40_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8$/;"	e	enum:__anon39
G721_40_SAMPLES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G721_40_SAMPLES_PER_BLOCK = G721_40_BITS_PER_SAMPLE * (G72x_BLOCK_SIZE \/ G721_40_BITS_PER_SAMPLE),$/;"	e	enum:__anon39
G723_16_BITS_PER_SAMPLE	.\libsndfile-1.0.17\src\G72x\g72x.h	/^{	G723_16_BITS_PER_SAMPLE = 2,$/;"	e	enum:__anon39
G723_16_BYTES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_16_BYTES_PER_BLOCK = (G723_16_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon39
G723_16_SAMPLES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_16_SAMPLES_PER_BLOCK = G72x_BLOCK_SIZE,$/;"	e	enum:__anon39
G723_24_BITS_PER_SAMPLE	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_24_BITS_PER_SAMPLE = 3,$/;"	e	enum:__anon39
G723_24_BYTES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_24_BYTES_PER_BLOCK = (G723_24_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon39
G723_24_SAMPLES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_24_SAMPLES_PER_BLOCK = G723_24_BITS_PER_SAMPLE * (G72x_BLOCK_SIZE \/ G723_24_BITS_PER_SAMPLE),$/;"	e	enum:__anon39
G723_40_BITS_PER_SAMPLE	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_40_BITS_PER_SAMPLE = 5,$/;"	e	enum:__anon39
G723_40_BYTES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_40_BYTES_PER_BLOCK = (G723_40_BITS_PER_SAMPLE * G72x_BLOCK_SIZE) \/ 8,$/;"	e	enum:__anon39
G723_40_SAMPLES_PER_BLOCK	.\libsndfile-1.0.17\src\G72x\g72x.h	/^	G723_40_SAMPLES_PER_BLOCK = G723_40_BITS_PER_SAMPLE * (G72x_BLOCK_SIZE \/ G723_40_BITS_PER_SAMPLE),$/;"	e	enum:__anon39
G72X_HEADER_FILE	.\libsndfile-1.0.17\src\G72x\g72x.h	26;"	d
G72X_PRIVATE_H	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	28;"	d
G72x_ADPCM_WAV_FMT	.\libsndfile-1.0.17\src\wav_w64.h	/^} G72x_ADPCM_WAV_FMT ;$/;"	t	typeref:struct:__anon70
G72x_BLOCK_SIZE	.\libsndfile-1.0.17\src\G72x\g72x.h	32;"	d
G72x_PRIVATE	.\libsndfile-1.0.17\src\g72x.c	/^} G72x_PRIVATE ;$/;"	t	typeref:struct:__anon40	file:
G72x_STATE	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^typedef struct g72x_state G72x_STATE ;$/;"	t	typeref:struct:g72x_state
G72x_STATE	.\libsndfile-1.0.17\src\g72x.c	/^typedef struct g72x_state G72x_STATE ;$/;"	t	typeref:struct:g72x_state	file:
GET_BE_3BYTE	.\libsndfile-1.0.17\src\common.c	771;"	d	file:
GET_BE_8BYTE	.\libsndfile-1.0.17\src\common.c	783;"	d	file:
GET_BE_8BYTE	.\libsndfile-1.0.17\src\common.c	791;"	d	file:
GET_BE_INT	.\libsndfile-1.0.17\src\common.c	776;"	d	file:
GET_BE_SHORT	.\libsndfile-1.0.17\src\common.c	768;"	d	file:
GET_LE_3BYTE	.\libsndfile-1.0.17\src\common.c	770;"	d	file:
GET_LE_8BYTE	.\libsndfile-1.0.17\src\common.c	780;"	d	file:
GET_LE_8BYTE	.\libsndfile-1.0.17\src\common.c	786;"	d	file:
GET_LE_INT	.\libsndfile-1.0.17\src\common.c	773;"	d	file:
GET_LE_SHORT	.\libsndfile-1.0.17\src\common.c	767;"	d	file:
GET_MARKER	.\libsndfile-1.0.17\src\common.c	756;"	d	file:
GET_MARKER	.\libsndfile-1.0.17\src\common.c	760;"	d	file:
GLOB_MARKER	.\libsndfile-1.0.17\src\rx2.c	46;"	d	file:
GSM610_BLOCKSIZE	.\libsndfile-1.0.17\src\gsm610.c	32;"	d	file:
GSM610_PRIVATE	.\libsndfile-1.0.17\src\gsm610.c	/^} GSM610_PRIVATE ;$/;"	t	typeref:struct:gsm610_tag	file:
GSM610_SAMPLES	.\libsndfile-1.0.17\src\gsm610.c	33;"	d	file:
GSM610_WAV_FMT	.\libsndfile-1.0.17\src\wav_w64.h	/^} GSM610_WAV_FMT ;$/;"	t	typeref:struct:__anon71
GSM_ABS	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^GSM_ABS (word a)$/;"	f	signature:(word a)
GSM_ADD	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^GSM_ADD (word a, word b)$/;"	f	signature:(word a, word b)
GSM_H	.\libsndfile-1.0.17\src\GSM610\gsm.h	8;"	d
GSM_L_ADD	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^GSM_L_ADD (longword a, longword b)$/;"	f	signature:(longword a, longword b)
GSM_L_MULT	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^GSM_L_MULT (word a, word b)$/;"	f	signature:(word a, word b)
GSM_MAGIC	.\libsndfile-1.0.17\src\GSM610\gsm.h	21;"	d
GSM_MAJOR	.\libsndfile-1.0.17\src\GSM610\gsm.h	25;"	d
GSM_MARKER	.\libsndfile-1.0.17\src\aiff.c	75;"	d	file:
GSM_MINOR	.\libsndfile-1.0.17\src\GSM610\gsm.h	24;"	d
GSM_MULT	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^GSM_MULT (word a, word b)$/;"	f	signature:(word a, word b)
GSM_MULT_R	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^GSM_MULT_R (word a, word b)$/;"	f	signature:(word a, word b)
GSM_OPT_FAST	.\libsndfile-1.0.17\src\GSM610\gsm.h	28;"	d
GSM_OPT_FRAME_CHAIN	.\libsndfile-1.0.17\src\GSM610\gsm.h	32;"	d
GSM_OPT_FRAME_INDEX	.\libsndfile-1.0.17\src\GSM610\gsm.h	31;"	d
GSM_OPT_LTP_CUT	.\libsndfile-1.0.17\src\GSM610\gsm.h	29;"	d
GSM_OPT_VERBOSE	.\libsndfile-1.0.17\src\GSM610\gsm.h	27;"	d
GSM_OPT_WAV49	.\libsndfile-1.0.17\src\GSM610\gsm.h	30;"	d
GSM_PATCHLEVEL	.\libsndfile-1.0.17\src\GSM610\gsm.h	23;"	d
GSM_STATE	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^typedef struct gsm_state GSM_STATE ;$/;"	t	typeref:struct:gsm_state
GSM_SUB	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^GSM_SUB (word a, word b)$/;"	f	signature:(word a, word b)
GSM_TABLE_C	.\libsndfile-1.0.17\src\GSM610\table.c	16;"	d	file:
Gsm_Coder	.\libsndfile-1.0.17\src\GSM610\code.c	/^void Gsm_Coder ($/;"	f	signature:( struct gsm_state * State, word * s, word * LARc, word * Nc, word * bc, word * Mc, word * xmaxc, word * xMc )
Gsm_Coder	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Coder ($/;"	p	signature:( struct gsm_state * S, word * s, word * LARc, word * Nc, word * bc, word * Mc, word * xmaxc, word * xMc)
Gsm_Decoder	.\libsndfile-1.0.17\src\GSM610\decode.c	/^void Gsm_Decoder ($/;"	f	signature:( struct gsm_state * S, word * LARcr, word * Ncr, word * bcr, word * Mcr, word * xmaxcr, word * xMcr, word * s)
Gsm_Decoder	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Decoder ($/;"	p	signature:( struct gsm_state * S, word * LARcr, word * Ncr, word * bcr, word * Mcr, word * xmaxcr, word * xMcr, word * s)
Gsm_Decoding	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Decoding ($/;"	p	signature:( struct gsm_state * S, word xmaxcr, word Mcr, word * xMcr, word * erp)
Gsm_Encoding	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Encoding ($/;"	p	signature:( struct gsm_state * S, word * e, word * ep, word * xmaxc, word * Mc, word * xMc)
Gsm_LPC_Analysis	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_LPC_Analysis ($/;"	p	signature:( struct gsm_state * S, word * s, word * LARc)
Gsm_LPC_Analysis	.\libsndfile-1.0.17\src\GSM610\lpc.c	/^void Gsm_LPC_Analysis ($/;"	f	signature:( struct gsm_state *S, word * s, word * LARc)
Gsm_Long_Term_Predictor	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Long_Term_Predictor (		\/* 4x for 160 samples *\/$/;"	p	signature:( struct gsm_state * S, word * d, word * dp, word * e, word * dpp, word * Nc, word * bc)
Gsm_Long_Term_Predictor	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^void Gsm_Long_Term_Predictor (	\/* 4x for 160 samples *\/$/;"	f	signature:( struct gsm_state * S, word * d, word * dp, word * e, word * dpp, word * Nc, word * bc )
Gsm_Long_Term_Synthesis_Filtering	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Long_Term_Synthesis_Filtering ($/;"	p	signature:( struct gsm_state* S, word Ncr, word bcr, word * erp, word * drp)
Gsm_Long_Term_Synthesis_Filtering	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^void Gsm_Long_Term_Synthesis_Filtering ($/;"	f	signature:( struct gsm_state * S, word Ncr, word bcr, register word * erp, register word * drp )
Gsm_Preprocess	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Preprocess ($/;"	p	signature:( struct gsm_state * S, word * s, word * so)
Gsm_Preprocess	.\libsndfile-1.0.17\src\GSM610\preprocess.c	/^void Gsm_Preprocess ($/;"	f	signature:( struct gsm_state * S, word * s, word * so )
Gsm_RPE_Decoding	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_RPE_Decoding ($/;"	p	signature:( word xmaxcr, word Mcr, word * xMcr, word * erp)
Gsm_RPE_Decoding	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^void Gsm_RPE_Decoding ($/;"	f	signature:( word xmaxcr, word Mcr, word * xMcr, word * erp )
Gsm_RPE_Encoding	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_RPE_Encoding ($/;"	p	signature:( word * e, word * xmaxc, word * Mc, word * xMc)
Gsm_RPE_Encoding	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^void Gsm_RPE_Encoding ($/;"	f	signature:( word * e, word * xmaxc, word * Mc, word * xMc)
Gsm_Short_Term_Analysis_Filter	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Short_Term_Analysis_Filter ($/;"	p	signature:( struct gsm_state * S, word * LARc, word * d)
Gsm_Short_Term_Analysis_Filter	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^void Gsm_Short_Term_Analysis_Filter ($/;"	f	signature:( struct gsm_state * S, word * LARc, word * s )
Gsm_Short_Term_Synthesis_Filter	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Short_Term_Synthesis_Filter ($/;"	p	signature:( struct gsm_state * S, word * LARcr, word * drp, word * s)
Gsm_Short_Term_Synthesis_Filter	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^void Gsm_Short_Term_Synthesis_Filter ($/;"	f	signature:( struct gsm_state * S, word * LARcr, word * wt, word * s )
Gsm_Update_of_reconstructed_short_time_residual_signal	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^void Gsm_Update_of_reconstructed_short_time_residual_signal ($/;"	p	signature:( word * dpp, word * ep, word * dp)
H2BE_INT	.\libsndfile-1.0.17\src\sfendian.h	83;"	d
H2BE_SHORT	.\libsndfile-1.0.17\src\sfendian.h	82;"	d
H2LE_INT	.\libsndfile-1.0.17\src\sfendian.h	93;"	d
H2LE_SHORT	.\libsndfile-1.0.17\src\sfendian.h	92;"	d
HALF_BUFFER_SIZE	.\libsndfile-1.0.17\tests\scale_clip_test.c	39;"	d	file:
HAS_CHMOD	.\libsndfile-1.0.17\src\GSM610\config.h	15;"	d
HAS_CHOWN	.\libsndfile-1.0.17\src\GSM610\config.h	17;"	d
HAS_FCHMOD	.\libsndfile-1.0.17\src\GSM610\config.h	14;"	d
HAS_FCHOWN	.\libsndfile-1.0.17\src\GSM610\config.h	16;"	d
HAS_FCNTL_H	.\libsndfile-1.0.17\src\GSM610\config.h	11;"	d
HAS_FSTAT	.\libsndfile-1.0.17\src\GSM610\config.h	13;"	d
HAS_STDLIB_H	.\libsndfile-1.0.17\src\GSM610\config.h	10;"	d
HAS_STRING_H	.\libsndfile-1.0.17\src\GSM610\config.h	19;"	d
HAS_UNISTD_H	.\libsndfile-1.0.17\src\GSM610\config.h	21;"	d
HAS_UTIME	.\libsndfile-1.0.17\src\GSM610\config.h	22;"	d
HAS_UTIME_H	.\libsndfile-1.0.17\src\GSM610\config.h	23;"	d
HAVE_AIFC	.\libsndfile-1.0.17\src\aiff.c	/^	HAVE_AIFC		= 0x04,$/;"	e	enum:__anon9	file:
HAVE_AIFF	.\libsndfile-1.0.17\src\aiff.c	/^	HAVE_AIFF		= 0x02,$/;"	e	enum:__anon9	file:
HAVE_ALSA_ASOUNDLIB_H	.\libsndfile-1.0.17\src\sfconfig.h	41;"	d
HAVE_BODY	.\libsndfile-1.0.17\src\svx.c	/^	HAVE_BODY	= 0x08$/;"	e	enum:__anon55	file:
HAVE_BYTESWAP_H	.\libsndfile-1.0.17\src\sfconfig.h	45;"	d
HAVE_COMM	.\libsndfile-1.0.17\src\aiff.c	/^	HAVE_COMM		= 0x10,$/;"	e	enum:__anon9	file:
HAVE_DECL_S_IRGRP	.\libsndfile-1.0.17\src\sfconfig.h	49;"	d
HAVE_ENDIAN_H	.\libsndfile-1.0.17\src\sfconfig.h	53;"	d
HAVE_FORM	.\libsndfile-1.0.17\src\aiff.c	/^{	HAVE_FORM		= 0x01,$/;"	e	enum:__anon9	file:
HAVE_FORM	.\libsndfile-1.0.17\src\svx.c	/^	HAVE_FORM	= 0x01,$/;"	e	enum:__anon55	file:
HAVE_FSYNC	.\libsndfile-1.0.17\src\sfconfig.h	57;"	d
HAVE_FVER	.\libsndfile-1.0.17\src\aiff.c	/^	HAVE_FVER		= 0x08,$/;"	e	enum:__anon9	file:
HAVE_LOCALE_H	.\libsndfile-1.0.17\src\sfconfig.h	61;"	d
HAVE_LRINT	.\libsndfile-1.0.17\src\sfconfig.h	65;"	d
HAVE_LRINTF	.\libsndfile-1.0.17\src\sfconfig.h	69;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	126;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	127;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	164;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	165;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	200;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	201;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	56;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	80;"	d
HAVE_LRINT_REPLACEMENT	.\libsndfile-1.0.17\src\float_cast.h	81;"	d
HAVE_MMAP	.\libsndfile-1.0.17\src\sfconfig.h	73;"	d
HAVE_PEAK	.\libsndfile-1.0.17\src\wav.c	/^	HAVE_PEAK	= 0x10,$/;"	e	enum:__anon62	file:
HAVE_PREAD	.\libsndfile-1.0.17\src\sfconfig.h	77;"	d
HAVE_PWRITE	.\libsndfile-1.0.17\src\sfconfig.h	81;"	d
HAVE_RIFF	.\libsndfile-1.0.17\src\wav.c	/^{	HAVE_RIFF	= 0x01,$/;"	e	enum:__anon62	file:
HAVE_SETLOCALE	.\libsndfile-1.0.17\src\sfconfig.h	85;"	d
HAVE_SQLITE3	.\libsndfile-1.0.17\src\sfconfig.h	89;"	d
HAVE_SSND	.\libsndfile-1.0.17\src\aiff.c	/^	HAVE_SSND		= 0x20$/;"	e	enum:__anon9	file:
HAVE_STDINT_H	.\libsndfile-1.0.17\src\sfconfig.h	93;"	d
HAVE_SVX	.\libsndfile-1.0.17\src\svx.c	/^	HAVE_SVX	= 0x02,$/;"	e	enum:__anon55	file:
HAVE_UNISTD_H	.\libsndfile-1.0.17\src\sfconfig.h	97;"	d
HAVE_VHDR	.\libsndfile-1.0.17\src\svx.c	/^	HAVE_VHDR	= 0x04,$/;"	e	enum:__anon55	file:
HAVE_WAVE	.\libsndfile-1.0.17\src\wav.c	/^	HAVE_WAVE	= 0x02,$/;"	e	enum:__anon62	file:
HAVE_data	.\libsndfile-1.0.17\src\w64.c	/^	HAVE_data	= 0x20$/;"	e	enum:__anon61	file:
HAVE_data	.\libsndfile-1.0.17\src\wav.c	/^	HAVE_data	= 0x20,$/;"	e	enum:__anon62	file:
HAVE_fact	.\libsndfile-1.0.17\src\w64.c	/^	HAVE_fact	= 0x08,$/;"	e	enum:__anon61	file:
HAVE_fact	.\libsndfile-1.0.17\src\wav.c	/^	HAVE_fact	= 0x08,$/;"	e	enum:__anon62	file:
HAVE_fmt	.\libsndfile-1.0.17\src\w64.c	/^	HAVE_fmt	= 0x04,$/;"	e	enum:__anon61	file:
HAVE_fmt	.\libsndfile-1.0.17\src\wav.c	/^	HAVE_fmt	= 0x04,$/;"	e	enum:__anon62	file:
HAVE_other	.\libsndfile-1.0.17\src\wav.c	/^	HAVE_other	= 0x80000000$/;"	e	enum:__anon62	file:
HAVE_riff	.\libsndfile-1.0.17\src\w64.c	/^{	HAVE_riff	= 0x01,$/;"	e	enum:__anon61	file:
HAVE_wave	.\libsndfile-1.0.17\src\w64.c	/^	HAVE_wave	= 0x02,$/;"	e	enum:__anon61	file:
HIGHEST_BIT	.\libsndfile-1.0.17\src\dwvw.c	466;"	d	file:
History	.\libsndfile-1.0.17\doc\index.html	/^<A NAME="History"><\/A>$/;"	a
History	.\share\doc\libsndfile1-dev\html\index.html	/^<A NAME="History"><\/A>$/;"	a
IARL_MARKER	.\libsndfile-1.0.17\src\wav.c	70;"	d	file:
IART_MARKER	.\libsndfile-1.0.17\src\wav.c	71;"	d	file:
IART_MARKER	.\libsndfile-1.0.17\src\wav.c	74;"	d	file:
IBM_FORMAT_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	IBM_FORMAT_ADPCM					= 0x0103,		\/* IBM AVC Adaptive Differential PCM format *\/$/;"	e	enum:__anon64
IBM_FORMAT_ALAW	.\libsndfile-1.0.17\src\wav_w64.h	/^	IBM_FORMAT_ALAW						= 0x0102,		\/* IBM a-law format *\/$/;"	e	enum:__anon64
IBM_FORMAT_MULAW	.\libsndfile-1.0.17\src\wav_w64.h	/^	IBM_FORMAT_MULAW					= 0x0101,		\/* IBM mu-law format *\/$/;"	e	enum:__anon64
ICMT_MARKER	.\libsndfile-1.0.17\src\wav.c	79;"	d	file:
ICOP_MARKER	.\libsndfile-1.0.17\src\wav.c	69;"	d	file:
ICOP_MARKER	.\libsndfile-1.0.17\src\wav.c	75;"	d	file:
ICRD_MARKER	.\libsndfile-1.0.17\src\wav.c	68;"	d	file:
ID	.\libsndfile-1.0.17\src\wav_w64.c	/^{	int			ID ;$/;"	m	struct:__anon63	file:	access:public
IDELTA_COUNT	.\libsndfile-1.0.17\src\ms_adpcm.c	792;"	d	file:
IENG_MARKER	.\libsndfile-1.0.17\src\wav.c	73;"	d	file:
IMA_ADPCM_PRIVATE	.\libsndfile-1.0.17\src\ima_adpcm.c	/^} IMA_ADPCM_PRIVATE ;$/;"	t	typeref:struct:IMA_ADPCM_PRIVATE_tag	file:
IMA_ADPCM_PRIVATE_tag	.\libsndfile-1.0.17\src\ima_adpcm.c	/^typedef struct IMA_ADPCM_PRIVATE_tag$/;"	s	file:
IMA_ADPCM_PRIVATE_tag::block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	unsigned char	*block ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::blockcount	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				blockcount, samplecount ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::blocks	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::blocksize	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::channels	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::data	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	short			data	[0] ; \/* This is a hack and might not work. *\/$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::data	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	short			data	[] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::decode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^{	int 			(*decode_block) (SF_PRIVATE *psf, struct IMA_ADPCM_PRIVATE_tag *pima) ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::encode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int 			(*encode_block) (SF_PRIVATE *psf, struct IMA_ADPCM_PRIVATE_tag *pima) ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::previous	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				previous [2] ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::samplecount	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				blockcount, samplecount ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::samples	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	short			*samples ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::samplesperblock	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_PRIVATE_tag::stepindx	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				stepindx [2] ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
IMA_ADPCM_WAV_FMT	.\libsndfile-1.0.17\src\wav_w64.h	/^} IMA_ADPCM_WAV_FMT ;$/;"	t	typeref:struct:__anon69
IM_MARKER	.\libsndfile-1.0.17\src\mat5.c	44;"	d	file:
INAM_MARKER	.\libsndfile-1.0.17\src\wav.c	72;"	d	file:
INFO_MARKER	.\libsndfile-1.0.17\src\wav.c	49;"	d	file:
INST_CHUNK	.\libsndfile-1.0.17\src\aiff.c	/^} INST_CHUNK ;$/;"	t	typeref:struct:__anon13	file:
INST_LOOP	.\libsndfile-1.0.17\src\aiff.c	/^} INST_LOOP ;$/;"	t	typeref:struct:__anon12	file:
INST_MARKER	.\libsndfile-1.0.17\src\aiff.c	42;"	d	file:
INT64	.\libsndfile-1.0.17\tests\win32_test.c	/^	typedef		__int64				INT64 ;$/;"	t	file:
INT64	.\libsndfile-1.0.17\tests\win32_test.c	/^	typedef		off_t				INT64 ;$/;"	t	file:
INT64	.\libsndfile-1.0.17\tests\win32_test.c	/^	typedef		sf_count_t		INT64 ;$/;"	t	file:
INTERLEAVE_CHANNELS	.\libsndfile-1.0.17\src\interleave.c	26;"	d	file:
INTERLEAVE_DATA	.\libsndfile-1.0.17\src\interleave.c	/^} INTERLEAVE_DATA ;$/;"	t	typeref:struct:__anon41	file:
INT_ERROR	.\libsndfile-1.0.17\tests\write_read_test.c	387;"	d	file:
IPRD_MARKER	.\libsndfile-1.0.17\src\wav.c	76;"	d	file:
IRCAM_02B_MARKER	.\libsndfile-1.0.17\src\ircam.c	44;"	d	file:
IRCAM_03L_MARKER	.\libsndfile-1.0.17\src\ircam.c	45;"	d	file:
IRCAM_ALAW	.\libsndfile-1.0.17\src\ircam.c	/^	IRCAM_ALAW		= 0x10001,$/;"	e	enum:__anon42	file:
IRCAM_BE_MARKER	.\libsndfile-1.0.17\src\ircam.c	39;"	d	file:
IRCAM_BE_MASK	.\libsndfile-1.0.17\src\ircam.c	38;"	d	file:
IRCAM_DATA_OFFSET	.\libsndfile-1.0.17\src\ircam.c	47;"	d	file:
IRCAM_FLOAT	.\libsndfile-1.0.17\src\ircam.c	/^	IRCAM_FLOAT		= 0x00004,$/;"	e	enum:__anon42	file:
IRCAM_LE_MARKER	.\libsndfile-1.0.17\src\ircam.c	42;"	d	file:
IRCAM_LE_MASK	.\libsndfile-1.0.17\src\ircam.c	41;"	d	file:
IRCAM_PCM_16	.\libsndfile-1.0.17\src\ircam.c	/^{	IRCAM_PCM_16	= 0x00002,$/;"	e	enum:__anon42	file:
IRCAM_PCM_32	.\libsndfile-1.0.17\src\ircam.c	/^	IRCAM_PCM_32	= 0x40004$/;"	e	enum:__anon42	file:
IRCAM_ULAW	.\libsndfile-1.0.17\src\ircam.c	/^	IRCAM_ULAW		= 0x20001,$/;"	e	enum:__anon42	file:
ISBJ_MARKER	.\libsndfile-1.0.17\src\wav.c	78;"	d	file:
ISFT_MARKER	.\libsndfile-1.0.17\src\wav.c	67;"	d	file:
ISRC_MARKER	.\libsndfile-1.0.17\src\wav.c	77;"	d	file:
LARp_to_rp	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void LARp_to_rp ($/;"	f	file:	signature:( register word * LARp)
LARpp	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			LARpp[2][8] ; 	\/*                              *\/$/;"	m	struct:gsm_state	access:public
LEFT_FREQ	.\libsndfile-1.0.17\examples\make_sine.c	33;"	d	file:
LEI2H_INT	.\libsndfile-1.0.17\src\sfendian.h	77;"	d
LEI2H_INT	.\libsndfile-1.0.17\src\sfendian.h	87;"	d
LES2H_SHORT	.\libsndfile-1.0.17\src\sfendian.h	76;"	d
LES2H_SHORT	.\libsndfile-1.0.17\src\sfendian.h	86;"	d
LET2H_INT_PTR	.\libsndfile-1.0.17\src\sfendian.h	100;"	d
LET2H_SHORT_PTR	.\libsndfile-1.0.17\src\sfendian.h	99;"	d
LIBTOOLIZE	.\libsndfile-1.0.17\reconfigure.mk	/^  LIBTOOLIZE = glibtoolize$/;"	m
LIBTOOLIZE	.\libsndfile-1.0.17\reconfigure.mk	/^  LIBTOOLIZE = libtoolize$/;"	m
LIST_MARKER	.\libsndfile-1.0.17\src\wav.c	46;"	d	file:
LOCALE_DATA	.\libsndfile-1.0.17\tests\locale_test.c	/^} LOCALE_DATA ;$/;"	t	typeref:struct:__anon79	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\command_test.c	37;"	d	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\dither_test.c	32;"	d	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\header_test.c	46;"	d	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\misc_test.c	46;"	d	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\peak_chunk_test.c	35;"	d	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\raw_test.c	35;"	d	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\string_test.c	35;"	d	file:
LOG_BUFFER_SIZE	.\libsndfile-1.0.17\tests\utils.c	56;"	d	file:
LSEEK	.\libsndfile-1.0.17\tests\win32_test.c	43;"	d	file:
LSEEK	.\libsndfile-1.0.17\tests\win32_test.c	54;"	d	file:
LSEEK	.\libsndfile-1.0.17\tests\win32_test.c	65;"	d	file:
LSF_SNPRINTF	.\libsndfile-1.0.17\src\common.h	725;"	d
LSF_SNPRINTF	.\libsndfile-1.0.17\src\common.h	727;"	d
LSF_SNPRINTF	.\libsndfile-1.0.17\src\common.h	730;"	d
LSF_VSNPRINTF	.\libsndfile-1.0.17\src\common.h	734;"	d
LSF_VSNPRINTF	.\libsndfile-1.0.17\src\common.h	736;"	d
LSF_VSNPRINTF	.\libsndfile-1.0.17\src\common.h	739;"	d
L_z2	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	longword		L_z2;		\/*                  Offset_com. *\/$/;"	m	struct:gsm_state	access:public
Licensing	.\libsndfile-1.0.17\doc\index.html	/^<A NAME="Licensing"><\/A>$/;"	a
Licensing	.\share\doc\libsndfile1-dev\html\index.html	/^<A NAME="Licensing"><\/A>$/;"	a
Long_term_analysis_filtering	.\libsndfile-1.0.17\src\GSM610\long_term.c	/^static void Long_term_analysis_filtering ($/;"	f	file:	signature:( word bc, word Nc, register word * dp, register word * d, register word * dpp, register word * e )
MAC3_MARKER	.\libsndfile-1.0.17\src\aiff.c	80;"	d	file:
MAC3_MARKER	.\libsndfile-1.0.17\src\caf.c	62;"	d	file:
MAC6_MARKER	.\libsndfile-1.0.17\src\aiff.c	81;"	d	file:
MAC6_MARKER	.\libsndfile-1.0.17\src\caf.c	63;"	d	file:
MAKE_HASH16	.\libsndfile-1.0.17\src\w64.c	40;"	d	file:
MAKE_MARKER	.\libsndfile-1.0.17\src\sfendian.h	61;"	d
MAKE_MARKER	.\libsndfile-1.0.17\src\sfendian.h	63;"	d
MAKE_MARKER16	.\libsndfile-1.0.17\src\w64.c	46;"	d	file:
MARK_ID_POS	.\libsndfile-1.0.17\src\aiff.c	/^} MARK_ID_POS ;$/;"	t	typeref:struct:__anon17	file:
MARK_MARKER	.\libsndfile-1.0.17\src\aiff.c	41;"	d	file:
MAT4_BE_DOUBLE	.\libsndfile-1.0.17\src\mat4.c	42;"	d	file:
MAT4_BE_FLOAT	.\libsndfile-1.0.17\src\mat4.c	45;"	d	file:
MAT4_BE_PCM_16	.\libsndfile-1.0.17\src\mat4.c	51;"	d	file:
MAT4_BE_PCM_32	.\libsndfile-1.0.17\src\mat4.c	48;"	d	file:
MAT4_BE_PCM_U8	.\libsndfile-1.0.17\src\mat4.c	55;"	d	file:
MAT4_LE_DOUBLE	.\libsndfile-1.0.17\src\mat4.c	43;"	d	file:
MAT4_LE_FLOAT	.\libsndfile-1.0.17\src\mat4.c	46;"	d	file:
MAT4_LE_PCM_16	.\libsndfile-1.0.17\src\mat4.c	52;"	d	file:
MAT4_LE_PCM_32	.\libsndfile-1.0.17\src\mat4.c	49;"	d	file:
MAT4_LE_PCM_U8	.\libsndfile-1.0.17\src\mat4.c	56;"	d	file:
MAT5_MATRIX	.\libsndfile-1.0.17\src\mat5.c	/^} MAT5_MATRIX ;$/;"	t	typeref:struct:__anon44	file:
MAT5_TYPE_ARRAY	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_ARRAY			= 0xE,$/;"	e	enum:__anon43	file:
MAT5_TYPE_COMP_UINT	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_COMP_UINT		= 0x00040006$/;"	e	enum:__anon43	file:
MAT5_TYPE_COMP_USHORT	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_COMP_USHORT	= 0x00020004,$/;"	e	enum:__anon43	file:
MAT5_TYPE_DOUBLE	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_DOUBLE		= 0x9,$/;"	e	enum:__anon43	file:
MAT5_TYPE_FLOAT	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_FLOAT			= 0x7,$/;"	e	enum:__anon43	file:
MAT5_TYPE_INT16	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_INT16			= 0x3,$/;"	e	enum:__anon43	file:
MAT5_TYPE_INT32	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_INT32			= 0x5,$/;"	e	enum:__anon43	file:
MAT5_TYPE_SCHAR	.\libsndfile-1.0.17\src\mat5.c	/^{	MAT5_TYPE_SCHAR			= 0x1,$/;"	e	enum:__anon43	file:
MAT5_TYPE_UCHAR	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_UCHAR			= 0x2,$/;"	e	enum:__anon43	file:
MAT5_TYPE_UINT16	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_UINT16		= 0x4,$/;"	e	enum:__anon43	file:
MAT5_TYPE_UINT32	.\libsndfile-1.0.17\src\mat5.c	/^	MAT5_TYPE_UINT32		= 0x6,$/;"	e	enum:__anon43	file:
MATL_MARKER	.\libsndfile-1.0.17\src\mat5.c	42;"	d	file:
MAX_CHANNELS	.\libsndfile-1.0.17\examples\sfprocess.c	30;"	d	file:
MAX_ERROR	.\libsndfile-1.0.17\tests\scale_clip_test.c	43;"	d	file:
MAX_LONGWORD	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	61;"	d
MAX_WORD	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	58;"	d
MAX_XI_SAMPLES	.\libsndfile-1.0.17\src\xi.c	32;"	d	file:
MEXT_MARKER	.\libsndfile-1.0.17\src\wav.c	58;"	d	file:
MIN_LONGWORD	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	60;"	d
MIN_WAV_FMT	.\libsndfile-1.0.17\src\wav_w64.h	/^} MIN_WAV_FMT ;$/;"	t	typeref:struct:__anon65
MIN_WORD	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	57;"	d
MI_MARKER	.\libsndfile-1.0.17\src\mat5.c	45;"	d	file:
MSADPCM_ADAPT_COEFF_COUNT	.\libsndfile-1.0.17\src\wav_w64.h	266;"	d
MSADPCM_PRIVATE	.\libsndfile-1.0.17\src\ms_adpcm.c	/^} MSADPCM_PRIVATE ;$/;"	t	typeref:struct:__anon45	file:
MSGUID_SUBTYPE_ALAW	.\libsndfile-1.0.17\src\wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_ALAW =$/;"	v	file:
MSGUID_SUBTYPE_ALAW	.\libsndfile-1.0.17\src\wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_ALAW =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT	.\libsndfile-1.0.17\src\wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT	.\libsndfile-1.0.17\src\wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM	.\libsndfile-1.0.17\src\wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM =$/;"	v	file:
MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM	.\libsndfile-1.0.17\src\wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_AMBISONIC_B_FORMAT_PCM =$/;"	v	file:
MSGUID_SUBTYPE_IEEE_FLOAT	.\libsndfile-1.0.17\src\wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_IEEE_FLOAT	.\libsndfile-1.0.17\src\wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_IEEE_FLOAT =$/;"	v	file:
MSGUID_SUBTYPE_MS_ADPCM	.\libsndfile-1.0.17\src\wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MS_ADPCM =$/;"	v	file:
MSGUID_SUBTYPE_MS_ADPCM	.\libsndfile-1.0.17\src\wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MS_ADPCM =$/;"	v	file:
MSGUID_SUBTYPE_MULAW	.\libsndfile-1.0.17\src\wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MULAW =$/;"	v	file:
MSGUID_SUBTYPE_MULAW	.\libsndfile-1.0.17\src\wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_MULAW =$/;"	v	file:
MSGUID_SUBTYPE_PCM	.\libsndfile-1.0.17\src\wav.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_PCM =$/;"	v	file:
MSGUID_SUBTYPE_PCM	.\libsndfile-1.0.17\src\wav_w64.c	/^static const EXT_SUBFORMAT MSGUID_SUBTYPE_PCM =$/;"	v	file:
MS_ADPCM_WAV_FMT	.\libsndfile-1.0.17\src\wav_w64.h	/^} MS_ADPCM_WAV_FMT ;$/;"	t	typeref:struct:__anon67
M_PI	.\libsndfile-1.0.17\examples\make_sine.c	27;"	d	file:
M_PI	.\libsndfile-1.0.17\src\G72x\g72x_test.c	29;"	d	file:
M_PI	.\libsndfile-1.0.17\tests\benchmark.c	41;"	d	file:
M_PI	.\libsndfile-1.0.17\tests\dft_cmp.c	27;"	d	file:
M_PI	.\libsndfile-1.0.17\tests\dwvw_test.c	37;"	d	file:
M_PI	.\libsndfile-1.0.17\tests\fix_this.c	33;"	d	file:
M_PI	.\libsndfile-1.0.17\tests\lossy_comp_test.c	38;"	d	file:
M_PI	.\libsndfile-1.0.17\tests\scale_clip_test.c	36;"	d	file:
M_PI	.\libsndfile-1.0.17\tests\utils.c	53;"	d	file:
MacOSXAudioData	.\libsndfile-1.0.17\examples\sndfile-play.c	/^} MacOSXAudioData ;$/;"	t	typeref:struct:__anon4	file:
Magick	.\libsndfile-1.0.17\src\common.h	/^	int				Magick ;$/;"	m	struct:sf_private_tag	access:public
MinGW	.\libsndfile-1.0.17\doc\win32.html	/^<A NAME="MinGW"><\/A>$/;"	a
MinGW	.\share\doc\libsndfile1-dev\html\win32.html	/^<A NAME="MinGW"><\/A>$/;"	a
NAME_MARKER	.\libsndfile-1.0.17\src\aiff.c	46;"	d	file:
NAME_MARKER	.\libsndfile-1.0.17\src\svx.c	45;"	d	file:
NEXTI	.\libsndfile-1.0.17\src\GSM610\lpc.c	101;"	d	file:
NIST_HEADER_LENGTH	.\libsndfile-1.0.17\src\nist.c	40;"	d	file:
NONE_MARKER	.\libsndfile-1.0.17\src\aiff.c	57;"	d	file:
OPT_ADD_FILE	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^{	OPT_ADD_FILE	= 0x0100,$/;"	e	enum:__anon8	file:
OPT_CREATE_DB	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^	OPT_CREATE_DB	= 0x0200,$/;"	e	enum:__anon8	file:
OPT_DEL_ENTRY	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^	OPT_DEL_ENTRY	= 0x0400,$/;"	e	enum:__anon8	file:
OPT_LIST_ALL	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^	OPT_LIST_ALL	= 0x0800,$/;"	e	enum:__anon8	file:
OPT_TEST_ALL	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^	OPT_TEST_ALL	= 0x1000,$/;"	e	enum:__anon8	file:
OPT_VERBOSE	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^	OPT_VERBOSE		= 0x2000$/;"	e	enum:__anon8	file:
OUTPUT_FORMAT_MAP	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^} OUTPUT_FORMAT_MAP ;$/;"	t	typeref:struct:__anon3	file:
O_BINARY	.\libsndfile-1.0.17\tests\win32_test.c	71;"	d	file:
OggS_MARKER	.\libsndfile-1.0.17\src\wav.c	83;"	d	file:
OptionData	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^} OptionData ;$/;"	t	typeref:struct:__anon2	file:
PAD_MARKER	.\libsndfile-1.0.17\src\wav.c	62;"	d	file:
PAF24_BLOCK_SIZE	.\libsndfile-1.0.17\src\paf.c	46;"	d	file:
PAF24_PRIVATE	.\libsndfile-1.0.17\src\paf.c	/^} PAF24_PRIVATE ;$/;"	t	typeref:struct:__anon47	file:
PAF24_SAMPLES_PER_BLOCK	.\libsndfile-1.0.17\src\paf.c	45;"	d	file:
PAF_FMT	.\libsndfile-1.0.17\src\paf.c	/^} PAF_FMT ;$/;"	t	typeref:struct:__anon46	file:
PAF_HEADER_LENGTH	.\libsndfile-1.0.17\src\paf.c	43;"	d	file:
PAF_MARKER	.\libsndfile-1.0.17\src\paf.c	37;"	d	file:
PAF_PCM_16	.\libsndfile-1.0.17\src\paf.c	/^{	PAF_PCM_16 = 0,$/;"	e	enum:__anon48	file:
PAF_PCM_24	.\libsndfile-1.0.17\src\paf.c	/^	PAF_PCM_24 = 1,$/;"	e	enum:__anon48	file:
PAF_PCM_S8	.\libsndfile-1.0.17\src\paf.c	/^	PAF_PCM_S8 = 2$/;"	e	enum:__anon48	file:
PCM_DATA_LEN	.\libsndfile-1.0.17\src\vox_adpcm.c	44;"	d	file:
PEAK_INFO	.\libsndfile-1.0.17\src\common.h	/^} PEAK_INFO ;$/;"	t	typeref:struct:__anon26
PEAK_MARKER	.\libsndfile-1.0.17\src\aiff.c	53;"	d	file:
PEAK_MARKER	.\libsndfile-1.0.17\src\wav.c	43;"	d	file:
PEAK_POS	.\libsndfile-1.0.17\src\common.h	/^} PEAK_POS ;$/;"	t	typeref:struct:__anon25
PERF_STATS	.\libsndfile-1.0.17\tests\benchmark.c	/^} PERF_STATS ;$/;"	t	typeref:struct:__anon77	file:
PFLAC_PCM	.\libsndfile-1.0.17\src\flac.c	/^} PFLAC_PCM ;$/;"	t	typeref:enum:__anon36	file:
PFLAC_PCM_DOUBLE	.\libsndfile-1.0.17\src\flac.c	/^	PFLAC_PCM_DOUBLE = 3$/;"	e	enum:__anon36	file:
PFLAC_PCM_FLOAT	.\libsndfile-1.0.17\src\flac.c	/^	PFLAC_PCM_FLOAT = 2,$/;"	e	enum:__anon36	file:
PFLAC_PCM_INT	.\libsndfile-1.0.17\src\flac.c	/^	PFLAC_PCM_INT = 1,$/;"	e	enum:__anon36	file:
PFLAC_PCM_SHORT	.\libsndfile-1.0.17\src\flac.c	/^{	PFLAC_PCM_SHORT = 0,$/;"	e	enum:__anon36	file:
PIPE_INDEX	.\libsndfile-1.0.17\tests\utils.h	38;"	d
PIPE_TEST_LEN	.\libsndfile-1.0.17\tests\utils.h	39;"	d
PRIVATE_H	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	8;"	d
PSF_LOG_PRINTF_ONLY	.\libsndfile-1.0.17\src\test_log_printf.c	30;"	d	file:
PSF_SEEK_ERROR	.\libsndfile-1.0.17\src\common.h	62;"	d
PUT_DOTS	.\libsndfile-1.0.17\examples\generate.c	64;"	d	file:
PVF1_MARKER	.\libsndfile-1.0.17\src\pvf.c	34;"	d	file:
Postprocessing	.\libsndfile-1.0.17\src\GSM610\decode.c	/^static void Postprocessing ($/;"	f	file:	signature:( struct gsm_state * S, register word * s)
Q001	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q001"><\/A>$/;"	a
Q001	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q001"><\/A>$/;"	a
Q002	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q002"><\/A>$/;"	a
Q002	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q002"><\/A>$/;"	a
Q003	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q003"><\/A>$/;"	a
Q003	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q003"><\/A>$/;"	a
Q004	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q004"><\/A>$/;"	a
Q004	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q004"><\/A>$/;"	a
Q005	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q005"><\/A>$/;"	a
Q005	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q005"><\/A>$/;"	a
Q006	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q006"><\/A>$/;"	a
Q006	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q006"><\/A>$/;"	a
Q007	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q007"><\/A>$/;"	a
Q007	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q007"><\/A>$/;"	a
Q008	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q008"><\/A>$/;"	a
Q008	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q008"><\/A>$/;"	a
Q009	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q009"><\/A>$/;"	a
Q009	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q009"><\/A>$/;"	a
Q010	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q010"><\/A>$/;"	a
Q010	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q010"><\/A>$/;"	a
Q011	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q011"><\/A>$/;"	a
Q011	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q011"><\/A>$/;"	a
Q012	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q012"><\/A>$/;"	a
Q012	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q012"><\/A>$/;"	a
Q013	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q013"><\/A>$/;"	a
Q013	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q013"><\/A>$/;"	a
Q014	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q014"><\/A>$/;"	a
Q014	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q014"><\/A>$/;"	a
Q015	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q015"><\/A>$/;"	a
Q015	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q015"><\/A>$/;"	a
Q016	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q016"><\/A>$/;"	a
Q016	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q016"><\/A>$/;"	a
Q017	.\libsndfile-1.0.17\doc\FAQ.html	/^<A NAME="Q017"><\/A>$/;"	a
Q017	.\share\doc\libsndfile1-dev\html\FAQ.html	/^<A NAME="Q017"><\/A>$/;"	a
Quantization_and_coding	.\libsndfile-1.0.17\src\GSM610\lpc.c	/^static void Quantization_and_coding ($/;"	f	file:	signature:( register word * LAR )
READ_FLAGS	.\libsndfile-1.0.17\tests\benchmark.c	46;"	d	file:
READ_FLAGS	.\libsndfile-1.0.17\tests\benchmark.c	50;"	d	file:
RECY_MARKER	.\libsndfile-1.0.17\src\rx2.c	48;"	d	file:
REGTEST_DB	.\libsndfile-1.0.17\regtest\database.c	/^} REGTEST_DB ;$/;"	t	typeref:struct:__anon7	file:
REG_DB	.\libsndfile-1.0.17\regtest\regtest.h	/^typedef struct REG_DB_tag REG_DB ;$/;"	t	typeref:struct:REG_DB_tag
RIFF_MARKER	.\libsndfile-1.0.17\src\ms_adpcm.c	33;"	d	file:
RIFF_MARKER	.\libsndfile-1.0.17\src\wav.c	37;"	d	file:
RIFX_MARKER	.\libsndfile-1.0.17\src\wav.c	38;"	d	file:
RIGHT_FREQ	.\libsndfile-1.0.17\examples\make_sine.c	34;"	d	file:
RLSE_MARKER	.\libsndfile-1.0.17\src\svx.c	42;"	d	file:
RPE_grid_positioning	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^static void RPE_grid_positioning ($/;"	f	file:	signature:( word Mc, register word * xMp, register word * ep )
RPE_grid_selection	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^static void RPE_grid_selection ($/;"	f	file:	signature:( word * x, word * xM, word * Mc_out )
RSRC_BIN	.\libsndfile-1.0.17\src\sd2.c	/^	RSRC_BIN$/;"	e	enum:__anon50	file:
RSRC_STR	.\libsndfile-1.0.17\src\sd2.c	/^{	RSRC_STR = 111,$/;"	e	enum:__anon50	file:
Reflection_coefficients	.\libsndfile-1.0.17\src\GSM610\lpc.c	/^static void Reflection_coefficients ($/;"	f	file:	signature:( longword * L_ACF, register word * r )
SAMPLE_COUNT	.\libsndfile-1.0.17\examples\make_sine.c	31;"	d	file:
SAMPLE_RATE	.\libsndfile-1.0.17\examples\make_sine.c	30;"	d	file:
SAMPLE_RATE	.\libsndfile-1.0.17\src\G72x\g72x_test.c	33;"	d	file:
SAMPLE_RATE	.\libsndfile-1.0.17\tests\fix_this.c	30;"	d	file:
SAMPLE_RATE	.\libsndfile-1.0.17\tests\floating_point_test.c	37;"	d	file:
SAMPLE_RATE	.\libsndfile-1.0.17\tests\lossy_comp_test.c	35;"	d	file:
SAMPLE_RATE	.\libsndfile-1.0.17\tests\write_read_test.c	40;"	d	file:
SASR_L	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^SASR_L (longword x, word by)$/;"	f	signature:(longword x, word by)
SASR_W	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^SASR_W (word x, word by)$/;"	f	signature:(word x, word by)
SCALE	.\libsndfile-1.0.17\src\GSM610\lpc.c	62;"	d	file:
SCALE	.\libsndfile-1.0.17\src\GSM610\lpc.c	80;"	d	file:
SD2_RSRC	.\libsndfile-1.0.17\src\sd2.c	/^} SD2_RSRC ;$/;"	t	typeref:struct:__anon51	file:
SDAT_MARKER	.\libsndfile-1.0.17\src\rx2.c	60;"	d	file:
SDS_3BYTE_TO_INT_DECODE	.\libsndfile-1.0.17\src\sds.c	40;"	d	file:
SDS_AUDIO_BYTES_PER_BLOCK	.\libsndfile-1.0.17\src\sds.c	38;"	d	file:
SDS_BLOCK_SIZE	.\libsndfile-1.0.17\src\sds.c	36;"	d	file:
SDS_DATA_OFFSET	.\libsndfile-1.0.17\src\sds.c	35;"	d	file:
SDS_INT_TO_3BYTE_ENCODE	.\libsndfile-1.0.17\src\sds.c	41;"	d	file:
SDS_PRIVATE	.\libsndfile-1.0.17\src\sds.c	/^} SDS_PRIVATE ;$/;"	t	typeref:struct:tag_SDS_PRIVATE	file:
SENSIBLE_LEN	.\libsndfile-1.0.17\src\double64.c	39;"	d	file:
SENSIBLE_SIZE	.\libsndfile-1.0.17\src\file_io.c	56;"	d	file:
SFCONFIG_H	.\libsndfile-1.0.17\src\sfconfig.h	33;"	d
SFC_CALC_MAX_ALL_CHANNELS	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_CALC_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_MAX_ALL_CHANNELS	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_CALC_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_MAX_ALL_CHANNELS	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_CALC_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_MAX_ALL_CHANNELS	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_CALC_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_MAX_ALL_CHANNELS	.\sndfile.h	/^	SFC_CALC_MAX_ALL_CHANNELS		= 0x1042,$/;"	e	enum:__anon87
SFC_CALC_NORM_MAX_ALL_CHANNELS	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_CALC_NORM_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_NORM_MAX_ALL_CHANNELS	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_CALC_NORM_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_NORM_MAX_ALL_CHANNELS	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_CALC_NORM_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_NORM_MAX_ALL_CHANNELS	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_CALC_NORM_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_CALC_NORM_MAX_ALL_CHANNELS	.\sndfile.h	/^	SFC_CALC_NORM_MAX_ALL_CHANNELS	= 0x1043,$/;"	e	enum:__anon87
SFC_CALC_NORM_SIGNAL_MAX	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_CALC_NORM_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_NORM_SIGNAL_MAX	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_CALC_NORM_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_NORM_SIGNAL_MAX	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_CALC_NORM_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_NORM_SIGNAL_MAX	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_CALC_NORM_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_NORM_SIGNAL_MAX	.\sndfile.h	/^	SFC_CALC_NORM_SIGNAL_MAX		= 0x1041,$/;"	e	enum:__anon87
SFC_CALC_SIGNAL_MAX	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_CALC_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_SIGNAL_MAX	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_CALC_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_SIGNAL_MAX	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_CALC_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_SIGNAL_MAX	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_CALC_SIGNAL_MAX"><\/A>$/;"	a
SFC_CALC_SIGNAL_MAX	.\sndfile.h	/^	SFC_CALC_SIGNAL_MAX				= 0x1040,$/;"	e	enum:__anon87
SFC_FILE_TRUNCATE	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_FILE_TRUNCATE"><\/A>$/;"	a
SFC_FILE_TRUNCATE	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_FILE_TRUNCATE"><\/A>$/;"	a
SFC_FILE_TRUNCATE	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_FILE_TRUNCATE"><\/A>$/;"	a
SFC_FILE_TRUNCATE	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_FILE_TRUNCATE"><\/A>$/;"	a
SFC_FILE_TRUNCATE	.\sndfile.h	/^	SFC_FILE_TRUNCATE				= 0x1080,$/;"	e	enum:__anon87
SFC_GET_BROADCAST_INFO	.\sndfile.h	/^	SFC_GET_BROADCAST_INFO			= 0x10F0,$/;"	e	enum:__anon87
SFC_GET_CLIPPING	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_CLIPPING"><\/A>$/;"	a
SFC_GET_CLIPPING	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_CLIPPING"><\/A>$/;"	a
SFC_GET_CLIPPING	.\sndfile.h	/^	SFC_GET_CLIPPING				= 0x10C1,$/;"	e	enum:__anon87
SFC_GET_DITHER_INFO	.\sndfile.h	/^	SFC_GET_DITHER_INFO				= 0x10A3,$/;"	e	enum:__anon87
SFC_GET_DITHER_INFO_COUNT	.\sndfile.h	/^	SFC_GET_DITHER_INFO_COUNT		= 0x10A2,$/;"	e	enum:__anon87
SFC_GET_EMBED_FILE_INFO	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_EMBED_FILE_INFO"><\/A>$/;"	a
SFC_GET_EMBED_FILE_INFO	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_EMBED_FILE_INFO"><\/A>$/;"	a
SFC_GET_EMBED_FILE_INFO	.\sndfile.h	/^	SFC_GET_EMBED_FILE_INFO			= 0x10B0,$/;"	e	enum:__anon87
SFC_GET_FORMAT_INFO	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_FORMAT_INFO"><\/A>$/;"	a
SFC_GET_FORMAT_INFO	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_FORMAT_INFO"><\/A>$/;"	a
SFC_GET_FORMAT_INFO	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_FORMAT_INFO"><\/A>$/;"	a
SFC_GET_FORMAT_INFO	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_FORMAT_INFO"><\/A>$/;"	a
SFC_GET_FORMAT_INFO	.\sndfile.h	/^	SFC_GET_FORMAT_INFO				= 0x1028,$/;"	e	enum:__anon87
SFC_GET_FORMAT_MAJOR	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_FORMAT_MAJOR"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_FORMAT_MAJOR"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_FORMAT_MAJOR"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_FORMAT_MAJOR"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR	.\sndfile.h	/^	SFC_GET_FORMAT_MAJOR			= 0x1031,$/;"	e	enum:__anon87
SFC_GET_FORMAT_MAJOR_COUNT	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_FORMAT_MAJOR_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR_COUNT	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_FORMAT_MAJOR_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR_COUNT	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_FORMAT_MAJOR_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR_COUNT	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_FORMAT_MAJOR_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_MAJOR_COUNT	.\sndfile.h	/^	SFC_GET_FORMAT_MAJOR_COUNT		= 0x1030,$/;"	e	enum:__anon87
SFC_GET_FORMAT_SUBTYPE	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE	.\sndfile.h	/^	SFC_GET_FORMAT_SUBTYPE			= 0x1033,$/;"	e	enum:__anon87
SFC_GET_FORMAT_SUBTYPE_COUNT	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE_COUNT	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE_COUNT	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE_COUNT	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_FORMAT_SUBTYPE_COUNT"><\/A>$/;"	a
SFC_GET_FORMAT_SUBTYPE_COUNT	.\sndfile.h	/^	SFC_GET_FORMAT_SUBTYPE_COUNT	= 0x1032,$/;"	e	enum:__anon87
SFC_GET_INSTRUMENT	.\sndfile.h	/^	SFC_GET_INSTRUMENT				= 0x10D0,$/;"	e	enum:__anon87
SFC_GET_LIB_VERSION	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_LIB_VERSION"><\/A>$/;"	a
SFC_GET_LIB_VERSION	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_LIB_VERSION"><\/A>$/;"	a
SFC_GET_LIB_VERSION	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_LIB_VERSION"><\/A>$/;"	a
SFC_GET_LIB_VERSION	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_LIB_VERSION"><\/A>$/;"	a
SFC_GET_LIB_VERSION	.\sndfile.h	/^{	SFC_GET_LIB_VERSION				= 0x1000,$/;"	e	enum:__anon87
SFC_GET_LOG_INFO	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_LOG_INFO"><\/A>$/;"	a
SFC_GET_LOG_INFO	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_LOG_INFO"><\/A>$/;"	a
SFC_GET_LOG_INFO	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_LOG_INFO"><\/A>$/;"	a
SFC_GET_LOG_INFO	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_LOG_INFO"><\/A>$/;"	a
SFC_GET_LOG_INFO	.\sndfile.h	/^	SFC_GET_LOG_INFO				= 0x1001,$/;"	e	enum:__anon87
SFC_GET_LOOP_INFO	.\sndfile.h	/^	SFC_GET_LOOP_INFO				= 0x10E0,$/;"	e	enum:__anon87
SFC_GET_MAX_ALL_CHANNELS	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_GET_MAX_ALL_CHANNELS	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_MAX_ALL_CHANNELS"><\/A>$/;"	a
SFC_GET_MAX_ALL_CHANNELS	.\sndfile.h	/^	SFC_GET_MAX_ALL_CHANNELS		= 0x1045,$/;"	e	enum:__anon87
SFC_GET_NORM_DOUBLE	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_NORM_DOUBLE"><\/A>$/;"	a
SFC_GET_NORM_DOUBLE	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_NORM_DOUBLE"><\/A>$/;"	a
SFC_GET_NORM_DOUBLE	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_NORM_DOUBLE"><\/A>$/;"	a
SFC_GET_NORM_DOUBLE	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_NORM_DOUBLE"><\/A>$/;"	a
SFC_GET_NORM_DOUBLE	.\sndfile.h	/^	SFC_GET_NORM_DOUBLE				= 0x1010,$/;"	e	enum:__anon87
SFC_GET_NORM_FLOAT	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_NORM_FLOAT"><\/A>$/;"	a
SFC_GET_NORM_FLOAT	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_NORM_FLOAT"><\/A>$/;"	a
SFC_GET_NORM_FLOAT	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_NORM_FLOAT"><\/A>$/;"	a
SFC_GET_NORM_FLOAT	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_NORM_FLOAT"><\/A>$/;"	a
SFC_GET_NORM_FLOAT	.\sndfile.h	/^	SFC_GET_NORM_FLOAT				= 0x1011,$/;"	e	enum:__anon87
SFC_GET_SIGNAL_MAX	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_SIGNAL_MAX"><\/A>$/;"	a
SFC_GET_SIGNAL_MAX	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_SIGNAL_MAX"><\/A>$/;"	a
SFC_GET_SIGNAL_MAX	.\sndfile.h	/^	SFC_GET_SIGNAL_MAX				= 0x1044,$/;"	e	enum:__anon87
SFC_GET_SIMPLE_FORMAT	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT	.\sndfile.h	/^	SFC_GET_SIMPLE_FORMAT			= 0x1021,$/;"	e	enum:__anon87
SFC_GET_SIMPLE_FORMAT_COUNT	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT_COUNT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT_COUNT	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT_COUNT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT_COUNT	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT_COUNT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT_COUNT	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_GET_SIMPLE_FORMAT_COUNT"><\/A>$/;"	a
SFC_GET_SIMPLE_FORMAT_COUNT	.\sndfile.h	/^	SFC_GET_SIMPLE_FORMAT_COUNT		= 0x1020,$/;"	e	enum:__anon87
SFC_SET_ADD_DITHER_ON_READ	.\sndfile.h	/^	SFC_SET_ADD_DITHER_ON_READ		= 0x1071$/;"	e	enum:__anon87
SFC_SET_ADD_DITHER_ON_WRITE	.\sndfile.h	/^	SFC_SET_ADD_DITHER_ON_WRITE		= 0x1070,$/;"	e	enum:__anon87
SFC_SET_ADD_PEAK_CHUNK	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_SET_ADD_PEAK_CHUNK"><\/A>$/;"	a
SFC_SET_ADD_PEAK_CHUNK	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_SET_ADD_PEAK_CHUNK"><\/A>$/;"	a
SFC_SET_ADD_PEAK_CHUNK	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_SET_ADD_PEAK_CHUNK"><\/A>$/;"	a
SFC_SET_ADD_PEAK_CHUNK	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_SET_ADD_PEAK_CHUNK"><\/A>$/;"	a
SFC_SET_ADD_PEAK_CHUNK	.\sndfile.h	/^	SFC_SET_ADD_PEAK_CHUNK			= 0x1050,$/;"	e	enum:__anon87
SFC_SET_BROADCAST_INFO	.\sndfile.h	/^	SFC_SET_BROADCAST_INFO			= 0x10F1,$/;"	e	enum:__anon87
SFC_SET_CLIPPING	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_SET_CLIPPING"><\/A>$/;"	a
SFC_SET_CLIPPING	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_SET_CLIPPING"><\/A>$/;"	a
SFC_SET_CLIPPING	.\sndfile.h	/^	SFC_SET_CLIPPING				= 0x10C0,$/;"	e	enum:__anon87
SFC_SET_DITHER_ON_READ	.\sndfile.h	/^	SFC_SET_DITHER_ON_READ			= 0x10A1,$/;"	e	enum:__anon87
SFC_SET_DITHER_ON_WRITE	.\sndfile.h	/^	SFC_SET_DITHER_ON_WRITE			= 0x10A0,$/;"	e	enum:__anon87
SFC_SET_INSTRUMENT	.\sndfile.h	/^	SFC_SET_INSTRUMENT				= 0x10D1,$/;"	e	enum:__anon87
SFC_SET_NORM_DOUBLE	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_SET_NORM_DOUBLE"><\/A>$/;"	a
SFC_SET_NORM_DOUBLE	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_SET_NORM_DOUBLE"><\/A>$/;"	a
SFC_SET_NORM_DOUBLE	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_SET_NORM_DOUBLE"><\/A>$/;"	a
SFC_SET_NORM_DOUBLE	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_SET_NORM_DOUBLE"><\/A>$/;"	a
SFC_SET_NORM_DOUBLE	.\sndfile.h	/^	SFC_SET_NORM_DOUBLE				= 0x1012,$/;"	e	enum:__anon87
SFC_SET_NORM_FLOAT	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_SET_NORM_FLOAT"><\/A>$/;"	a
SFC_SET_NORM_FLOAT	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_SET_NORM_FLOAT"><\/A>$/;"	a
SFC_SET_NORM_FLOAT	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_SET_NORM_FLOAT"><\/A>$/;"	a
SFC_SET_NORM_FLOAT	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_SET_NORM_FLOAT"><\/A>$/;"	a
SFC_SET_NORM_FLOAT	.\sndfile.h	/^	SFC_SET_NORM_FLOAT				= 0x1013,$/;"	e	enum:__anon87
SFC_SET_RAW_START_OFFSET	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_SET_RAW_START_OFFSET"><\/A>$/;"	a
SFC_SET_RAW_START_OFFSET	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_SET_RAW_START_OFFSET"><\/A>$/;"	a
SFC_SET_RAW_START_OFFSET	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_SET_RAW_START_OFFSET"><\/A>$/;"	a
SFC_SET_RAW_START_OFFSET	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_SET_RAW_START_OFFSET"><\/A>$/;"	a
SFC_SET_RAW_START_OFFSET	.\sndfile.h	/^	SFC_SET_RAW_START_OFFSET		= 0x1090,$/;"	e	enum:__anon87
SFC_SET_SCALE_FLOAT_INT_READ	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_SET_SCALE_FLOAT_INT_READ"><\/A>$/;"	a
SFC_SET_SCALE_FLOAT_INT_READ	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_SET_SCALE_FLOAT_INT_READ"><\/A>$/;"	a
SFC_SET_SCALE_FLOAT_INT_READ	.\sndfile.h	/^	SFC_SET_SCALE_FLOAT_INT_READ	= 0x1014,$/;"	e	enum:__anon87
SFC_SET_UPDATE_HEADER_AUTO	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_SET_UPDATE_HEADER_AUTO"><\/A>$/;"	a
SFC_SET_UPDATE_HEADER_AUTO	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_SET_UPDATE_HEADER_AUTO"><\/A>$/;"	a
SFC_SET_UPDATE_HEADER_AUTO	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_SET_UPDATE_HEADER_AUTO"><\/A>$/;"	a
SFC_SET_UPDATE_HEADER_AUTO	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_SET_UPDATE_HEADER_AUTO"><\/A>$/;"	a
SFC_SET_UPDATE_HEADER_AUTO	.\sndfile.h	/^	SFC_SET_UPDATE_HEADER_AUTO		= 0x1061,$/;"	e	enum:__anon87
SFC_TEST_AIFF_ADD_INST_CHUNK	.\libsndfile-1.0.17\src\common.h	/^{	SFC_TEST_AIFF_ADD_INST_CHUNK	= 0x2000,$/;"	e	enum:__anon30
SFC_TEST_IEEE_FLOAT_REPLACE	.\sndfile.h	/^	SFC_TEST_IEEE_FLOAT_REPLACE		= 0x6001,$/;"	e	enum:__anon87
SFC_TEST_WAV_ADD_INFO_CHUNK	.\libsndfile-1.0.17\src\common.h	/^	SFC_TEST_WAV_ADD_INFO_CHUNK		= 0x2010$/;"	e	enum:__anon30
SFC_UPDATE_HEADER_NOW	.\libsndfile-1.0.17\doc\command.html	/^<A NAME="SFC_UPDATE_HEADER_NOW"><\/A>$/;"	a
SFC_UPDATE_HEADER_NOW	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="SFC_UPDATE_HEADER_NOW"><\/A>$/;"	a
SFC_UPDATE_HEADER_NOW	.\share\doc\libsndfile1-dev\html\command.html	/^<A NAME="SFC_UPDATE_HEADER_NOW"><\/A>$/;"	a
SFC_UPDATE_HEADER_NOW	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="SFC_UPDATE_HEADER_NOW"><\/A>$/;"	a
SFC_UPDATE_HEADER_NOW	.\sndfile.h	/^	SFC_UPDATE_HEADER_NOW			= 0x1060,$/;"	e	enum:__anon87
SFD_CUSTOM_LEVEL	.\sndfile.h	/^	SFD_CUSTOM_LEVEL	= 0x40000000,$/;"	e	enum:__anon92
SFD_DEFAULT_LEVEL	.\sndfile.h	/^{	SFD_DEFAULT_LEVEL	= 0,$/;"	e	enum:__anon92
SFD_NO_DITHER	.\sndfile.h	/^	SFD_NO_DITHER		= 500,$/;"	e	enum:__anon92
SFD_TRIANGULAR_PDF	.\sndfile.h	/^	SFD_TRIANGULAR_PDF	= 502$/;"	e	enum:__anon92
SFD_TYPEMASK	.\libsndfile-1.0.17\src\common.h	/^	SFD_TYPEMASK		= 0x0FFFFFFF$/;"	e	enum:__anon23
SFD_WHITE	.\sndfile.h	/^	SFD_WHITE			= 501,$/;"	e	enum:__anon92
SFE_AIFF_AIFF_NO_FORM	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_AIFF_NO_FORM,$/;"	e	enum:__anon29
SFE_AIFF_BAD_COMM_CHUNK	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_BAD_COMM_CHUNK,$/;"	e	enum:__anon29
SFE_AIFF_BAD_PEAK	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_BAD_PEAK,$/;"	e	enum:__anon29
SFE_AIFF_COMM_CHUNK_SIZE	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_COMM_CHUNK_SIZE,$/;"	e	enum:__anon29
SFE_AIFF_COMM_NO_FORM	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_COMM_NO_FORM,$/;"	e	enum:__anon29
SFE_AIFF_NO_DATA	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_NO_DATA,$/;"	e	enum:__anon29
SFE_AIFF_NO_FORM	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_NO_FORM,$/;"	e	enum:__anon29
SFE_AIFF_NO_SSND	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_NO_SSND,$/;"	e	enum:__anon29
SFE_AIFF_PEAK_B4_COMM	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_PEAK_B4_COMM,$/;"	e	enum:__anon29
SFE_AIFF_RW_SSND_NOT_LAST	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_RW_SSND_NOT_LAST,$/;"	e	enum:__anon29
SFE_AIFF_SSND_NO_COMM	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_SSND_NO_COMM,$/;"	e	enum:__anon29
SFE_AIFF_UNKNOWN_CHUNK	.\libsndfile-1.0.17\src\common.h	/^	SFE_AIFF_UNKNOWN_CHUNK,$/;"	e	enum:__anon29
SFE_AMBIGUOUS_SEEK	.\libsndfile-1.0.17\src\common.h	/^	SFE_AMBIGUOUS_SEEK,$/;"	e	enum:__anon29
SFE_AU_EMBED_BAD_LEN	.\libsndfile-1.0.17\src\common.h	/^	SFE_AU_EMBED_BAD_LEN,$/;"	e	enum:__anon29
SFE_AU_NO_DOTSND	.\libsndfile-1.0.17\src\common.h	/^	SFE_AU_NO_DOTSND,$/;"	e	enum:__anon29
SFE_AU_UNKNOWN_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_AU_UNKNOWN_FORMAT,$/;"	e	enum:__anon29
SFE_AVR_X	.\libsndfile-1.0.17\src\avr.c	31;"	d	file:
SFE_BAD_CONTROL_CMD	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_CONTROL_CMD,$/;"	e	enum:__anon29
SFE_BAD_ENDIAN	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_ENDIAN,$/;"	e	enum:__anon29
SFE_BAD_FILE	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_FILE,$/;"	e	enum:__anon29
SFE_BAD_FILE_PTR	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_FILE_PTR,$/;"	e	enum:__anon29
SFE_BAD_FILE_READ	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_FILE_READ,$/;"	e	enum:__anon29
SFE_BAD_INT_PTR	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_INT_PTR,$/;"	e	enum:__anon29
SFE_BAD_MODE_RW	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_MODE_RW,$/;"	e	enum:__anon29
SFE_BAD_OFFSET	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_OFFSET,$/;"	e	enum:__anon29
SFE_BAD_OPEN_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_OPEN_FORMAT			= SF_ERR_UNRECOGNISED_FORMAT,$/;"	e	enum:__anon29
SFE_BAD_OPEN_MODE	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_OPEN_MODE,$/;"	e	enum:__anon29
SFE_BAD_RDWR_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_RDWR_FORMAT,$/;"	e	enum:__anon29
SFE_BAD_READ_ALIGN	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_READ_ALIGN,$/;"	e	enum:__anon29
SFE_BAD_SEEK	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_SEEK,$/;"	e	enum:__anon29
SFE_BAD_SF_INCOMPLETE	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_SF_INCOMPLETE,$/;"	e	enum:__anon29
SFE_BAD_SF_INFO	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_SF_INFO,$/;"	e	enum:__anon29
SFE_BAD_SF_INFO_PTR	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_SF_INFO_PTR,$/;"	e	enum:__anon29
SFE_BAD_SNDFILE_PTR	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_SNDFILE_PTR,$/;"	e	enum:__anon29
SFE_BAD_STAT_SIZE	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_STAT_SIZE,$/;"	e	enum:__anon29
SFE_BAD_VIRTUAL_IO	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_VIRTUAL_IO,$/;"	e	enum:__anon29
SFE_BAD_WRITE_ALIGN	.\libsndfile-1.0.17\src\common.h	/^	SFE_BAD_WRITE_ALIGN,$/;"	e	enum:__anon29
SFE_CAF_BAD_PEAK	.\libsndfile-1.0.17\src\caf.c	69;"	d	file:
SFE_CAF_NOT_CAF	.\libsndfile-1.0.17\src\caf.c	67;"	d	file:
SFE_CAF_NO_DESC	.\libsndfile-1.0.17\src\caf.c	68;"	d	file:
SFE_CHANNEL_COUNT	.\libsndfile-1.0.17\src\common.h	/^	SFE_CHANNEL_COUNT,$/;"	e	enum:__anon29
SFE_DITHER_BAD_PTR	.\libsndfile-1.0.17\src\dither.c	56;"	d	file:
SFE_DITHER_BAD_TYPE	.\libsndfile-1.0.17\src\dither.c	57;"	d	file:
SFE_DWD_BAND_BIT_WIDTH	.\libsndfile-1.0.17\src\dwd.c	46;"	d	file:
SFE_DWD_COMPRESSION	.\libsndfile-1.0.17\src\dwd.c	47;"	d	file:
SFE_DWD_NO_DWD	.\libsndfile-1.0.17\src\dwd.c	45;"	d	file:
SFE_DWVW_BAD_BITWIDTH	.\libsndfile-1.0.17\src\common.h	/^	SFE_DWVW_BAD_BITWIDTH,$/;"	e	enum:__anon29
SFE_FLAC_BAD_HEADER	.\libsndfile-1.0.17\src\common.h	/^	SFE_FLAC_BAD_HEADER,$/;"	e	enum:__anon29
SFE_FLAC_BAD_SAMPLE_RATE	.\libsndfile-1.0.17\src\common.h	/^	SFE_FLAC_BAD_SAMPLE_RATE,$/;"	e	enum:__anon29
SFE_FLAC_INIT_DECODER	.\libsndfile-1.0.17\src\common.h	/^	SFE_FLAC_INIT_DECODER,$/;"	e	enum:__anon29
SFE_FLAC_LOST_SYNC	.\libsndfile-1.0.17\src\common.h	/^	SFE_FLAC_LOST_SYNC,$/;"	e	enum:__anon29
SFE_FLAC_NEW_DECODER	.\libsndfile-1.0.17\src\common.h	/^	SFE_FLAC_NEW_DECODER,$/;"	e	enum:__anon29
SFE_FLAC_UNKOWN_ERROR	.\libsndfile-1.0.17\src\common.h	/^	SFE_FLAC_UNKOWN_ERROR,$/;"	e	enum:__anon29
SFE_G72X_NOT_MONO	.\libsndfile-1.0.17\src\common.h	/^	SFE_G72X_NOT_MONO,$/;"	e	enum:__anon29
SFE_HTK_BAD_FILE_LEN	.\libsndfile-1.0.17\src\htk.c	34;"	d	file:
SFE_HTK_NOT_WAVEFORM	.\libsndfile-1.0.17\src\htk.c	35;"	d	file:
SFE_HTK_NO_PIPE	.\libsndfile-1.0.17\src\common.h	/^	SFE_HTK_NO_PIPE,$/;"	e	enum:__anon29
SFE_INTERLEAVE_MODE	.\libsndfile-1.0.17\src\common.h	/^	SFE_INTERLEAVE_MODE,$/;"	e	enum:__anon29
SFE_INTERLEAVE_READ	.\libsndfile-1.0.17\src\common.h	/^	SFE_INTERLEAVE_READ,$/;"	e	enum:__anon29
SFE_INTERLEAVE_SEEK	.\libsndfile-1.0.17\src\common.h	/^	SFE_INTERLEAVE_SEEK,$/;"	e	enum:__anon29
SFE_INTERNAL	.\libsndfile-1.0.17\src\common.h	/^	SFE_INTERNAL,$/;"	e	enum:__anon29
SFE_IRCAM_BAD_CHANNELS	.\libsndfile-1.0.17\src\common.h	/^	SFE_IRCAM_BAD_CHANNELS,$/;"	e	enum:__anon29
SFE_IRCAM_NO_MARKER	.\libsndfile-1.0.17\src\common.h	/^	SFE_IRCAM_NO_MARKER,$/;"	e	enum:__anon29
SFE_IRCAM_UNKNOWN_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_IRCAM_UNKNOWN_FORMAT,$/;"	e	enum:__anon29
SFE_MALFORMED_FILE	.\libsndfile-1.0.17\src\common.h	/^	SFE_MALFORMED_FILE			= SF_ERR_MALFORMED_FILE,$/;"	e	enum:__anon29
SFE_MALLOC_FAILED	.\libsndfile-1.0.17\src\common.h	/^	SFE_MALLOC_FAILED,$/;"	e	enum:__anon29
SFE_MAT4_BAD_NAME	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAT4_BAD_NAME,$/;"	e	enum:__anon29
SFE_MAT4_NO_SAMPLERATE	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAT4_NO_SAMPLERATE,$/;"	e	enum:__anon29
SFE_MAT4_ZERO_CHANNELS	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAT4_ZERO_CHANNELS,$/;"	e	enum:__anon29
SFE_MAT5_BAD_ENDIAN	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAT5_BAD_ENDIAN,$/;"	e	enum:__anon29
SFE_MAT5_NO_BLOCK	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAT5_NO_BLOCK,$/;"	e	enum:__anon29
SFE_MAT5_SAMPLE_RATE	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAT5_SAMPLE_RATE,$/;"	e	enum:__anon29
SFE_MAT5_ZERO_CHANNELS	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAT5_ZERO_CHANNELS,$/;"	e	enum:__anon29
SFE_MAX_ERROR	.\libsndfile-1.0.17\src\common.h	/^	SFE_MAX_ERROR			\/* This must be last in list. *\/$/;"	e	enum:__anon29
SFE_NIST_BAD_ENCODING	.\libsndfile-1.0.17\src\common.h	/^	SFE_NIST_BAD_ENCODING,$/;"	e	enum:__anon29
SFE_NIST_BAD_HEADER	.\libsndfile-1.0.17\src\common.h	/^	SFE_NIST_BAD_HEADER,$/;"	e	enum:__anon29
SFE_NIST_CRLF_CONVERISON	.\libsndfile-1.0.17\src\common.h	/^	SFE_NIST_CRLF_CONVERISON,$/;"	e	enum:__anon29
SFE_NOT_READMODE	.\libsndfile-1.0.17\src\common.h	/^	SFE_NOT_READMODE,$/;"	e	enum:__anon29
SFE_NOT_SEEKABLE	.\libsndfile-1.0.17\src\common.h	/^	SFE_NOT_SEEKABLE,$/;"	e	enum:__anon29
SFE_NOT_WRITEMODE	.\libsndfile-1.0.17\src\common.h	/^	SFE_NOT_WRITEMODE,$/;"	e	enum:__anon29
SFE_NO_EMBEDDED_RDWR	.\libsndfile-1.0.17\src\common.h	/^	SFE_NO_EMBEDDED_RDWR,$/;"	e	enum:__anon29
SFE_NO_EMBED_SUPPORT	.\libsndfile-1.0.17\src\common.h	/^	SFE_NO_EMBED_SUPPORT,$/;"	e	enum:__anon29
SFE_NO_ERROR	.\libsndfile-1.0.17\src\common.h	/^{	SFE_NO_ERROR				= SF_ERR_NO_ERROR,$/;"	e	enum:__anon29
SFE_NO_PIPE_WRITE	.\libsndfile-1.0.17\src\common.h	/^	SFE_NO_PIPE_WRITE,$/;"	e	enum:__anon29
SFE_OPEN_FAILED	.\libsndfile-1.0.17\src\common.h	/^	SFE_OPEN_FAILED,$/;"	e	enum:__anon29
SFE_OPEN_PIPE_RDWR	.\libsndfile-1.0.17\src\common.h	/^	SFE_OPEN_PIPE_RDWR,$/;"	e	enum:__anon29
SFE_PAF_NO_MARKER	.\libsndfile-1.0.17\src\common.h	/^	SFE_PAF_NO_MARKER,$/;"	e	enum:__anon29
SFE_PAF_SHORT_HEADER	.\libsndfile-1.0.17\src\common.h	/^	SFE_PAF_SHORT_HEADER,$/;"	e	enum:__anon29
SFE_PAF_UNKNOWN_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_PAF_UNKNOWN_FORMAT,$/;"	e	enum:__anon29
SFE_PAF_VERSION	.\libsndfile-1.0.17\src\common.h	/^	SFE_PAF_VERSION,$/;"	e	enum:__anon29
SFE_PVF_BAD_BITWIDTH	.\libsndfile-1.0.17\src\common.h	/^	SFE_PVF_BAD_BITWIDTH,$/;"	e	enum:__anon29
SFE_PVF_BAD_HEADER	.\libsndfile-1.0.17\src\common.h	/^	SFE_PVF_BAD_HEADER,$/;"	e	enum:__anon29
SFE_PVF_NO_PVF1	.\libsndfile-1.0.17\src\common.h	/^	SFE_PVF_NO_PVF1,$/;"	e	enum:__anon29
SFE_RAW_BAD_BITWIDTH	.\libsndfile-1.0.17\src\common.h	/^	SFE_RAW_BAD_BITWIDTH,$/;"	e	enum:__anon29
SFE_RAW_BAD_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_RAW_BAD_FORMAT,$/;"	e	enum:__anon29
SFE_RAW_READ_BAD_SPEC	.\libsndfile-1.0.17\src\common.h	/^	SFE_RAW_READ_BAD_SPEC,$/;"	e	enum:__anon29
SFE_RDWR_BAD_HEADER	.\libsndfile-1.0.17\src\common.h	/^	SFE_RDWR_BAD_HEADER,$/;"	e	enum:__anon29
SFE_RDWR_POSITION	.\libsndfile-1.0.17\src\common.h	/^	SFE_RDWR_POSITION,$/;"	e	enum:__anon29
SFE_SD2_BAD_DATA_LENGTH	.\libsndfile-1.0.17\src\common.h	/^	SFE_SD2_BAD_DATA_LENGTH,$/;"	e	enum:__anon29
SFE_SD2_BAD_DATA_OFFSET	.\libsndfile-1.0.17\src\common.h	/^	SFE_SD2_BAD_DATA_OFFSET,$/;"	e	enum:__anon29
SFE_SD2_BAD_MAP_LENGTH	.\libsndfile-1.0.17\src\common.h	/^	SFE_SD2_BAD_MAP_LENGTH,$/;"	e	enum:__anon29
SFE_SD2_BAD_MAP_OFFSET	.\libsndfile-1.0.17\src\common.h	/^	SFE_SD2_BAD_MAP_OFFSET,$/;"	e	enum:__anon29
SFE_SD2_BAD_RSRC	.\libsndfile-1.0.17\src\common.h	/^	SFE_SD2_BAD_RSRC,$/;"	e	enum:__anon29
SFE_SD2_BAD_SAMPLE_SIZE	.\libsndfile-1.0.17\src\common.h	/^	SFE_SD2_BAD_SAMPLE_SIZE,$/;"	e	enum:__anon29
SFE_SD2_FD_DISALLOWED	.\libsndfile-1.0.17\src\common.h	/^	SFE_SD2_FD_DISALLOWED,$/;"	e	enum:__anon29
SFE_SDS_BAD_BIT_WIDTH	.\libsndfile-1.0.17\src\common.h	/^	SFE_SDS_BAD_BIT_WIDTH,$/;"	e	enum:__anon29
SFE_SDS_NOT_SDS	.\libsndfile-1.0.17\src\common.h	/^	SFE_SDS_NOT_SDS,$/;"	e	enum:__anon29
SFE_SEEK_FAILED	.\libsndfile-1.0.17\src\common.h	/^	SFE_SEEK_FAILED,$/;"	e	enum:__anon29
SFE_STR_BAD_STRING	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_BAD_STRING,$/;"	e	enum:__anon29
SFE_STR_BAD_TYPE	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_BAD_TYPE,$/;"	e	enum:__anon29
SFE_STR_MAX_COUNT	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_MAX_COUNT,$/;"	e	enum:__anon29
SFE_STR_MAX_DATA	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_MAX_DATA,$/;"	e	enum:__anon29
SFE_STR_NOT_WRITE	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_NOT_WRITE,$/;"	e	enum:__anon29
SFE_STR_NO_ADD_END	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_NO_ADD_END,$/;"	e	enum:__anon29
SFE_STR_NO_SUPPORT	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_NO_SUPPORT,$/;"	e	enum:__anon29
SFE_STR_WEIRD	.\libsndfile-1.0.17\src\common.h	/^	SFE_STR_WEIRD,$/;"	e	enum:__anon29
SFE_SVX_BAD_COMP	.\libsndfile-1.0.17\src\common.h	/^	SFE_SVX_BAD_COMP,$/;"	e	enum:__anon29
SFE_SVX_BAD_NAME_LENGTH	.\libsndfile-1.0.17\src\common.h	/^	SFE_SVX_BAD_NAME_LENGTH,$/;"	e	enum:__anon29
SFE_SVX_NO_BODY	.\libsndfile-1.0.17\src\common.h	/^	SFE_SVX_NO_BODY,$/;"	e	enum:__anon29
SFE_SVX_NO_DATA	.\libsndfile-1.0.17\src\common.h	/^	SFE_SVX_NO_DATA,$/;"	e	enum:__anon29
SFE_SVX_NO_FORM	.\libsndfile-1.0.17\src\common.h	/^	SFE_SVX_NO_FORM,$/;"	e	enum:__anon29
SFE_SYSTEM	.\libsndfile-1.0.17\src\common.h	/^	SFE_SYSTEM					= SF_ERR_SYSTEM,$/;"	e	enum:__anon29
SFE_UNIMPLEMENTED	.\libsndfile-1.0.17\src\common.h	/^	SFE_UNIMPLEMENTED,$/;"	e	enum:__anon29
SFE_UNKNOWN_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_UNKNOWN_FORMAT,$/;"	e	enum:__anon29
SFE_UNSUPPORTED_ENCODING	.\libsndfile-1.0.17\src\common.h	/^	SFE_UNSUPPORTED_ENCODING	= SF_ERR_UNSUPPORTED_ENCODING,$/;"	e	enum:__anon29
SFE_VOC_BAD_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_BAD_FORMAT,$/;"	e	enum:__anon29
SFE_VOC_BAD_MARKER	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_BAD_MARKER,$/;"	e	enum:__anon29
SFE_VOC_BAD_SECTIONS	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_BAD_SECTIONS,$/;"	e	enum:__anon29
SFE_VOC_BAD_VERSION	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_BAD_VERSION,$/;"	e	enum:__anon29
SFE_VOC_MULTI_PARAM	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_MULTI_PARAM,$/;"	e	enum:__anon29
SFE_VOC_MULTI_SAMPLERATE	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_MULTI_SAMPLERATE,$/;"	e	enum:__anon29
SFE_VOC_MULTI_SECTION	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_MULTI_SECTION,$/;"	e	enum:__anon29
SFE_VOC_NO_CREATIVE	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_NO_CREATIVE,$/;"	e	enum:__anon29
SFE_VOC_NO_PIPE	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_NO_PIPE,$/;"	e	enum:__anon29
SFE_VOC_SECTION_COUNT	.\libsndfile-1.0.17\src\common.h	/^	SFE_VOC_SECTION_COUNT,$/;"	e	enum:__anon29
SFE_W64_64_BIT	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_64_BIT,$/;"	e	enum:__anon29
SFE_W64_ADPCM_CHANNELS	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_ADPCM_CHANNELS,$/;"	e	enum:__anon29
SFE_W64_ADPCM_NOT4BIT	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_ADPCM_NOT4BIT,$/;"	e	enum:__anon29
SFE_W64_FMT_SHORT	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_FMT_SHORT,$/;"	e	enum:__anon29
SFE_W64_FMT_TOO_BIG	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_FMT_TOO_BIG,$/;"	e	enum:__anon29
SFE_W64_GSM610_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_GSM610_FORMAT,$/;"	e	enum:__anon29
SFE_W64_NO_DATA	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_NO_DATA,$/;"	e	enum:__anon29
SFE_W64_NO_FMT	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_NO_FMT,$/;"	e	enum:__anon29
SFE_W64_NO_RIFF	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_NO_RIFF,$/;"	e	enum:__anon29
SFE_W64_NO_WAVE	.\libsndfile-1.0.17\src\common.h	/^	SFE_W64_NO_WAVE,$/;"	e	enum:__anon29
SFE_WAV_ADPCM_CHANNELS	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_ADPCM_CHANNELS,$/;"	e	enum:__anon29
SFE_WAV_ADPCM_NOT4BIT	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_ADPCM_NOT4BIT,$/;"	e	enum:__anon29
SFE_WAV_BAD_BLOCKALIGN	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_BAD_BLOCKALIGN,$/;"	e	enum:__anon29
SFE_WAV_BAD_FACT	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_BAD_FACT,$/;"	e	enum:__anon29
SFE_WAV_BAD_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_BAD_FORMAT,$/;"	e	enum:__anon29
SFE_WAV_BAD_LIST	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_BAD_LIST,$/;"	e	enum:__anon29
SFE_WAV_BAD_PEAK	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_BAD_PEAK,$/;"	e	enum:__anon29
SFE_WAV_FMT_SHORT	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_FMT_SHORT,$/;"	e	enum:__anon29
SFE_WAV_GSM610_FORMAT	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_GSM610_FORMAT,$/;"	e	enum:__anon29
SFE_WAV_NO_DATA	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_NO_DATA,$/;"	e	enum:__anon29
SFE_WAV_NO_FMT	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_NO_FMT,$/;"	e	enum:__anon29
SFE_WAV_NO_RIFF	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_NO_RIFF,$/;"	e	enum:__anon29
SFE_WAV_NO_WAVE	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_NO_WAVE,$/;"	e	enum:__anon29
SFE_WAV_PEAK_B4_FMT	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_PEAK_B4_FMT,$/;"	e	enum:__anon29
SFE_WAV_UNKNOWN_CHUNK	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_UNKNOWN_CHUNK,$/;"	e	enum:__anon29
SFE_WAV_WVPK_DATA	.\libsndfile-1.0.17\src\common.h	/^	SFE_WAV_WVPK_DATA,$/;"	e	enum:__anon29
SFE_WRONG_SEEK	.\libsndfile-1.0.17\src\common.h	/^	SFE_WRONG_SEEK,$/;"	e	enum:__anon29
SFE_WVE_NOT_WVE	.\libsndfile-1.0.17\src\wve.c	41;"	d	file:
SFE_XI_BAD_HEADER	.\libsndfile-1.0.17\src\common.h	/^	SFE_XI_BAD_HEADER,$/;"	e	enum:__anon29
SFE_XI_EXCESS_SAMPLES	.\libsndfile-1.0.17\src\common.h	/^	SFE_XI_EXCESS_SAMPLES,$/;"	e	enum:__anon29
SFE_XI_NO_PIPE	.\libsndfile-1.0.17\src\common.h	/^	SFE_XI_NO_PIPE,$/;"	e	enum:__anon29
SFM_MASK	.\libsndfile-1.0.17\src\common.h	98;"	d
SFM_RDWR	.\sndfile.h	/^	SFM_RDWR	= 0x30$/;"	e	enum:__anon89
SFM_READ	.\sndfile.h	/^	SFM_READ	= 0x10,$/;"	e	enum:__anon89
SFM_UNMASK	.\libsndfile-1.0.17\src\common.h	99;"	d
SFM_WRITE	.\sndfile.h	/^	SFM_WRITE	= 0x20,$/;"	e	enum:__anon89
SFX_MARKER	.\libsndfile-1.0.17\src\aiff.c	51;"	d	file:
SF_BROADCAST_INFO	.\sndfile.h	/^} SF_BROADCAST_INFO ;$/;"	t	typeref:struct:__anon99
SF_BUFFER_LEN	.\libsndfile-1.0.17\src\common.h	55;"	d
SF_CHARS_SIGNED	.\libsndfile-1.0.17\src\pcm.c	/^	SF_CHARS_SIGNED		= 200,$/;"	e	enum:__anon49	file:
SF_CHARS_UNSIGNED	.\libsndfile-1.0.17\src\pcm.c	/^	SF_CHARS_UNSIGNED	= 201$/;"	e	enum:__anon49	file:
SF_COUNT_MAX	.\sndfile.h	255;"	d
SF_COUNT_TO_LONG	.\libsndfile-1.0.17\tests\utils.h	34;"	d
SF_DITHER_INFO	.\sndfile.h	/^} SF_DITHER_INFO ;$/;"	t	typeref:struct:__anon93
SF_EMBED_FILE_INFO	.\sndfile.h	/^} SF_EMBED_FILE_INFO ;$/;"	t	typeref:struct:__anon94
SF_ENDIAN_BIG	.\sndfile.h	/^	SF_ENDIAN_BIG			= 0x20000000,	\/* Force big endian-ness. *\/$/;"	e	enum:__anon86
SF_ENDIAN_CPU	.\sndfile.h	/^	SF_ENDIAN_CPU			= 0x30000000,	\/* Force CPU endian-ness. *\/$/;"	e	enum:__anon86
SF_ENDIAN_FILE	.\sndfile.h	/^	SF_ENDIAN_FILE			= 0x00000000,	\/* Default file endian-ness. *\/$/;"	e	enum:__anon86
SF_ENDIAN_LITTLE	.\sndfile.h	/^	SF_ENDIAN_LITTLE		= 0x10000000,	\/* Force little endian-ness. *\/$/;"	e	enum:__anon86
SF_ERR_MALFORMED_FILE	.\sndfile.h	/^	SF_ERR_MALFORMED_FILE		= 3,$/;"	e	enum:__anon90
SF_ERR_NO_ERROR	.\sndfile.h	/^{	SF_ERR_NO_ERROR				= 0,$/;"	e	enum:__anon90
SF_ERR_SYSTEM	.\sndfile.h	/^	SF_ERR_SYSTEM				= 2,$/;"	e	enum:__anon90
SF_ERR_UNRECOGNISED_FORMAT	.\sndfile.h	/^	SF_ERR_UNRECOGNISED_FORMAT	= 1,$/;"	e	enum:__anon90
SF_ERR_UNSUPPORTED_ENCODING	.\sndfile.h	/^	SF_ERR_UNSUPPORTED_ENCODING	= 4$/;"	e	enum:__anon90
SF_FALSE	.\sndfile.h	/^	SF_FALSE	= 0,$/;"	e	enum:__anon89
SF_FILENAME_LEN	.\libsndfile-1.0.17\src\common.h	56;"	d
SF_FORMAT_AIFF	.\sndfile.h	/^	SF_FORMAT_AIFF			= 0x020000,		\/* Apple\/SGI AIFF format (big endian). *\/$/;"	e	enum:__anon86
SF_FORMAT_ALAW	.\sndfile.h	/^	SF_FORMAT_ALAW			= 0x0011,		\/* A-Law encoded. *\/$/;"	e	enum:__anon86
SF_FORMAT_AU	.\sndfile.h	/^	SF_FORMAT_AU			= 0x030000,		\/* Sun\/NeXT AU format (big endian). *\/$/;"	e	enum:__anon86
SF_FORMAT_AVR	.\sndfile.h	/^	SF_FORMAT_AVR			= 0x120000,		\/* Audio Visual Research *\/$/;"	e	enum:__anon86
SF_FORMAT_CAF	.\sndfile.h	/^	SF_FORMAT_CAF			= 0x180000,		\/* Core Audio File format *\/$/;"	e	enum:__anon86
SF_FORMAT_DOUBLE	.\sndfile.h	/^	SF_FORMAT_DOUBLE		= 0x0007,		\/* 64 bit float data *\/$/;"	e	enum:__anon86
SF_FORMAT_DPCM_16	.\sndfile.h	/^	SF_FORMAT_DPCM_16		= 0x0051,		\/* 16 bit differential PCM (XI only) *\/$/;"	e	enum:__anon86
SF_FORMAT_DPCM_8	.\sndfile.h	/^	SF_FORMAT_DPCM_8		= 0x0050,		\/* 8 bit differential PCM (XI only) *\/$/;"	e	enum:__anon86
SF_FORMAT_DWD	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_DWD			= 0x4040000,		\/* DiamondWare Digirized *\/$/;"	e	enum:__anon24
SF_FORMAT_DWVW_12	.\sndfile.h	/^	SF_FORMAT_DWVW_12		= 0x0040, 		\/* 12 bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_DWVW_16	.\sndfile.h	/^	SF_FORMAT_DWVW_16		= 0x0041, 		\/* 16 bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_DWVW_24	.\sndfile.h	/^	SF_FORMAT_DWVW_24		= 0x0042, 		\/* 24 bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_DWVW_N	.\sndfile.h	/^	SF_FORMAT_DWVW_N		= 0x0043, 		\/* N bit Delta Width Variable Word encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_ENDMASK	.\sndfile.h	/^	SF_FORMAT_ENDMASK		= 0x30000000$/;"	e	enum:__anon86
SF_FORMAT_FLAC	.\sndfile.h	/^	SF_FORMAT_FLAC			= 0x170000,		\/* FLAC lossless file format *\/$/;"	e	enum:__anon86
SF_FORMAT_FLOAT	.\sndfile.h	/^	SF_FORMAT_FLOAT			= 0x0006,		\/* 32 bit float data *\/$/;"	e	enum:__anon86
SF_FORMAT_G721_32	.\sndfile.h	/^	SF_FORMAT_G721_32		= 0x0030,		\/* 32kbs G721 ADPCM encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_G723_24	.\sndfile.h	/^	SF_FORMAT_G723_24		= 0x0031,		\/* 24kbs G723 ADPCM encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_G723_40	.\sndfile.h	/^	SF_FORMAT_G723_40		= 0x0032,		\/* 40kbs G723 ADPCM encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_GSM610	.\sndfile.h	/^	SF_FORMAT_GSM610		= 0x0020,		\/* GSM 6.10 encoding. *\/$/;"	e	enum:__anon86
SF_FORMAT_HTK	.\sndfile.h	/^	SF_FORMAT_HTK			= 0x100000,		\/* HMM Tool Kit format *\/$/;"	e	enum:__anon86
SF_FORMAT_IMA_ADPCM	.\sndfile.h	/^	SF_FORMAT_IMA_ADPCM		= 0x0012,		\/* IMA ADPCM. *\/$/;"	e	enum:__anon86
SF_FORMAT_INFO	.\sndfile.h	/^} SF_FORMAT_INFO ;$/;"	t	typeref:struct:__anon91
SF_FORMAT_IRCAM	.\sndfile.h	/^	SF_FORMAT_IRCAM			= 0x0A0000,		\/* Berkeley\/IRCAM\/CARL *\/$/;"	e	enum:__anon86
SF_FORMAT_KRZ	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_KRZ			= 0x40E0000,		\/* Kurzweil sampler file *\/$/;"	e	enum:__anon24
SF_FORMAT_MAT4	.\sndfile.h	/^	SF_FORMAT_MAT4			= 0x0C0000,		\/* Matlab (tm) V4.2 \/ GNU Octave 2.0 *\/$/;"	e	enum:__anon86
SF_FORMAT_MAT5	.\sndfile.h	/^	SF_FORMAT_MAT5			= 0x0D0000,		\/* Matlab (tm) V5.0 \/ GNU Octave 2.1 *\/$/;"	e	enum:__anon86
SF_FORMAT_MS_ADPCM	.\sndfile.h	/^	SF_FORMAT_MS_ADPCM		= 0x0013,		\/* Microsoft ADPCM. *\/$/;"	e	enum:__anon86
SF_FORMAT_NIST	.\sndfile.h	/^	SF_FORMAT_NIST			= 0x070000,		\/* Sphere NIST format. *\/$/;"	e	enum:__anon86
SF_FORMAT_OGG	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_OGG			= 0x4090000,$/;"	e	enum:__anon24
SF_FORMAT_PAF	.\sndfile.h	/^	SF_FORMAT_PAF			= 0x050000,		\/* Ensoniq PARIS file format. *\/$/;"	e	enum:__anon86
SF_FORMAT_PCM_16	.\sndfile.h	/^	SF_FORMAT_PCM_16		= 0x0002,		\/* Signed 16 bit data *\/$/;"	e	enum:__anon86
SF_FORMAT_PCM_24	.\sndfile.h	/^	SF_FORMAT_PCM_24		= 0x0003,		\/* Signed 24 bit data *\/$/;"	e	enum:__anon86
SF_FORMAT_PCM_32	.\sndfile.h	/^	SF_FORMAT_PCM_32		= 0x0004,		\/* Signed 32 bit data *\/$/;"	e	enum:__anon86
SF_FORMAT_PCM_N	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_PCM_N			= 0x1030$/;"	e	enum:__anon24
SF_FORMAT_PCM_S8	.\sndfile.h	/^	SF_FORMAT_PCM_S8		= 0x0001,		\/* Signed 8 bit data *\/$/;"	e	enum:__anon86
SF_FORMAT_PCM_U8	.\sndfile.h	/^	SF_FORMAT_PCM_U8		= 0x0005,		\/* Unsigned 8 bit data (WAV and RAW only) *\/$/;"	e	enum:__anon86
SF_FORMAT_PVF	.\sndfile.h	/^	SF_FORMAT_PVF			= 0x0E0000,		\/* Portable Voice Format *\/$/;"	e	enum:__anon86
SF_FORMAT_RAW	.\sndfile.h	/^	SF_FORMAT_RAW			= 0x040000,		\/* RAW PCM data. *\/$/;"	e	enum:__anon86
SF_FORMAT_REX	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_REX			= 0x40A0000,		\/* Propellorheads Rex\/Rcy *\/$/;"	e	enum:__anon24
SF_FORMAT_REX2	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_REX2			= 0x40D0000,		\/* Propellorheads Rex2 *\/$/;"	e	enum:__anon24
SF_FORMAT_SD2	.\sndfile.h	/^	SF_FORMAT_SD2			= 0x160000,		\/* Sound Designer 2 *\/$/;"	e	enum:__anon86
SF_FORMAT_SDS	.\sndfile.h	/^	SF_FORMAT_SDS			= 0x110000,		\/* Midi Sample Dump Standard *\/$/;"	e	enum:__anon86
SF_FORMAT_SHN	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_SHN			= 0x4110000,		\/* Shorten. *\/$/;"	e	enum:__anon24
SF_FORMAT_SUBMASK	.\sndfile.h	/^	SF_FORMAT_SUBMASK		= 0x0000FFFF,$/;"	e	enum:__anon86
SF_FORMAT_SVX	.\sndfile.h	/^	SF_FORMAT_SVX			= 0x060000,		\/* Amiga IFF \/ SVX8 \/ SV16 format. *\/$/;"	e	enum:__anon86
SF_FORMAT_SVX_EXP	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_SVX_EXP		= 0x1021, 		\/* SVX Exponential Delta encoding. *\/$/;"	e	enum:__anon24
SF_FORMAT_SVX_FIB	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_SVX_FIB		= 0x1020, 		\/* SVX Fibonacci Delta encoding. *\/$/;"	e	enum:__anon24
SF_FORMAT_TXW	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_TXW			= 0x4030000,		\/* Yamaha TX16 sampler file *\/$/;"	e	enum:__anon24
SF_FORMAT_TYPEMASK	.\sndfile.h	/^	SF_FORMAT_TYPEMASK		= 0x0FFF0000,$/;"	e	enum:__anon86
SF_FORMAT_ULAW	.\sndfile.h	/^	SF_FORMAT_ULAW			= 0x0010,		\/* U-Law encoded. *\/$/;"	e	enum:__anon86
SF_FORMAT_VOC	.\sndfile.h	/^	SF_FORMAT_VOC			= 0x080000,		\/* VOC files. *\/$/;"	e	enum:__anon86
SF_FORMAT_VORBIS	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_VORBIS		= 0x1001,$/;"	e	enum:__anon24
SF_FORMAT_VOX_ADPCM	.\sndfile.h	/^	SF_FORMAT_VOX_ADPCM		= 0x0021,		\/* OKI \/ Dialogix ADPCM *\/$/;"	e	enum:__anon86
SF_FORMAT_W64	.\sndfile.h	/^	SF_FORMAT_W64			= 0x0B0000,		\/* Sonic Foundry's 64 bit RIFF\/WAV *\/$/;"	e	enum:__anon86
SF_FORMAT_WAV	.\sndfile.h	/^	SF_FORMAT_WAV			= 0x010000,		\/* Microsoft WAV format (little endian default). *\/$/;"	e	enum:__anon86
SF_FORMAT_WAVEX	.\sndfile.h	/^	SF_FORMAT_WAVEX			= 0x130000,		\/* MS WAVE with WAVEFORMATEX *\/$/;"	e	enum:__anon86
SF_FORMAT_WMA	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_WMA			= 0x4100000,		\/* Windows Media Audio. *\/$/;"	e	enum:__anon24
SF_FORMAT_WVE	.\libsndfile-1.0.17\src\common.h	/^	SF_FORMAT_WVE			= 0x4020000,		\/* Psion ALaw Sound File *\/$/;"	e	enum:__anon24
SF_FORMAT_XI	.\sndfile.h	/^	SF_FORMAT_XI			= 0x0F0000,		\/* Fasttracker 2 Extended Instrument *\/$/;"	e	enum:__anon86
SF_HEADER_LEN	.\libsndfile-1.0.17\src\common.h	60;"	d
SF_INFO	.\sndfile.h	/^struct SF_INFO$/;"	s
SF_INFO	.\sndfile.h	/^typedef	struct SF_INFO SF_INFO ;$/;"	t	typeref:struct:SF_INFO
SF_INFO::channels	.\sndfile.h	/^	int			channels ;$/;"	m	struct:SF_INFO	access:public
SF_INFO::format	.\sndfile.h	/^	int			format ;$/;"	m	struct:SF_INFO	access:public
SF_INFO::frames	.\sndfile.h	/^{	sf_count_t	frames ;		\/* Used to be called samples.  Changed to avoid confusion. *\/$/;"	m	struct:SF_INFO	access:public
SF_INFO::samplerate	.\sndfile.h	/^	int			samplerate ;$/;"	m	struct:SF_INFO	access:public
SF_INFO::sections	.\sndfile.h	/^	int			sections ;$/;"	m	struct:SF_INFO	access:public
SF_INFO::seekable	.\sndfile.h	/^	int			seekable ;$/;"	m	struct:SF_INFO	access:public
SF_INSTRUMENT	.\sndfile.h	/^} SF_INSTRUMENT ;$/;"	t	typeref:struct:__anon96
SF_LOOP_ALTERNATING	.\sndfile.h	/^	SF_LOOP_ALTERNATING$/;"	e	enum:__anon95
SF_LOOP_BACKWARD	.\sndfile.h	/^	SF_LOOP_BACKWARD,$/;"	e	enum:__anon95
SF_LOOP_FORWARD	.\sndfile.h	/^	SF_LOOP_FORWARD,$/;"	e	enum:__anon95
SF_LOOP_INFO	.\sndfile.h	/^} SF_LOOP_INFO ;$/;"	t	typeref:struct:__anon98
SF_LOOP_NONE	.\sndfile.h	/^	SF_LOOP_NONE = 800,$/;"	e	enum:__anon95
SF_MAX	.\libsndfile-1.0.17\src\common.h	75;"	d
SF_MAX_STRINGS	.\libsndfile-1.0.17\src\common.h	58;"	d
SF_MIN	.\libsndfile-1.0.17\src\common.h	76;"	d
SF_PEAK_END	.\libsndfile-1.0.17\src\common.h	/^	SF_PEAK_END			= 43,$/;"	e	enum:__anon23
SF_PEAK_START	.\libsndfile-1.0.17\src\common.h	/^	SF_PEAK_START		= 42,$/;"	e	enum:__anon23
SF_PRIVATE	.\libsndfile-1.0.17\src\common.h	/^} SF_PRIVATE ;$/;"	t	typeref:struct:sf_private_tag
SF_SCALE_MAX	.\libsndfile-1.0.17\src\common.h	/^	SF_SCALE_MAX		= 52,$/;"	e	enum:__anon23
SF_SCALE_MIN	.\libsndfile-1.0.17\src\common.h	/^	SF_SCALE_MIN		= 53,$/;"	e	enum:__anon23
SF_STR_ALLOW_END	.\libsndfile-1.0.17\src\common.h	/^	SF_STR_ALLOW_END	= 0x0200,$/;"	e	enum:__anon23
SF_STR_ALLOW_START	.\libsndfile-1.0.17\src\common.h	/^	SF_STR_ALLOW_START	= 0x0100,$/;"	e	enum:__anon23
SF_STR_ARTIST	.\sndfile.h	/^	SF_STR_ARTIST					= 0x04,$/;"	e	enum:__anon88
SF_STR_BUFFER_LEN	.\libsndfile-1.0.17\src\common.h	59;"	d
SF_STR_COMMENT	.\sndfile.h	/^	SF_STR_COMMENT					= 0x05,$/;"	e	enum:__anon88
SF_STR_COPYRIGHT	.\sndfile.h	/^	SF_STR_COPYRIGHT				= 0x02,$/;"	e	enum:__anon88
SF_STR_DATE	.\sndfile.h	/^	SF_STR_DATE						= 0x06$/;"	e	enum:__anon88
SF_STR_FIRST	.\sndfile.h	216;"	d
SF_STR_LAST	.\sndfile.h	217;"	d
SF_STR_LOCATE_END	.\libsndfile-1.0.17\src\common.h	/^	SF_STR_LOCATE_END	= 0x0800,$/;"	e	enum:__anon23
SF_STR_LOCATE_START	.\libsndfile-1.0.17\src\common.h	/^	SF_STR_LOCATE_START	= 0x0400,$/;"	e	enum:__anon23
SF_STR_SOFTWARE	.\sndfile.h	/^	SF_STR_SOFTWARE					= 0x03,$/;"	e	enum:__anon88
SF_STR_TITLE	.\sndfile.h	/^{	SF_STR_TITLE					= 0x01,$/;"	e	enum:__anon88
SF_SYSERR_LEN	.\libsndfile-1.0.17\src\common.h	57;"	d
SF_TRUE	.\sndfile.h	/^	SF_TRUE		= 1,$/;"	e	enum:__anon89
SF_VIRTUAL_IO	.\sndfile.h	/^struct SF_VIRTUAL_IO$/;"	s
SF_VIRTUAL_IO	.\sndfile.h	/^typedef	struct SF_VIRTUAL_IO SF_VIRTUAL_IO ;$/;"	t	typeref:struct:SF_VIRTUAL_IO
SF_VIRTUAL_IO::get_filelen	.\sndfile.h	/^{	sf_vio_get_filelen	get_filelen ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
SF_VIRTUAL_IO::read	.\sndfile.h	/^	sf_vio_read			read ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
SF_VIRTUAL_IO::seek	.\sndfile.h	/^	sf_vio_seek			seek ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
SF_VIRTUAL_IO::tell	.\sndfile.h	/^	sf_vio_tell			tell ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
SF_VIRTUAL_IO::write	.\sndfile.h	/^	sf_vio_write		write ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
SHORT_BUFFER	.\libsndfile-1.0.17\tests\error_test.c	34;"	d	file:
SIGNAL_MAXVAL	.\libsndfile-1.0.17\src\G72x\g72x_test.c	144;"	d	file:
SIGNAL_MAXVAL	.\libsndfile-1.0.17\tests\fix_this.c	275;"	d	file:
SIGNAL_MAXVAL	.\libsndfile-1.0.17\tests\lossy_comp_test.c	2022;"	d	file:
SIGNED_SIZEOF	.\libsndfile-1.0.17\examples\sndfile-play.c	59;"	d	file:
SIGNED_SIZEOF	.\libsndfile-1.0.17\src\common.h	71;"	d
SIGNED_SIZEOF	.\libsndfile-1.0.17\tests\utils.h	36;"	d
SIGNED_SIZEOF	.\libsndfile-1.0.17\tests\win32_test.c	39;"	d	file:
SILLY_WRITE_COUNT	.\libsndfile-1.0.17\tests\write_read_test.c	43;"	d	file:
SINE_AMP	.\libsndfile-1.0.17\tests\scale_clip_test.c	42;"	d	file:
SINF_MARKER	.\libsndfile-1.0.17\src\rx2.c	59;"	d	file:
SIZEOF_AIFC_COMM	.\libsndfile-1.0.17\src\aiff.c	87;"	d	file:
SIZEOF_AIFC_COMM_MIN	.\libsndfile-1.0.17\src\aiff.c	86;"	d	file:
SIZEOF_AIFF_COMM	.\libsndfile-1.0.17\src\aiff.c	85;"	d	file:
SIZEOF_INST_CHUNK	.\libsndfile-1.0.17\src\aiff.c	89;"	d	file:
SIZEOF_SSND_CHUNK	.\libsndfile-1.0.17\src\aiff.c	88;"	d	file:
SIZEOF_TRIBYTE	.\libsndfile-1.0.17\src\pcm.c	32;"	d	file:
SLCE_MARKER	.\libsndfile-1.0.17\src\rx2.c	51;"	d	file:
SLCL_MARKER	.\libsndfile-1.0.17\src\rx2.c	50;"	d	file:
SNDFILE	.\sndfile.h	/^typedef	struct SNDFILE_tag	SNDFILE ;$/;"	t	typeref:struct:SNDFILE_tag
SNDFILE_1	.\sndfile.h	30;"	d
SNDFILE_COMMON_H	.\libsndfile-1.0.17\src\common.h	20;"	d
SNDFILE_H	.\sndfile.h	27;"	d
SNDFILE_HH	.\libsndfile-1.0.17\src\sndfile.hh	53;"	d
SNDFILE_HH	.\sndfile.hh	53;"	d
SNDFILE_MAGICK	.\libsndfile-1.0.17\src\sndfile.c	29;"	d	file:
SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^		struct SNDFILE_ref$/;"	s	class:SndfileHandle	access:private
SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^		{	SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SNDFILE_ref::SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
SNDFILE_ref	.\sndfile.hh	/^		struct SNDFILE_ref$/;"	s	class:SndfileHandle	access:private
SNDFILE_ref	.\sndfile.hh	/^		{	SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
SNDFILE_ref	.\sndfile.hh	/^SndfileHandle::SNDFILE_ref::SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
SND_DATA_BLOCKS	.\libsndfile-1.0.17\src\voc.c	/^} SND_DATA_BLOCKS ;$/;"	t	typeref:struct:__anon58	file:
SOUN_MARKER	.\libsndfile-1.0.17\src\wve.c	48;"	d	file:
SSND_CHUNK	.\libsndfile-1.0.17\src\aiff.c	/^} SSND_CHUNK ;$/;"	t	typeref:struct:__anon11	file:
SSND_MARKER	.\libsndfile-1.0.17\src\aiff.c	40;"	d	file:
STATBUF	.\libsndfile-1.0.17\tests\win32_test.c	/^	typedef		struct _stati64		STATBUF ;$/;"	t	typeref:struct:_stati64	file:
STATBUF	.\libsndfile-1.0.17\tests\win32_test.c	/^	typedef		struct stat			STATBUF ;$/;"	t	typeref:struct:stat	file:
STATBUF	.\libsndfile-1.0.17\tests\win32_test.c	/^	typedef		struct stat		STATBUF ;$/;"	t	typeref:struct:stat	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	202;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	203;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	366;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	367;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	532;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	533;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	745;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	746;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	847;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\long_term.c	848;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\lpc.c	296;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\lpc.c	297;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\lpc.c	315;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\lpc.c	93;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\rpe.c	155;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\rpe.c	156;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\rpe.c	59;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\rpe.c	60;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\short_term.c	49;"	d	file:
STEP	.\libsndfile-1.0.17\src\GSM610\short_term.c	50;"	d	file:
STEP_A	.\libsndfile-1.0.17\src\GSM610\long_term.c	380;"	d	file:
STEP_A	.\libsndfile-1.0.17\src\GSM610\long_term.c	546;"	d	file:
STEP_A	.\libsndfile-1.0.17\src\GSM610\long_term.c	759;"	d	file:
STEP_B	.\libsndfile-1.0.17\src\GSM610\long_term.c	381;"	d	file:
STEP_B	.\libsndfile-1.0.17\src\GSM610\long_term.c	547;"	d	file:
STEP_B	.\libsndfile-1.0.17\src\GSM610\long_term.c	760;"	d	file:
STEP_C	.\libsndfile-1.0.17\src\GSM610\long_term.c	382;"	d	file:
STEP_C	.\libsndfile-1.0.17\src\GSM610\long_term.c	548;"	d	file:
STEP_C	.\libsndfile-1.0.17\src\GSM610\long_term.c	761;"	d	file:
STEP_D	.\libsndfile-1.0.17\src\GSM610\long_term.c	383;"	d	file:
STEP_D	.\libsndfile-1.0.17\src\GSM610\long_term.c	549;"	d	file:
STEP_D	.\libsndfile-1.0.17\src\GSM610\long_term.c	762;"	d	file:
STEP_E	.\libsndfile-1.0.17\src\GSM610\long_term.c	384;"	d	file:
STEP_E	.\libsndfile-1.0.17\src\GSM610\long_term.c	550;"	d	file:
STEP_E	.\libsndfile-1.0.17\src\GSM610\long_term.c	763;"	d	file:
STEP_F	.\libsndfile-1.0.17\src\GSM610\long_term.c	385;"	d	file:
STEP_F	.\libsndfile-1.0.17\src\GSM610\long_term.c	551;"	d	file:
STEP_F	.\libsndfile-1.0.17\src\GSM610\long_term.c	764;"	d	file:
STEP_G	.\libsndfile-1.0.17\src\GSM610\long_term.c	386;"	d	file:
STEP_G	.\libsndfile-1.0.17\src\GSM610\long_term.c	552;"	d	file:
STEP_G	.\libsndfile-1.0.17\src\GSM610\long_term.c	765;"	d	file:
STEP_H	.\libsndfile-1.0.17\src\GSM610\long_term.c	387;"	d	file:
STEP_H	.\libsndfile-1.0.17\src\GSM610\long_term.c	553;"	d	file:
STEP_H	.\libsndfile-1.0.17\src\GSM610\long_term.c	766;"	d	file:
STR	.\libsndfile-1.0.17\src\wav_w64.c	356;"	d	file:
STRINGS_DEBUG	.\libsndfile-1.0.17\src\strings.c	28;"	d	file:
STR_DATA	.\libsndfile-1.0.17\src\common.h	/^} STR_DATA ;$/;"	t	typeref:struct:__anon27
STR_MARKER	.\libsndfile-1.0.17\src\macos.c	29;"	d	file:
STR_MARKER	.\libsndfile-1.0.17\src\sd2.c	50;"	d	file:
STR_RSRC	.\libsndfile-1.0.17\src\sd2.c	/^} STR_RSRC ;$/;"	t	typeref:struct:__anon52	file:
SV16_MARKER	.\libsndfile-1.0.17\src\svx.c	37;"	d	file:
SVX8_MARKER	.\libsndfile-1.0.17\src\svx.c	36;"	d	file:
S_IRGRP	.\libsndfile-1.0.17\src\sf_unistd.h	38;"	d
S_IROTH	.\libsndfile-1.0.17\src\sf_unistd.h	43;"	d
S_IRUSR	.\libsndfile-1.0.17\src\sf_unistd.h	26;"	d
S_IRWXG	.\libsndfile-1.0.17\src\sf_unistd.h	37;"	d
S_IRWXO	.\libsndfile-1.0.17\src\sf_unistd.h	42;"	d
S_IRWXU	.\libsndfile-1.0.17\src\sf_unistd.h	22;"	d
S_ISFIFO	.\libsndfile-1.0.17\src\sf_unistd.h	48;"	d
S_ISREG	.\libsndfile-1.0.17\src\sf_unistd.h	52;"	d
S_IWGRP	.\libsndfile-1.0.17\src\sf_unistd.h	39;"	d
S_IWOTH	.\libsndfile-1.0.17\src\sf_unistd.h	44;"	d
S_IWUSR	.\libsndfile-1.0.17\src\sf_unistd.h	30;"	d
S_IXGRP	.\libsndfile-1.0.17\src\sf_unistd.h	40;"	d
S_IXOTH	.\libsndfile-1.0.17\src\sf_unistd.h	45;"	d
S_IXUSR	.\libsndfile-1.0.17\src\sf_unistd.h	34;"	d
Sd2a_MARKER	.\libsndfile-1.0.17\src\sd2.c	46;"	d	file:
Sd2f_MARKER	.\libsndfile-1.0.17\src\sd2.c	45;"	d	file:
Short_term_analysis_filtering	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Short_term_analysis_filtering ($/;"	f	file:	signature:( struct gsm_state * S, register word * rp, register int k_n, register word * s )
Short_term_synthesis_filtering	.\libsndfile-1.0.17\src\GSM610\short_term.c	/^static void Short_term_synthesis_filtering ($/;"	f	file:	signature:( struct gsm_state * S, register word * rrp, register int k, register word * wt, register word * sr )
Similar	.\libsndfile-1.0.17\doc\index.html	/^<A NAME="Similar"><\/A>$/;"	a
Similar	.\share\doc\libsndfile1-dev\html\index.html	/^<A NAME="Similar"><\/A>$/;"	a
SndfileErrors	.\libsndfile-1.0.17\src\sndfile.c	/^ErrorStruct SndfileErrors [] =$/;"	v	file:
SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle (const SndfileHandle &orig) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &orig)
SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle (const char *path, int mode = SFM_READ,$/;"	p	class:SndfileHandle	access:public	signature:(const char *path, int mode = SFM_READ, int format = 0, int channels = 0, int samplerate = 0)
SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle (void) : p (NULL) {} ;$/;"	f	class:SndfileHandle	access:public	signature:(void)
SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SndfileHandle (const SndfileHandle &orig)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &orig)
SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SndfileHandle (const char *path, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle	signature:(const char *path, int mode, int fmt, int chans, int srate)
SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^class SndfileHandle$/;"	c
SndfileHandle	.\sndfile.hh	/^			SndfileHandle (const SndfileHandle &orig) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &orig)
SndfileHandle	.\sndfile.hh	/^			SndfileHandle (const char *path, int mode = SFM_READ,$/;"	p	class:SndfileHandle	access:public	signature:(const char *path, int mode = SFM_READ, int format = 0, int channels = 0, int samplerate = 0)
SndfileHandle	.\sndfile.hh	/^			SndfileHandle (void) : p (NULL) {} ;$/;"	f	class:SndfileHandle	access:public	signature:(void)
SndfileHandle	.\sndfile.hh	/^SndfileHandle::SndfileHandle (const SndfileHandle &orig)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &orig)
SndfileHandle	.\sndfile.hh	/^SndfileHandle::SndfileHandle (const char *path, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle	signature:(const char *path, int mode, int fmt, int chans, int srate)
SndfileHandle	.\sndfile.hh	/^class SndfileHandle$/;"	c
SndfileHandle::SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^		struct SNDFILE_ref$/;"	s	class:SndfileHandle	access:private
SndfileHandle::SNDFILE_ref	.\sndfile.hh	/^		struct SNDFILE_ref$/;"	s	class:SndfileHandle	access:private
SndfileHandle::SNDFILE_ref::SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^		{	SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
SndfileHandle::SNDFILE_ref::SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SNDFILE_ref::SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
SndfileHandle::SNDFILE_ref::SNDFILE_ref	.\sndfile.hh	/^		{	SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
SndfileHandle::SNDFILE_ref::SNDFILE_ref	.\sndfile.hh	/^SndfileHandle::SNDFILE_ref::SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
SndfileHandle::SNDFILE_ref::ref	.\libsndfile-1.0.17\src\sndfile.hh	/^			int ref ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
SndfileHandle::SNDFILE_ref::ref	.\sndfile.hh	/^			int ref ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
SndfileHandle::SNDFILE_ref::sf	.\libsndfile-1.0.17\src\sndfile.hh	/^			SNDFILE *sf ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
SndfileHandle::SNDFILE_ref::sf	.\sndfile.hh	/^			SNDFILE *sf ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
SndfileHandle::SNDFILE_ref::sfinfo	.\libsndfile-1.0.17\src\sndfile.hh	/^			SF_INFO sfinfo ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
SndfileHandle::SNDFILE_ref::sfinfo	.\sndfile.hh	/^			SF_INFO sfinfo ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
SndfileHandle::SNDFILE_ref::~SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^			~SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
SndfileHandle::SNDFILE_ref::~SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SNDFILE_ref::~SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
SndfileHandle::SNDFILE_ref::~SNDFILE_ref	.\sndfile.hh	/^			~SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
SndfileHandle::SNDFILE_ref::~SNDFILE_ref	.\sndfile.hh	/^SndfileHandle::SNDFILE_ref::~SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
SndfileHandle::SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle (const SndfileHandle &orig) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &orig)
SndfileHandle::SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle (const char *path, int mode = SFM_READ,$/;"	p	class:SndfileHandle	access:public	signature:(const char *path, int mode = SFM_READ, int format = 0, int channels = 0, int samplerate = 0)
SndfileHandle::SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle (void) : p (NULL) {} ;$/;"	f	class:SndfileHandle	access:public	signature:(void)
SndfileHandle::SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SndfileHandle (const SndfileHandle &orig)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &orig)
SndfileHandle::SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SndfileHandle (const char *path, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle	signature:(const char *path, int mode, int fmt, int chans, int srate)
SndfileHandle::SndfileHandle	.\sndfile.hh	/^			SndfileHandle (const SndfileHandle &orig) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &orig)
SndfileHandle::SndfileHandle	.\sndfile.hh	/^			SndfileHandle (const char *path, int mode = SFM_READ,$/;"	p	class:SndfileHandle	access:public	signature:(const char *path, int mode = SFM_READ, int format = 0, int channels = 0, int samplerate = 0)
SndfileHandle::SndfileHandle	.\sndfile.hh	/^			SndfileHandle (void) : p (NULL) {} ;$/;"	f	class:SndfileHandle	access:public	signature:(void)
SndfileHandle::SndfileHandle	.\sndfile.hh	/^SndfileHandle::SndfileHandle (const SndfileHandle &orig)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &orig)
SndfileHandle::SndfileHandle	.\sndfile.hh	/^SndfileHandle::SndfileHandle (const char *path, int mode, int fmt, int chans, int srate)$/;"	f	class:SndfileHandle	signature:(const char *path, int mode, int fmt, int chans, int srate)
SndfileHandle::channels	.\libsndfile-1.0.17\src\sndfile.hh	/^		int			channels (void) const	{ return p ? p->sfinfo.channels : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::channels	.\sndfile.hh	/^		int			channels (void) const	{ return p ? p->sfinfo.channels : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::command	.\libsndfile-1.0.17\src\sndfile.hh	/^		int command (int cmd, void *data, int datasize) ;$/;"	p	class:SndfileHandle	access:public	signature:(int cmd, void *data, int datasize)
SndfileHandle::command	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::command (int cmd, void *data, int datasize)$/;"	f	class:SndfileHandle	signature:(int cmd, void *data, int datasize)
SndfileHandle::command	.\sndfile.hh	/^		int command (int cmd, void *data, int datasize) ;$/;"	p	class:SndfileHandle	access:public	signature:(int cmd, void *data, int datasize)
SndfileHandle::command	.\sndfile.hh	/^SndfileHandle::command (int cmd, void *data, int datasize)$/;"	f	class:SndfileHandle	signature:(int cmd, void *data, int datasize)
SndfileHandle::error	.\libsndfile-1.0.17\src\sndfile.hh	/^		int error (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::error	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::error (void) const$/;"	f	class:SndfileHandle	signature:(void) const
SndfileHandle::error	.\sndfile.hh	/^		int error (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::error	.\sndfile.hh	/^SndfileHandle::error (void) const$/;"	f	class:SndfileHandle	signature:(void) const
SndfileHandle::format	.\libsndfile-1.0.17\src\sndfile.hh	/^		int			format (void) const		{ return p ? p->sfinfo.format : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::format	.\sndfile.hh	/^		int			format (void) const		{ return p ? p->sfinfo.format : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::frames	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	frames (void) const		{ return p ? p->sfinfo.frames : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::frames	.\sndfile.hh	/^		sf_count_t	frames (void) const		{ return p ? p->sfinfo.frames : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::getString	.\libsndfile-1.0.17\src\sndfile.hh	/^		const char* getString (int str_type) const ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type) const
SndfileHandle::getString	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::getString (int str_type) const$/;"	f	class:SndfileHandle	signature:(int str_type) const
SndfileHandle::getString	.\sndfile.hh	/^		const char* getString (int str_type) const ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type) const
SndfileHandle::getString	.\sndfile.hh	/^SndfileHandle::getString (int str_type) const$/;"	f	class:SndfileHandle	signature:(int str_type) const
SndfileHandle::operator =	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle & operator = (const SndfileHandle &rhs) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs)
SndfileHandle::operator =	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::operator = (const SndfileHandle &rhs)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &rhs)
SndfileHandle::operator =	.\sndfile.hh	/^			SndfileHandle & operator = (const SndfileHandle &rhs) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs)
SndfileHandle::operator =	.\sndfile.hh	/^SndfileHandle::operator = (const SndfileHandle &rhs)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &rhs)
SndfileHandle::operator ==	.\libsndfile-1.0.17\src\sndfile.hh	/^		bool operator == (const SndfileHandle &rhs) const { return (p == rhs.p) ; }$/;"	f	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs) const
SndfileHandle::operator ==	.\sndfile.hh	/^		bool operator == (const SndfileHandle &rhs) const { return (p == rhs.p) ; }$/;"	f	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs) const
SndfileHandle::operator bool	.\libsndfile-1.0.17\src\sndfile.hh	/^		operator bool () const { return (p != NULL) ; }$/;"	f	class:SndfileHandle	access:public	signature:() const
SndfileHandle::operator bool	.\sndfile.hh	/^		operator bool () const { return (p != NULL) ; }$/;"	f	class:SndfileHandle	access:public	signature:() const
SndfileHandle::p	.\libsndfile-1.0.17\src\sndfile.hh	/^		SNDFILE_ref *p ;$/;"	m	class:SndfileHandle	access:private
SndfileHandle::p	.\sndfile.hh	/^		SNDFILE_ref *p ;$/;"	m	class:SndfileHandle	access:private
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t items)
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t items)
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t items)
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t items)
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t items)
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t items)
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t items)
SndfileHandle::read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^		sf_count_t read (double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^		sf_count_t read (float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^		sf_count_t read (int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^		sf_count_t read (short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^SndfileHandle::read (double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^SndfileHandle::read (float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^SndfileHandle::read (int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t items)
SndfileHandle::read	.\sndfile.hh	/^SndfileHandle::read (short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t items)
SndfileHandle::readRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	readRaw		(void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(void *ptr, sf_count_t bytes)
SndfileHandle::readRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readRaw (void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(void *ptr, sf_count_t bytes)
SndfileHandle::readRaw	.\sndfile.hh	/^		sf_count_t	readRaw		(void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(void *ptr, sf_count_t bytes)
SndfileHandle::readRaw	.\sndfile.hh	/^SndfileHandle::readRaw (void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(void *ptr, sf_count_t bytes)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t frames)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t frames)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t frames)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t frames)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t frame_count)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t frame_count)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t frame_count)
SndfileHandle::readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t frame_count)
SndfileHandle::readf	.\sndfile.hh	/^		sf_count_t readf (double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t frames)
SndfileHandle::readf	.\sndfile.hh	/^		sf_count_t readf (float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t frames)
SndfileHandle::readf	.\sndfile.hh	/^		sf_count_t readf (int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t frames)
SndfileHandle::readf	.\sndfile.hh	/^		sf_count_t readf (short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t frames)
SndfileHandle::readf	.\sndfile.hh	/^SndfileHandle::readf (double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t frame_count)
SndfileHandle::readf	.\sndfile.hh	/^SndfileHandle::readf (float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t frame_count)
SndfileHandle::readf	.\sndfile.hh	/^SndfileHandle::readf (int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t frame_count)
SndfileHandle::readf	.\sndfile.hh	/^SndfileHandle::readf (short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t frame_count)
SndfileHandle::refCount	.\libsndfile-1.0.17\src\sndfile.hh	/^		int refCount (void) const { return (p == NULL) ? 0 : p->ref ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::refCount	.\sndfile.hh	/^		int refCount (void) const { return (p == NULL) ? 0 : p->ref ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::samplerate	.\libsndfile-1.0.17\src\sndfile.hh	/^		int			samplerate (void) const { return p ? p->sfinfo.samplerate : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::samplerate	.\sndfile.hh	/^		int			samplerate (void) const { return p ? p->sfinfo.samplerate : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::seek	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	seek (sf_count_t frames, int whence) ;$/;"	p	class:SndfileHandle	access:public	signature:(sf_count_t frames, int whence)
SndfileHandle::seek	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::seek (sf_count_t frame_count, int whence)$/;"	f	class:SndfileHandle	signature:(sf_count_t frame_count, int whence)
SndfileHandle::seek	.\sndfile.hh	/^		sf_count_t	seek (sf_count_t frames, int whence) ;$/;"	p	class:SndfileHandle	access:public	signature:(sf_count_t frames, int whence)
SndfileHandle::seek	.\sndfile.hh	/^SndfileHandle::seek (sf_count_t frame_count, int whence)$/;"	f	class:SndfileHandle	signature:(sf_count_t frame_count, int whence)
SndfileHandle::setString	.\libsndfile-1.0.17\src\sndfile.hh	/^		int setString (int str_type, const char* str) ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type, const char* str)
SndfileHandle::setString	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::setString (int str_type, const char* str)$/;"	f	class:SndfileHandle	signature:(int str_type, const char* str)
SndfileHandle::setString	.\sndfile.hh	/^		int setString (int str_type, const char* str) ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type, const char* str)
SndfileHandle::setString	.\sndfile.hh	/^SndfileHandle::setString (int str_type, const char* str)$/;"	f	class:SndfileHandle	signature:(int str_type, const char* str)
SndfileHandle::strError	.\libsndfile-1.0.17\src\sndfile.hh	/^		const char * strError (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::strError	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::strError (void) const$/;"	f	class:SndfileHandle	signature:(void) const
SndfileHandle::strError	.\sndfile.hh	/^		const char * strError (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
SndfileHandle::strError	.\sndfile.hh	/^SndfileHandle::strError (void) const$/;"	f	class:SndfileHandle	signature:(void) const
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t items)
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t items)
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t items)
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t items)
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t items)
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t items)
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t items)
SndfileHandle::write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^		sf_count_t write (const double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^		sf_count_t write (const float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^		sf_count_t write (const int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^		sf_count_t write (const short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^SndfileHandle::write (const double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^SndfileHandle::write (const float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^SndfileHandle::write (const int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t items)
SndfileHandle::write	.\sndfile.hh	/^SndfileHandle::write (const short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t items)
SndfileHandle::writeRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	writeRaw	(const void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(const void *ptr, sf_count_t bytes)
SndfileHandle::writeRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writeRaw (const void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(const void *ptr, sf_count_t bytes)
SndfileHandle::writeRaw	.\sndfile.hh	/^		sf_count_t	writeRaw	(const void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(const void *ptr, sf_count_t bytes)
SndfileHandle::writeRaw	.\sndfile.hh	/^SndfileHandle::writeRaw (const void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(const void *ptr, sf_count_t bytes)
SndfileHandle::writeSync	.\libsndfile-1.0.17\src\sndfile.hh	/^		void writeSync (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
SndfileHandle::writeSync	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writeSync (void)$/;"	f	class:SndfileHandle	signature:(void)
SndfileHandle::writeSync	.\sndfile.hh	/^		void writeSync (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
SndfileHandle::writeSync	.\sndfile.hh	/^SndfileHandle::writeSync (void)$/;"	f	class:SndfileHandle	signature:(void)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t frames)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t frames)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t frames)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t frames)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t frame_count)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t frame_count)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t frame_count)
SndfileHandle::writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t frame_count)
SndfileHandle::writef	.\sndfile.hh	/^		sf_count_t writef (const double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t frames)
SndfileHandle::writef	.\sndfile.hh	/^		sf_count_t writef (const float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t frames)
SndfileHandle::writef	.\sndfile.hh	/^		sf_count_t writef (const int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t frames)
SndfileHandle::writef	.\sndfile.hh	/^		sf_count_t writef (const short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t frames)
SndfileHandle::writef	.\sndfile.hh	/^SndfileHandle::writef (const double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t frame_count)
SndfileHandle::writef	.\sndfile.hh	/^SndfileHandle::writef (const float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t frame_count)
SndfileHandle::writef	.\sndfile.hh	/^SndfileHandle::writef (const int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t frame_count)
SndfileHandle::writef	.\sndfile.hh	/^SndfileHandle::writef (const short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t frame_count)
SndfileHandle::~SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			~SndfileHandle (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
SndfileHandle::~SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::~SndfileHandle (void)$/;"	f	class:SndfileHandle	signature:(void)
SndfileHandle::~SndfileHandle	.\sndfile.hh	/^			~SndfileHandle (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
SndfileHandle::~SndfileHandle	.\sndfile.hh	/^SndfileHandle::~SndfileHandle (void)$/;"	f	class:SndfileHandle	signature:(void)
TEST_DURATION	.\libsndfile-1.0.17\tests\benchmark.c	56;"	d	file:
TEST_WIN32	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	41;"	d	file:
TEST_WIN32	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	43;"	d	file:
TRIBYTE_ERROR	.\libsndfile-1.0.17\tests\write_read_test.c	388;"	d	file:
TRSH_MARKER	.\libsndfile-1.0.17\src\rx2.c	54;"	d	file:
TWOBIT_MARKER	.\libsndfile-1.0.17\src\avr.c	28;"	d	file:
TXW_DATA_OFFSET	.\libsndfile-1.0.17\src\txw.c	52;"	d	file:
TXW_HEADER	.\libsndfile-1.0.17\src\txw.c	/^} TXW_HEADER ;$/;"	t	typeref:struct:__anon56	file:
TXW_LOOPED	.\libsndfile-1.0.17\src\txw.c	54;"	d	file:
TXW_NO_LOOP	.\libsndfile-1.0.17\src\txw.c	55;"	d	file:
Transformation_to_Log_Area_Ratios	.\libsndfile-1.0.17\src\GSM610\lpc.c	/^static void Transformation_to_Log_Area_Ratios ($/;"	f	file:	signature:( register word * r )
ULAW_MARKER	.\libsndfile-1.0.17\src\aiff.c	70;"	d	file:
UNUSED	.\libsndfile-1.0.17\src\common.h	42;"	d
UNUSED	.\libsndfile-1.0.17\src\common.h	44;"	d
UNUSED	.\libsndfile-1.0.17\src\common.h	46;"	d
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_enc_seek_callback (const FLAC__SeekableStreamEncoder * UNUSED (encoder), FLAC__uint64 absolute_byte_offset, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_enc_tell_callback (const FLAC__SeekableStreamEncoder *UNUSED (encoder), FLAC__uint64 *absolute_byte_offset, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_enc_write_callback (const FLAC__SeekableStreamEncoder * UNUSED (encoder), const FLAC__byte buffer [], unsigned bytes, unsigned UNUSED (samples), unsigned UNUSED (current_frame), void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_eof_callback (const FLAC__SeekableStreamDecoder *UNUSED (decoder), void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_error_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__StreamDecoderErrorStatus status, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_length_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__uint64 *stream_length, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_meta_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), const FLAC__StreamMetadata *metadata, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_read_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__byte buffer [], unsigned *bytes, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_seek_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__uint64 absolute_byte_offset, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_tell_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__uint64 *absolute_byte_offset, void *client_data)$/;"	p	file:
UNUSED	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_write_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data)$/;"	p	file:
USE_FLOAT_MUL	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	11;"	d
VALIDATE_SNDFILE_AND_ASSIGN_PSF	.\libsndfile-1.0.17\src\sndfile.c	258;"	d	file:
VHDR_CHUNK	.\libsndfile-1.0.17\src\svx.c	/^} VHDR_CHUNK ;$/;"	t	typeref:struct:__anon54	file:
VHDR_MARKER	.\libsndfile-1.0.17\src\svx.c	38;"	d	file:
VIO_DATA	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^} VIO_DATA ;$/;"	t	typeref:struct:__anon84	file:
VOC_ASCII	.\libsndfile-1.0.17\src\voc.c	/^	VOC_ASCII			= 5,$/;"	e	enum:__anon57	file:
VOC_DATA	.\libsndfile-1.0.17\src\voc.c	/^} VOC_DATA ;$/;"	t	typeref:struct:__anon59	file:
VOC_END_REPEAT	.\libsndfile-1.0.17\src\voc.c	/^	VOC_END_REPEAT		= 7,$/;"	e	enum:__anon57	file:
VOC_EXTENDED	.\libsndfile-1.0.17\src\voc.c	/^	VOC_EXTENDED		= 8,$/;"	e	enum:__anon57	file:
VOC_EXTENDED_II	.\libsndfile-1.0.17\src\voc.c	/^	VOC_EXTENDED_II		= 9$/;"	e	enum:__anon57	file:
VOC_MARKER	.\libsndfile-1.0.17\src\voc.c	/^	VOC_MARKER			= 4,$/;"	e	enum:__anon57	file:
VOC_MAX_SECTIONS	.\libsndfile-1.0.17\src\voc.c	42;"	d	file:
VOC_REPEAT	.\libsndfile-1.0.17\src\voc.c	/^	VOC_REPEAT			= 6,$/;"	e	enum:__anon57	file:
VOC_SILENCE	.\libsndfile-1.0.17\src\voc.c	/^	VOC_SILENCE			= 3,$/;"	e	enum:__anon57	file:
VOC_SOUND_CONTINUE	.\libsndfile-1.0.17\src\voc.c	/^	VOC_SOUND_CONTINUE	= 2,$/;"	e	enum:__anon57	file:
VOC_SOUND_DATA	.\libsndfile-1.0.17\src\voc.c	/^	VOC_SOUND_DATA		= 1,$/;"	e	enum:__anon57	file:
VOC_TERMINATOR	.\libsndfile-1.0.17\src\voc.c	/^{	VOC_TERMINATOR		= 0,$/;"	e	enum:__anon57	file:
VOX_ADPCM_PRIVATE	.\libsndfile-1.0.17\src\vox_adpcm.c	/^} VOX_ADPCM_PRIVATE ;$/;"	t	typeref:struct:__anon60	file:
VOX_DATA_LEN	.\libsndfile-1.0.17\src\vox_adpcm.c	43;"	d	file:
WARN_UNUSED	.\libsndfile-1.0.17\src\common.h	50;"	d
WARN_UNUSED	.\libsndfile-1.0.17\src\common.h	52;"	d
WAV49	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	13;"	d
WAVE_FORMAT_ALAW	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ALAW					= 0x0006,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ANTEX_ADPCME	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ANTEX_ADPCME			= 0x0033, 		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_APTX	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_APTX					= 0x0025,		\/* Audio Processing Technology *\/$/;"	e	enum:__anon64
WAVE_FORMAT_AUDIOFILE_AF10	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_AUDIOFILE_AF10			= 0x0026,		\/* Audiofile, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_AUDIOFILE_AF36	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_AUDIOFILE_AF36			= 0x0024,		\/* Audiofile, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_BZV_DIGITAL	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_BZV_DIGITAL				= 0x0400,		\/* Brooktree Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CANOPUS_ATRAC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CANOPUS_ATRAC			= 0x0063,		\/* Canopus, Co., Ltd. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CIRRUS	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CIRRUS					= 0x0060,		\/* Cirrus Logic *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CONTROL_RES_CR10	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CONTROL_RES_CR10		= 0x0037,		\/* Control Resources Limited *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CONTROL_RES_VQLPC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CONTROL_RES_VQLPC		= 0x0034,		\/* Control Resources Limited *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CREATIVE_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CREATIVE_ADPCM			= 0x0200,		\/* Creative Labs, Inc *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CREATIVE_FASTSPEECH10	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CREATIVE_FASTSPEECH10 	= 0x0203,		\/* Creative Labs, Inc *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CREATIVE_FASTSPEECH8	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CREATIVE_FASTSPEECH8 	= 0x0202,		\/* Creative Labs, Inc *\/$/;"	e	enum:__anon64
WAVE_FORMAT_CU_CODEC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_CU_CODEC				= 0x0019,		\/* Hewlett-Packard Company *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DF_G726	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DF_G726					= 0x0085,		\/* DataFusion Systems (Pty) (Ltd) *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DF_GSM610	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DF_GSM610				= 0x0086,		\/* DataFusion Systems (Pty) (Ltd) *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DIALOGIC_OKI_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DIALOGIC_OKI_ADPCM		= 0x0017,		\/*  Dialogic Corporation  *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DIGIADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DIGIADPCM				= 0x0036,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DIGIFIX	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DIGIFIX					= 0x0016,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DIGIREAL	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DIGIREAL				= 0x0035,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DIGISTD	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DIGISTD					= 0x0015,		\/* DSP Solutions, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DIGITAL_G723	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DIGITAL_G723			= 0x0123,		\/* Digital Equipment Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DOLBY_AC2	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DOLBY_AC2				= 0x0030,		\/* Dolby Laboratories *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DOLBY_AC3_SPDIF	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DOLBY_AC3_SPDIF			= 0x0092,		\/* Sonic Foundry *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DSAT	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DSAT					= 0x0066,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DSAT_DISPLAY	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DSAT_DISPLAY			= 0x0067,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DSPGROUP_TRUESPEECH	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DSPGROUP_TRUESPEECH 	= 0x0022,		\/* DSP Group, Inc *\/$/;"	e	enum:__anon64
WAVE_FORMAT_DVM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_DVM						= 0x2000,		\/* FAST Multimedia AG *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ECHOSC1	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ECHOSC1					= 0x0023,		\/* Echo Speech Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ECHOSC3	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ECHOSC3					= 0x003A,		\/* Echo Speech Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ESPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ESPCM					= 0x0061,		\/* ESS Technology *\/$/;"	e	enum:__anon64
WAVE_FORMAT_EXTENSIBLE	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_EXTENSIBLE				= 0xFFFE$/;"	e	enum:__anon64
WAVE_FORMAT_FM_TOWNS_SND	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_FM_TOWNS_SND			= 0x0300,		\/* Fujitsu Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_G721_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_G721_ADPCM				= 0x0040,		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_G722_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_G722_ADPCM				= 0x0065,		\/* APICOM *\/$/;"	e	enum:__anon64
WAVE_FORMAT_G723_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_G723_ADPCM				= 0x0014,		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_G726_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_G726_ADPCM				= 0x0064,		\/* APICOM *\/$/;"	e	enum:__anon64
WAVE_FORMAT_G728_CELP	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_G728_CELP				= 0x0041,		\/* Antex Electronics Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_G729A	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_G729A					= 0x0083,		\/* AT&T Laboratories *\/$/;"	e	enum:__anon64
WAVE_FORMAT_GSM610	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_GSM610					= 0x0031,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_IBM_CVSD	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_IBM_CVSD				= 0x0005,		\/* IBM Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_IEEE_FLOAT	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_IEEE_FLOAT				= 0x0003,		\/* Micrososft 32 bit float format *\/$/;"	e	enum:__anon64
WAVE_FORMAT_IMA_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_IMA_ADPCM				= 0x0011,		\/* Intel Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_INTERWAV_VSC112	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_INTERWAV_VSC112			= 0x7150,		\/* ????? *\/$/;"	e	enum:__anon64
WAVE_FORMAT_IPP_ITU_G_723_1	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_IPP_ITU_G_723_1			= 0x7230,		\/* Intel Performance Primitives g723 codec. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_LH_CODEC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_LH_CODEC				= 0x1100,		\/* Lernout & Hauspie *\/$/;"	e	enum:__anon64
WAVE_FORMAT_LRC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_LRC						= 0x0028,		\/* Merging Technologies S.A. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_LUCENT_G723	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_LUCENT_G723				= 0x0059,		\/* Lucent Technologies *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MEDIASPACE_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MEDIASPACE_ADPCM		= 0x0012,		\/* Videologic *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MEDIAVISION_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MEDIAVISION_ADPCM		= 0x0018,		\/*  Media Vision, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MPEG	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MPEG					= 0x0050,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MPEGLAYER3	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MPEGLAYER3				= 0x0055,		\/* MPEG 3 Layer 1 *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MSG723	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MSG723					= 0x0042,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MSNAUDIO	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MSNAUDIO				= 0x0032,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MSRT24	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MSRT24					= 0x0082,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MS_ADPCM	.\libsndfile-1.0.17\src\ms_adpcm.c	39;"	d	file:
WAVE_FORMAT_MS_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MS_ADPCM				= 0x0002,		\/* Microsoft ADPCM *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MULAW	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MULAW					= 0x0007,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_MVI_MV12	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_MVI_MV12				= 0x0084,		\/* Motion Pixels *\/$/;"	e	enum:__anon64
WAVE_FORMAT_NMS_VBXADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_NMS_VBXADPCM			= 0x0038,		\/* Natural MicroSystems *\/$/;"	e	enum:__anon64
WAVE_FORMAT_NORRIS	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_NORRIS					= 0x1400,		\/* Norris Communications, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_OKI_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_OKI_ADPCM				= 0x0010,		\/* OKI *\/$/;"	e	enum:__anon64
WAVE_FORMAT_OLIADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_OLIADPCM				= 0x1001,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_OLICELP	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_OLICELP					= 0x1002,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_OLIGSM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_OLIGSM					= 0x1000,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_OLIOPR	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_OLIOPR					= 0x1004,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_OLISBC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_OLISBC					= 0x1003,		\/* Ing C. Olivetti & C., S.p.A. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ONLIVE	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ONLIVE					= 0x0089,		\/* OnLive! Technologies, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_PAC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_PAC						= 0x0053,		\/* InSoft Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_PACKED	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_PACKED					= 0x0099,		\/* Studer Professional Audio AG *\/$/;"	e	enum:__anon64
WAVE_FORMAT_PCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_PCM	 					= 0x0001, 		\/* Microsoft PCM format *\/$/;"	e	enum:__anon64
WAVE_FORMAT_PHILIPS_LPCBB	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_PHILIPS_LPCBB			= 0x0098,		\/* Philips Speech Processing *\/$/;"	e	enum:__anon64
WAVE_FORMAT_PROSODY_1612	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_PROSODY_1612			= 0x0027,		\/* Aculab plc *\/$/;"	e	enum:__anon64
WAVE_FORMAT_QUARTERDECK	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_QUARTERDECK				= 0x0220,		\/* Quarterdeck Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_RHETOREX_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_RHETOREX_ADPCM			= 0x0100,		\/* Rhetorex, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ROCKWELL_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ROCKWELL_ADPCM			= 0x003B,		\/* Rockwell International *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ROCKWELL_DIGITALK	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ROCKWELL_DIGITALK		= 0x003C, 		\/* Rockwell International *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ROLAND_RDAC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ROLAND_RDAC				= 0x0039,		\/* Roland *\/$/;"	e	enum:__anon64
WAVE_FORMAT_RT24	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_RT24					= 0x0052,		\/* InSoft Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_SBC24	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_SBC24					= 0x0091,		\/* Siemens Business Communications Systems *\/$/;"	e	enum:__anon64
WAVE_FORMAT_SIERRA_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_SIERRA_ADPCM			= 0x0013,		\/* Sierra Semiconductor Corp *\/$/;"	e	enum:__anon64
WAVE_FORMAT_SOFTSOUND	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_SOFTSOUND				= 0x0080,		\/* Softsound, Ltd. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_SONARC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_SONARC					= 0x0021,		\/* Speech Compression *\/$/;"	e	enum:__anon64
WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS	= 0x1500,		\/* AT&T Labs, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_UNKNOWN	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_UNKNOWN					= 0x0000,		\/* Microsoft Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VIVO_G723	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VIVO_G723				= 0x0111,		\/* Vivo Software *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VIVO_SIREN	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VIVO_SIREN				= 0x0112,		\/* Vivo Software *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VME_VMPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VME_VMPCM				= 0x0680,		\/* AT&T Labs, Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXARE_TQ60	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXARE_TQ60				= 0x0081,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE					= 0x0062,		\/* Voxware Inc *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_AC10	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC10			= 0x0071,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_AC16	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC16			= 0x0072,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_AC20	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC20			= 0x0073,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_AC8	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_AC8				= 0x0070,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_BYTE_ALIGNED	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_BYTE_ALIGNED	= 0x0069,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_RT24	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_RT24			= 0x0074,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_RT29	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_RT29			= 0x0075,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_RT29HW	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_RT29HW			= 0x0076,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_TQ40	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_TQ40			= 0x0079,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_VR12	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_VR12			= 0x0077,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VOXWARE_VR18	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VOXWARE_VR18			= 0x0078,		\/* Voxware Inc. *\/$/;"	e	enum:__anon64
WAVE_FORMAT_VSELP	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_VSELP					= 0x0004,		\/* Compaq Computer Corporation *\/$/;"	e	enum:__anon64
WAVE_FORMAT_XEBEC	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_XEBEC					= 0x003D,		\/* Xebec Multimedia Solutions Limited *\/$/;"	e	enum:__anon64
WAVE_FORMAT_YAMAHA_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_YAMAHA_ADPCM			= 0x0020,		\/* Yamaha Corporation of America *\/$/;"	e	enum:__anon64
WAVE_FORMAT_ZYXEL_ADPCM	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAVE_FORMAT_ZYXEL_ADPCM				= 0x0097,		\/* ZyXEL Communications, Inc. *\/$/;"	e	enum:__anon64
WAVE_MARKER	.\libsndfile-1.0.17\src\ms_adpcm.c	34;"	d	file:
WAVE_MARKER	.\libsndfile-1.0.17\src\wav.c	39;"	d	file:
WAV_BEXT_CHUNK_SIZE	.\libsndfile-1.0.17\src\wav.c	86;"	d	file:
WAV_FMT	.\libsndfile-1.0.17\src\wav_w64.h	/^} WAV_FMT ;$/;"	t	typeref:union:__anon74
WAV_FMT_SIZE20	.\libsndfile-1.0.17\src\wav_w64.h	/^} WAV_FMT_SIZE20 ;$/;"	t	typeref:struct:__anon66
WAV_FORMAT_DESC	.\libsndfile-1.0.17\src\wav_w64.c	/^} WAV_FORMAT_DESC ;$/;"	t	typeref:struct:__anon63	file:
WAV_PEAK_CHUNK_SIZE	.\libsndfile-1.0.17\src\wav.c	85;"	d	file:
WAV_W64_GSM610_BLOCKSIZE	.\libsndfile-1.0.17\src\wav_w64.h	259;"	d
WAV_W64_GSM610_SAMPLES	.\libsndfile-1.0.17\src\wav_w64.h	260;"	d
WAV_W64_H_INCLUDED	.\libsndfile-1.0.17\src\wav_w64.h	23;"	d
WEXITSTATUS	.\libsndfile-1.0.17\tests\stdio_test.c	58;"	d	file:
WIFEXITED	.\libsndfile-1.0.17\tests\stdio_test.c	55;"	d	file:
WIN32_BUFFER_LEN	.\libsndfile-1.0.17\examples\sndfile-play.c	634;"	d	file:
WRITE_FLAGS	.\libsndfile-1.0.17\tests\benchmark.c	45;"	d	file:
WRITE_FLAGS	.\libsndfile-1.0.17\tests\benchmark.c	49;"	d	file:
WRITE_PERMS	.\libsndfile-1.0.17\tests\benchmark.c	47;"	d	file:
WRITE_PERMS	.\libsndfile-1.0.17\tests\benchmark.c	51;"	d	file:
Weighting_filter	.\libsndfile-1.0.17\src\GSM610\rpe.c	/^static void Weighting_filter ($/;"	f	file:	signature:( register word * e, word * x )
Win32_Audio_Data	.\libsndfile-1.0.17\examples\sndfile-play.c	/^} Win32_Audio_Data ;$/;"	t	typeref:struct:__anon5	file:
XI_PRIVATE	.\libsndfile-1.0.17\src\xi.c	/^} XI_PRIVATE ;$/;"	t	typeref:struct:__anon76	file:
_ISOC99_SOURCE	.\libsndfile-1.0.17\src\float_cast.h	69;"	d
_ISOC9X_SOURCE	.\libsndfile-1.0.17\src\float_cast.h	68;"	d
__USE_ISOC99	.\libsndfile-1.0.17\src\float_cast.h	72;"	d
__USE_ISOC9X	.\libsndfile-1.0.17\src\float_cast.h	71;"	d
__anon10::encoding	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	encoding ;$/;"	m	struct:__anon10	file:	access:public
__anon10::numChannels	.\libsndfile-1.0.17\src\aiff.c	/^	short			numChannels ;$/;"	m	struct:__anon10	file:	access:public
__anon10::numSampleFrames	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	numSampleFrames ;$/;"	m	struct:__anon10	file:	access:public
__anon10::sampleRate	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned char	sampleRate [10] ;$/;"	m	struct:__anon10	file:	access:public
__anon10::sampleSize	.\libsndfile-1.0.17\src\aiff.c	/^	short			sampleSize ;$/;"	m	struct:__anon10	file:	access:public
__anon10::size	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned int	size ;$/;"	m	struct:__anon10	file:	access:public
__anon10::zero_bytes	.\libsndfile-1.0.17\src\aiff.c	/^	char			zero_bytes [2] ;$/;"	m	struct:__anon10	file:	access:public
__anon11::blocksize	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	blocksize ;$/;"	m	struct:__anon11	file:	access:public
__anon11::offset	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned int	offset ;$/;"	m	struct:__anon11	file:	access:public
__anon12::beginLoop	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	beginLoop ;$/;"	m	struct:__anon12	file:	access:public
__anon12::endLoop	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	endLoop ;$/;"	m	struct:__anon12	file:	access:public
__anon12::playMode	.\libsndfile-1.0.17\src\aiff.c	/^{	short			playMode ;$/;"	m	struct:__anon12	file:	access:public
__anon13::baseNote	.\libsndfile-1.0.17\src\aiff.c	/^{	char		baseNote ;		\/* all notes are MIDI note numbers *\/$/;"	m	struct:__anon13	file:	access:public
__anon13::detune	.\libsndfile-1.0.17\src\aiff.c	/^	char		detune ;		\/* cents off, only -50 to +50 are significant *\/$/;"	m	struct:__anon13	file:	access:public
__anon13::gain	.\libsndfile-1.0.17\src\aiff.c	/^	short		gain ;			\/* in dB, 0 is normal *\/$/;"	m	struct:__anon13	file:	access:public
__anon13::highNote	.\libsndfile-1.0.17\src\aiff.c	/^	char		highNote ;$/;"	m	struct:__anon13	file:	access:public
__anon13::highVelocity	.\libsndfile-1.0.17\src\aiff.c	/^	char		highVelocity ;	\/* 1 to 127 *\/$/;"	m	struct:__anon13	file:	access:public
__anon13::lowNote	.\libsndfile-1.0.17\src\aiff.c	/^	char		lowNote ;$/;"	m	struct:__anon13	file:	access:public
__anon13::lowVelocity	.\libsndfile-1.0.17\src\aiff.c	/^	char		lowVelocity ;	\/* 1 to 127 *\/$/;"	m	struct:__anon13	file:	access:public
__anon13::release_loop	.\libsndfile-1.0.17\src\aiff.c	/^	INST_LOOP	release_loop ;$/;"	m	struct:__anon13	file:	access:public
__anon13::sustain_loop	.\libsndfile-1.0.17\src\aiff.c	/^	INST_LOOP	sustain_loop ;$/;"	m	struct:__anon13	file:	access:public
__anon16::loopType	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	loopType ;$/;"	m	struct:__anon16	file:	access:public
__anon16::numBeats	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	numBeats ;$/;"	m	struct:__anon16	file:	access:public
__anon16::rootNote	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	rootNote ;$/;"	m	struct:__anon16	file:	access:public
__anon16::scaleType	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	scaleType ;$/;"	m	struct:__anon16	file:	access:public
__anon16::sigDenominator	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	sigDenominator ;$/;"	m	struct:__anon16	file:	access:public
__anon16::sigNumerator	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	sigNumerator ;$/;"	m	struct:__anon16	file:	access:public
__anon16::version	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned int	version ;$/;"	m	struct:__anon16	file:	access:public
__anon17::markerID	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned short	markerID ;$/;"	m	struct:__anon17	file:	access:public
__anon17::position	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	position ;$/;"	m	struct:__anon17	file:	access:public
__anon18::comm_offset	.\libsndfile-1.0.17\src\aiff.c	/^{	sf_count_t	comm_offset ;$/;"	m	struct:__anon18	file:	access:public
__anon18::ssnd_offset	.\libsndfile-1.0.17\src\aiff.c	/^	sf_count_t	ssnd_offset ;$/;"	m	struct:__anon18	file:	access:public
__anon1::f	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^	float f [BUFFER_LEN] ;$/;"	m	union:__anon1	file:	access:public
__anon1::i	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^{	int i [BUFFER_LEN] ;$/;"	m	union:__anon1	file:	access:public
__anon20::channels	.\libsndfile-1.0.17\src\au.c	/^    int		channels ;$/;"	m	struct:__anon20	file:	access:public
__anon20::dataoffset	.\libsndfile-1.0.17\src\au.c	/^{	int		dataoffset ;$/;"	m	struct:__anon20	file:	access:public
__anon20::datasize	.\libsndfile-1.0.17\src\au.c	/^	int		datasize ;$/;"	m	struct:__anon20	file:	access:public
__anon20::encoding	.\libsndfile-1.0.17\src\au.c	/^	int		encoding ;$/;"	m	struct:__anon20	file:	access:public
__anon20::samplerate	.\libsndfile-1.0.17\src\au.c	/^    int		samplerate ;$/;"	m	struct:__anon20	file:	access:public
__anon21::ext	.\libsndfile-1.0.17\src\avr.c	/^	char	ext [20] ;	\/* Additional filename space, used if (name[7] != 0) *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::frames	.\libsndfile-1.0.17\src\avr.c	/^	int		frames ;	\/* sample length in bytes or words (see rez) *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::lbeg	.\libsndfile-1.0.17\src\avr.c	/^	int		lbeg ;		\/* offset to start of loop in bytes or words. *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::lend	.\libsndfile-1.0.17\src\avr.c	/^	int		lend ;		\/* offset to end of loop in bytes or words. *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::loop	.\libsndfile-1.0.17\src\avr.c	/^	short	loop ;		\/* 0 = no loop, 0xffff = looping sample *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::marker	.\libsndfile-1.0.17\src\avr.c	/^{	int		marker ;	\/* 2BIT *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::midi	.\libsndfile-1.0.17\src\avr.c	/^	short	midi ;		\/* 0xffff = no MIDI note assigned,  *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::mono	.\libsndfile-1.0.17\src\avr.c	/^	short	mono ;		\/* 0 = mono, 0xffff = stereo *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::name	.\libsndfile-1.0.17\src\avr.c	/^	char	name [8] ;	\/* null-padded sample name *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::res1	.\libsndfile-1.0.17\src\avr.c	/^	short	res1 ;		\/* Reserved, MIDI keyboard split *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::res2	.\libsndfile-1.0.17\src\avr.c	/^	short	res2 ;		\/* Reserved, sample compression *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::res3	.\libsndfile-1.0.17\src\avr.c	/^	short	res3 ;		\/* Reserved *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::rez	.\libsndfile-1.0.17\src\avr.c	/^	short	rez ;		\/* 8 = 8 bit, 16 = 16 bit *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::sign	.\libsndfile-1.0.17\src\avr.c	/^	short	sign ;		\/* 0 = unsigned, 0xffff = signed *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::srate	.\libsndfile-1.0.17\src\avr.c	/^	int		srate ;		\/* sample frequency in hertz *\/$/;"	m	struct:__anon21	file:	access:public
__anon21::user	.\libsndfile-1.0.17\src\avr.c	/^	char	user [64] ; \/* User defined. Typically ASCII message *\/$/;"	m	struct:__anon21	file:	access:public
__anon22::bits_per_chan	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int bits_per_chan ;$/;"	m	struct:__anon22	file:	access:public
__anon22::channels_per_frame	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int channels_per_frame ;$/;"	m	struct:__anon22	file:	access:public
__anon22::fmt_flags	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int fmt_flags ;$/;"	m	struct:__anon22	file:	access:public
__anon22::fmt_id	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int fmt_id ;$/;"	m	struct:__anon22	file:	access:public
__anon22::pkt_bytes	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int pkt_bytes ;$/;"	m	struct:__anon22	file:	access:public
__anon22::pkt_frames	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int pkt_frames ;$/;"	m	struct:__anon22	file:	access:public
__anon22::srate	.\libsndfile-1.0.17\src\caf.c	/^{	unsigned char srate [8] ;$/;"	m	struct:__anon22	file:	access:public
__anon25::position	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t	position ;	\/* the sample frame for the peak *\/$/;"	m	struct:__anon25	access:public
__anon25::value	.\libsndfile-1.0.17\src\common.h	/^{	double		value ;		\/* signed value of peak *\/$/;"	m	struct:__anon25	access:public
__anon26::edit_number	.\libsndfile-1.0.17\src\common.h	/^	unsigned int	edit_number ;$/;"	m	struct:__anon26	access:public
__anon26::peak_loc	.\libsndfile-1.0.17\src\common.h	/^	int				peak_loc ;$/;"	m	struct:__anon26	access:public
__anon26::peaks	.\libsndfile-1.0.17\src\common.h	/^	PEAK_POS		peaks [0] ;$/;"	m	struct:__anon26	access:public
__anon26::peaks	.\libsndfile-1.0.17\src\common.h	/^	PEAK_POS		peaks [] ;$/;"	m	struct:__anon26	access:public
__anon26::timestamp	.\libsndfile-1.0.17\src\common.h	/^	unsigned int	timestamp ;	\/* secs since 1\/1\/1970  *\/$/;"	m	struct:__anon26	access:public
__anon26::version	.\libsndfile-1.0.17\src\common.h	/^	unsigned int	version ;	\/* version of the PEAK chunk *\/$/;"	m	struct:__anon26	access:public
__anon27::flags	.\libsndfile-1.0.17\src\common.h	/^	int		flags ;$/;"	m	struct:__anon27	access:public
__anon27::str	.\libsndfile-1.0.17\src\common.h	/^	char 	*str ;$/;"	m	struct:__anon27	access:public
__anon27::type	.\libsndfile-1.0.17\src\common.h	/^{	int		type ;$/;"	m	struct:__anon27	access:public
__anon2::infileinfo	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	SF_INFO	infileinfo, outfileinfo ;$/;"	m	struct:__anon2	file:	access:public
__anon2::infilename	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^{	char	*infilename, *outfilename ;$/;"	m	struct:__anon2	file:	access:public
__anon2::outfileinfo	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	SF_INFO	infileinfo, outfileinfo ;$/;"	m	struct:__anon2	file:	access:public
__anon2::outfilename	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^{	char	*infilename, *outfilename ;$/;"	m	struct:__anon2	file:	access:public
__anon31::buffer	.\libsndfile-1.0.17\src\dither.c	/^	double buffer [SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_double	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_double)	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_double_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	double		read_float_dither_scale, read_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_float	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_float)	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_float_dither_scale	.\libsndfile-1.0.17\src\dither.c	/^	double		read_float_dither_scale, read_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_int	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_int)		(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_int_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^{	int			read_short_dither_bits, read_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_short	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_short)	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::read_short_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^{	int			read_short_dither_bits, read_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_double	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_double)	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_double_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	double		write_float_dither_scale, write_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_float	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_float)	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_float_dither_scale	.\libsndfile-1.0.17\src\dither.c	/^	double		write_float_dither_scale, write_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_int	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_int)	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_int_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	int			write_short_dither_bits, write_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_short	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_short)	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
__anon31::write_short_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	int			write_short_dither_bits, write_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
__anon33::bitwidth	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
__anon33::channels	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
__anon33::compression	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
__anon33::datalen	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
__anon33::frames	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
__anon33::id	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
__anon33::major	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
__anon33::maxval	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned short srate, maxval ;$/;"	m	struct:__anon33	file:	access:public
__anon33::minor	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
__anon33::offset	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
__anon33::srate	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned short srate, maxval ;$/;"	m	struct:__anon33	file:	access:public
__anon34::__anon35::buffer	.\libsndfile-1.0.17\src\dwvw.c	/^		unsigned char	buffer [256] ;$/;"	m	struct:__anon34::__anon35	file:	access:public
__anon34::__anon35::end	.\libsndfile-1.0.17\src\dwvw.c	/^	{	int				index, end ;$/;"	m	struct:__anon34::__anon35	file:	access:public
__anon34::__anon35::index	.\libsndfile-1.0.17\src\dwvw.c	/^	{	int				index, end ;$/;"	m	struct:__anon34::__anon35	file:	access:public
__anon34::b	.\libsndfile-1.0.17\src\dwvw.c	/^	} b ;$/;"	m	struct:__anon34	typeref:struct:__anon34::__anon35	file:	access:public
__anon34::bit_count	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
__anon34::bit_width	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
__anon34::bits	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
__anon34::dwm_maxsize	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
__anon34::last_delta_width	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
__anon34::last_sample	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
__anon34::max_delta	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
__anon34::samplecount	.\libsndfile-1.0.17\src\dwvw.c	/^	int		samplecount ;$/;"	m	struct:__anon34	file:	access:public
__anon34::span	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
__anon37::bufferbackup	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__bool bufferbackup ;$/;"	m	struct:__anon37	file:	access:public
__anon37::bufferpos	.\libsndfile-1.0.17\src\flac.c	/^	unsigned bufferpos ;$/;"	m	struct:__anon37	file:	access:public
__anon37::encbuffer	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__int32* encbuffer ;$/;"	m	struct:__anon37	file:	access:public
__anon37::frame	.\libsndfile-1.0.17\src\flac.c	/^	const FLAC__Frame *frame ;$/;"	m	struct:__anon37	file:	access:public
__anon37::fsd	.\libsndfile-1.0.17\src\flac.c	/^{	FLAC__SeekableStreamDecoder *fsd ;$/;"	m	struct:__anon37	file:	access:public
__anon37::fse	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__SeekableStreamEncoder *fse ;$/;"	m	struct:__anon37	file:	access:public
__anon37::len	.\libsndfile-1.0.17\src\flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon37	file:	access:public
__anon37::pcmtype	.\libsndfile-1.0.17\src\flac.c	/^	PFLAC_PCM pcmtype ;$/;"	m	struct:__anon37	file:	access:public
__anon37::pos	.\libsndfile-1.0.17\src\flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon37	file:	access:public
__anon37::ptr	.\libsndfile-1.0.17\src\flac.c	/^	void* ptr ;$/;"	m	struct:__anon37	file:	access:public
__anon37::rbuffer	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__int32 * rbuffer [FLAC__MAX_CHANNELS] ;$/;"	m	struct:__anon37	file:	access:public
__anon37::remain	.\libsndfile-1.0.17\src\flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon37	file:	access:public
__anon37::wbuffer	.\libsndfile-1.0.17\src\flac.c	/^	const FLAC__int32 * const * wbuffer ;$/;"	m	struct:__anon37	file:	access:public
__anon3::ext	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^{	const char	*ext ;$/;"	m	struct:__anon3	file:	access:public
__anon3::format	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	int			format ;$/;"	m	struct:__anon3	file:	access:public
__anon3::len	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	int			len ;$/;"	m	struct:__anon3	file:	access:public
__anon40::block	.\libsndfile-1.0.17\src\g72x.c	/^	unsigned char	block	[G72x_BLOCK_SIZE] ;$/;"	m	struct:__anon40	file:	access:public
__anon40::block_curr	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon40	file:	access:public
__anon40::blocks_total	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon40	file:	access:public
__anon40::blocksize	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon40	file:	access:public
__anon40::bytesperblock	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon40	file:	access:public
__anon40::private	.\libsndfile-1.0.17\src\g72x.c	/^	struct g72x_state * private ;$/;"	m	struct:__anon40	typeref:struct:__anon40::g72x_state	file:	access:public
__anon40::sample_curr	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon40	file:	access:public
__anon40::samples	.\libsndfile-1.0.17\src\g72x.c	/^	short			samples	[G72x_BLOCK_SIZE] ;$/;"	m	struct:__anon40	file:	access:public
__anon40::samplesperblock	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon40	file:	access:public
__anon41::buffer	.\libsndfile-1.0.17\src\interleave.c	/^{	double	buffer [SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	struct:__anon41	file:	access:public
__anon41::channel_len	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		channel_len ;$/;"	m	struct:__anon41	file:	access:public
__anon41::read_double	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_double)	(SF_PRIVATE*, double *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
__anon41::read_float	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_float)	(SF_PRIVATE*, float *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
__anon41::read_int	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_int)	(SF_PRIVATE*, int *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
__anon41::read_short	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_short)	(SF_PRIVATE*, short *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
__anon44::cols	.\libsndfile-1.0.17\src\mat5.c	/^	int			rows, cols ;$/;"	m	struct:__anon44	file:	access:public
__anon44::name	.\libsndfile-1.0.17\src\mat5.c	/^	char		name [32] ;$/;"	m	struct:__anon44	file:	access:public
__anon44::rows	.\libsndfile-1.0.17\src\mat5.c	/^	int			rows, cols ;$/;"	m	struct:__anon44	file:	access:public
__anon44::size	.\libsndfile-1.0.17\src\mat5.c	/^{	sf_count_t	size ;$/;"	m	struct:__anon44	file:	access:public
__anon45::block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	unsigned char	*block ;$/;"	m	struct:__anon45	file:	access:public
__anon45::blockcount	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	int				blockcount ;$/;"	m	struct:__anon45	file:	access:public
__anon45::blocks	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
__anon45::blocksize	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
__anon45::channels	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
__anon45::dataremaining	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
__anon45::dummydata	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	short			dummydata [0] ; \/* This is a hack an might not work. *\/$/;"	m	struct:__anon45	file:	access:public
__anon45::dummydata	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	short			dummydata [] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:__anon45	file:	access:public
__anon45::samplecount	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	sf_count_t		samplecount ;$/;"	m	struct:__anon45	file:	access:public
__anon45::samples	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	short			*samples ;$/;"	m	struct:__anon45	file:	access:public
__anon45::samplesperblock	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
__anon46::channels	.\libsndfile-1.0.17\src\paf.c	/^	int	channels ;$/;"	m	struct:__anon46	file:	access:public
__anon46::endianness	.\libsndfile-1.0.17\src\paf.c	/^	int	endianness ;$/;"	m	struct:__anon46	file:	access:public
__anon46::format	.\libsndfile-1.0.17\src\paf.c	/^    int	format ;$/;"	m	struct:__anon46	file:	access:public
__anon46::samplerate	.\libsndfile-1.0.17\src\paf.c	/^    int	samplerate ;$/;"	m	struct:__anon46	file:	access:public
__anon46::source	.\libsndfile-1.0.17\src\paf.c	/^	int	source ;$/;"	m	struct:__anon46	file:	access:public
__anon46::version	.\libsndfile-1.0.17\src\paf.c	/^{	int	version ;$/;"	m	struct:__anon46	file:	access:public
__anon47::block	.\libsndfile-1.0.17\src\paf.c	/^	unsigned char	*block ;$/;"	m	struct:__anon47	file:	access:public
__anon47::blocksize	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
__anon47::channels	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
__anon47::data	.\libsndfile-1.0.17\src\paf.c	/^	int				data [1] ; \/* This is a hack and may not work. *\/$/;"	m	struct:__anon47	file:	access:public
__anon47::data	.\libsndfile-1.0.17\src\paf.c	/^	int				data [] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:__anon47	file:	access:public
__anon47::max_blocks	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
__anon47::read_block	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
__anon47::read_count	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
__anon47::sample_count	.\libsndfile-1.0.17\src\paf.c	/^	sf_count_t		sample_count ;$/;"	m	struct:__anon47	file:	access:public
__anon47::samples	.\libsndfile-1.0.17\src\paf.c	/^	int				*samples ;$/;"	m	struct:__anon47	file:	access:public
__anon47::samplesperblock	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
__anon47::write_block	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
__anon47::write_count	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
__anon4::buf_size	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	UInt32 			buf_size ;$/;"	m	struct:__anon4	file:	access:public
__anon4::device	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	AudioDeviceID 	device ;$/;"	m	struct:__anon4	file:	access:public
__anon4::done_playing	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int				done_playing ;$/;"	m	struct:__anon4	file:	access:public
__anon4::fake_stereo	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int				fake_stereo ;$/;"	m	struct:__anon4	file:	access:public
__anon4::format	.\libsndfile-1.0.17\examples\sndfile-play.c	/^{	AudioStreamBasicDescription		format ;$/;"	m	struct:__anon4	file:	access:public
__anon4::sfinfo	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SF_INFO 		sfinfo ;$/;"	m	struct:__anon4	file:	access:public
__anon4::sndfile	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SNDFILE 		*sndfile ;$/;"	m	struct:__anon4	file:	access:public
__anon51::channels	.\libsndfile-1.0.17\src\sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon51	file:	access:public
__anon51::data_length	.\libsndfile-1.0.17\src\sd2.c	/^	int data_offset, data_length ;$/;"	m	struct:__anon51	file:	access:public
__anon51::data_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int data_offset, data_length ;$/;"	m	struct:__anon51	file:	access:public
__anon51::item_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int item_offset ;$/;"	m	struct:__anon51	file:	access:public
__anon51::map_length	.\libsndfile-1.0.17\src\sd2.c	/^	int map_offset, map_length ;$/;"	m	struct:__anon51	file:	access:public
__anon51::map_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int map_offset, map_length ;$/;"	m	struct:__anon51	file:	access:public
__anon51::rsrc_data	.\libsndfile-1.0.17\src\sd2.c	/^{	unsigned char * rsrc_data ;$/;"	m	struct:__anon51	file:	access:public
__anon51::rsrc_len	.\libsndfile-1.0.17\src\sd2.c	/^	int rsrc_len ;$/;"	m	struct:__anon51	file:	access:public
__anon51::sample_rate	.\libsndfile-1.0.17\src\sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon51	file:	access:public
__anon51::sample_size	.\libsndfile-1.0.17\src\sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon51	file:	access:public
__anon51::str_count	.\libsndfile-1.0.17\src\sd2.c	/^	int str_index, str_count ;$/;"	m	struct:__anon51	file:	access:public
__anon51::str_index	.\libsndfile-1.0.17\src\sd2.c	/^	int str_index, str_count ;$/;"	m	struct:__anon51	file:	access:public
__anon51::string_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int string_offset ;$/;"	m	struct:__anon51	file:	access:public
__anon51::type_count	.\libsndfile-1.0.17\src\sd2.c	/^	int type_count, type_offset ;$/;"	m	struct:__anon51	file:	access:public
__anon51::type_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int type_count, type_offset ;$/;"	m	struct:__anon51	file:	access:public
__anon52::id	.\libsndfile-1.0.17\src\sd2.c	/^	int id ;$/;"	m	struct:__anon52	file:	access:public
__anon52::name	.\libsndfile-1.0.17\src\sd2.c	/^	char name [32] ;$/;"	m	struct:__anon52	file:	access:public
__anon52::type	.\libsndfile-1.0.17\src\sd2.c	/^{	int type ;$/;"	m	struct:__anon52	file:	access:public
__anon52::value	.\libsndfile-1.0.17\src\sd2.c	/^	char value [32] ;$/;"	m	struct:__anon52	file:	access:public
__anon52::value_len	.\libsndfile-1.0.17\src\sd2.c	/^	int value_len ;$/;"	m	struct:__anon52	file:	access:public
__anon53::error	.\libsndfile-1.0.17\src\sndfile.c	/^{	int 		error ;$/;"	m	struct:__anon53	file:	access:public
__anon53::str	.\libsndfile-1.0.17\src\sndfile.c	/^	const char	*str ;$/;"	m	struct:__anon53	file:	access:public
__anon54::compression	.\libsndfile-1.0.17\src\svx.c	/^	unsigned char	octave, compression ;$/;"	m	struct:__anon54	file:	access:public
__anon54::octave	.\libsndfile-1.0.17\src\svx.c	/^	unsigned char	octave, compression ;$/;"	m	struct:__anon54	file:	access:public
__anon54::oneShotHiSamples	.\libsndfile-1.0.17\src\svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon54	file:	access:public
__anon54::repeatHiSamples	.\libsndfile-1.0.17\src\svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon54	file:	access:public
__anon54::samplesPerHiCycle	.\libsndfile-1.0.17\src\svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon54	file:	access:public
__anon54::samplesPerSec	.\libsndfile-1.0.17\src\svx.c	/^	unsigned short	samplesPerSec ;$/;"	m	struct:__anon54	file:	access:public
__anon54::volume	.\libsndfile-1.0.17\src\svx.c	/^	unsigned int	volume ;$/;"	m	struct:__anon54	file:	access:public
__anon56::attacklen	.\libsndfile-1.0.17\src\txw.c	/^	unsigned int	attacklen, repeatlen ;$/;"	m	struct:__anon56	file:	access:public
__anon56::format	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
__anon56::repeatlen	.\libsndfile-1.0.17\src\txw.c	/^	unsigned int	attacklen, repeatlen ;$/;"	m	struct:__anon56	file:	access:public
__anon56::sr2	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
__anon56::sr3	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
__anon56::srate	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
__anon56::srhash	.\libsndfile-1.0.17\src\txw.c	/^	unsigned short	srhash ;$/;"	m	struct:__anon56	file:	access:public
__anon58::offset	.\libsndfile-1.0.17\src\voc.c	/^	int		offset ;	\/* Offset of zero => silence. *\/$/;"	m	struct:__anon58	file:	access:public
__anon58::samples	.\libsndfile-1.0.17\src\voc.c	/^{	int 	samples ;$/;"	m	struct:__anon58	file:	access:public
__anon59::bitwidth	.\libsndfile-1.0.17\src\voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon59	file:	access:public
__anon59::blocks	.\libsndfile-1.0.17\src\voc.c	/^	SND_DATA_BLOCKS	blocks [VOC_MAX_SECTIONS] ;$/;"	m	struct:__anon59	file:	access:public
__anon59::channels	.\libsndfile-1.0.17\src\voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon59	file:	access:public
__anon59::samplerate	.\libsndfile-1.0.17\src\voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon59	file:	access:public
__anon59::section_types	.\libsndfile-1.0.17\src\voc.c	/^{	unsigned int 	sections, section_types ;$/;"	m	struct:__anon59	file:	access:public
__anon59::sections	.\libsndfile-1.0.17\src\voc.c	/^{	unsigned int 	sections, section_types ;$/;"	m	struct:__anon59	file:	access:public
__anon5::BuffersInUse	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int			BuffersInUse ;$/;"	m	struct:__anon5	file:	access:public
__anon5::Event	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	HANDLE		Event ;			\/* signal that a buffer is free *\/$/;"	m	struct:__anon5	file:	access:public
__anon5::buffer	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	short		buffer [WIN32_BUFFER_LEN \/ sizeof (short)] ;$/;"	m	struct:__anon5	file:	access:public
__anon5::bufferlen	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int			current, bufferlen ;$/;"	m	struct:__anon5	file:	access:public
__anon5::current	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int			current, bufferlen ;$/;"	m	struct:__anon5	file:	access:public
__anon5::hwave	.\libsndfile-1.0.17\examples\sndfile-play.c	/^{	HWAVEOUT	hwave ;$/;"	m	struct:__anon5	file:	access:public
__anon5::mutex	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	CRITICAL_SECTION	mutex ;		\/* to control access to BuffersInUSe *\/$/;"	m	struct:__anon5	file:	access:public
__anon5::remaining	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	sf_count_t	remaining ;$/;"	m	struct:__anon5	file:	access:public
__anon5::sfinfo	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SF_INFO 	sfinfo ;$/;"	m	struct:__anon5	file:	access:public
__anon5::sndfile	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SNDFILE 	*sndfile ;$/;"	m	struct:__anon5	file:	access:public
__anon5::whdr	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	WAVEHDR		whdr [2] ;$/;"	m	struct:__anon5	file:	access:public
__anon60::last	.\libsndfile-1.0.17\src\vox_adpcm.c	/^{	short last ;$/;"	m	struct:__anon60	file:	access:public
__anon60::pcm_data	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	short 			pcm_data [PCM_DATA_LEN] ;$/;"	m	struct:__anon60	file:	access:public
__anon60::pcm_samples	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	int		vox_bytes, pcm_samples ;$/;"	m	struct:__anon60	file:	access:public
__anon60::step_index	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	short step_index ;$/;"	m	struct:__anon60	file:	access:public
__anon60::vox_bytes	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	int		vox_bytes, pcm_samples ;$/;"	m	struct:__anon60	file:	access:public
__anon60::vox_data	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	unsigned char	vox_data [VOX_DATA_LEN] ;$/;"	m	struct:__anon60	file:	access:public
__anon63::ID	.\libsndfile-1.0.17\src\wav_w64.c	/^{	int			ID ;$/;"	m	struct:__anon63	file:	access:public
__anon63::name	.\libsndfile-1.0.17\src\wav_w64.c	/^	const char	*name ;$/;"	m	struct:__anon63	file:	access:public
__anon65::bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon65	access:public
__anon65::blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon65	access:public
__anon65::bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon65	access:public
__anon65::channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon65	access:public
__anon65::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon65	access:public
__anon65::samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon65	access:public
__anon66::bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon66	access:public
__anon66::blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon66	access:public
__anon66::bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon66	access:public
__anon66::channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon66	access:public
__anon66::dummy	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	dummy ;$/;"	m	struct:__anon66	access:public
__anon66::extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon66	access:public
__anon66::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon66	access:public
__anon66::samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon66	access:public
__anon67::__anon68::coeff1	.\libsndfile-1.0.17\src\wav_w64.h	/^	{	short	coeff1 ;$/;"	m	struct:__anon67::__anon68	access:public
__anon67::__anon68::coeff2	.\libsndfile-1.0.17\src\wav_w64.h	/^		short	coeff2 ;$/;"	m	struct:__anon67::__anon68	access:public
__anon67::bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon67	access:public
__anon67::blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon67	access:public
__anon67::bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon67	access:public
__anon67::channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon67	access:public
__anon67::coeffs	.\libsndfile-1.0.17\src\wav_w64.h	/^	}	coeffs [7] ;$/;"	m	struct:__anon67	typeref:struct:__anon67::__anon68	access:public
__anon67::extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon67	access:public
__anon67::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon67	access:public
__anon67::numcoeffs	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	numcoeffs ;$/;"	m	struct:__anon67	access:public
__anon67::samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon67	access:public
__anon67::samplesperblock	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon67	access:public
__anon69::bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon69	access:public
__anon69::blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon69	access:public
__anon69::bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon69	access:public
__anon69::channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon69	access:public
__anon69::extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon69	access:public
__anon69::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon69	access:public
__anon69::samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon69	access:public
__anon69::samplesperblock	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon69	access:public
__anon6::f	.\libsndfile-1.0.17\regtest\checksum.c	/^	float	f [1 << 15] ;$/;"	m	union:__anon6	file:	access:public
__anon6::i	.\libsndfile-1.0.17\regtest\checksum.c	/^	int		i [1 << 15] ;$/;"	m	union:__anon6	file:	access:public
__anon6::s	.\libsndfile-1.0.17\regtest\checksum.c	/^{	short	s [1 << 16] ;$/;"	m	union:__anon6	file:	access:public
__anon70::auxblocksize	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	auxblocksize ;$/;"	m	struct:__anon70	access:public
__anon70::bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon70	access:public
__anon70::blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon70	access:public
__anon70::bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon70	access:public
__anon70::channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon70	access:public
__anon70::extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon70	access:public
__anon70::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon70	access:public
__anon70::samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon70	access:public
__anon71::bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon71	access:public
__anon71::blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon71	access:public
__anon71::bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon71	access:public
__anon71::channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon71	access:public
__anon71::extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon71	access:public
__anon71::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon71	access:public
__anon71::samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon71	access:public
__anon71::samplesperblock	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon71	access:public
__anon72::esf_field1	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned int	esf_field1 ;$/;"	m	struct:__anon72	access:public
__anon72::esf_field2	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	esf_field2 ;$/;"	m	struct:__anon72	access:public
__anon72::esf_field3	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	esf_field3 ;$/;"	m	struct:__anon72	access:public
__anon72::esf_field4	.\libsndfile-1.0.17\src\wav_w64.h	/^	char			esf_field4 [8] ;$/;"	m	struct:__anon72	access:public
__anon73::bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon73	access:public
__anon73::blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon73	access:public
__anon73::bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon73	access:public
__anon73::channelmask	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	channelmask ;$/;"	m	struct:__anon73	access:public
__anon73::channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon73	access:public
__anon73::esf	.\libsndfile-1.0.17\src\wav_w64.h	/^	EXT_SUBFORMAT	esf ;$/;"	m	struct:__anon73	access:public
__anon73::extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon73	access:public
__anon73::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon73	access:public
__anon73::samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon73	access:public
__anon73::validbits	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	validbits ;$/;"	m	struct:__anon73	access:public
__anon74::ext	.\libsndfile-1.0.17\src\wav_w64.h	/^	EXTENSIBLE_WAV_FMT	ext ;$/;"	m	union:__anon74	access:public
__anon74::format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short		format ;$/;"	m	union:__anon74	access:public
__anon74::g72x	.\libsndfile-1.0.17\src\wav_w64.h	/^	G72x_ADPCM_WAV_FMT	g72x ;$/;"	m	union:__anon74	access:public
__anon74::gsm610	.\libsndfile-1.0.17\src\wav_w64.h	/^	GSM610_WAV_FMT		gsm610 ;$/;"	m	union:__anon74	access:public
__anon74::ima	.\libsndfile-1.0.17\src\wav_w64.h	/^	IMA_ADPCM_WAV_FMT	ima ;$/;"	m	union:__anon74	access:public
__anon74::min	.\libsndfile-1.0.17\src\wav_w64.h	/^	MIN_WAV_FMT			min ;$/;"	m	union:__anon74	access:public
__anon74::msadpcm	.\libsndfile-1.0.17\src\wav_w64.h	/^	MS_ADPCM_WAV_FMT	msadpcm ;$/;"	m	union:__anon74	access:public
__anon74::padding	.\libsndfile-1.0.17\src\wav_w64.h	/^	char				padding [512] ;$/;"	m	union:__anon74	access:public
__anon74::size20	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAV_FMT_SIZE20		size20 ;$/;"	m	union:__anon74	access:public
__anon75::frames	.\libsndfile-1.0.17\src\wav_w64.h	/^{	int frames ;$/;"	m	struct:__anon75	access:public
__anon76::filename	.\libsndfile-1.0.17\src\xi.c	/^	char	filename [22] ;$/;"	m	struct:__anon76	file:	access:public
__anon76::last_16	.\libsndfile-1.0.17\src\xi.c	/^	short	last_16 ;$/;"	m	struct:__anon76	file:	access:public
__anon76::loop_begin	.\libsndfile-1.0.17\src\xi.c	/^	int		loop_begin, loop_end ;$/;"	m	struct:__anon76	file:	access:public
__anon76::loop_end	.\libsndfile-1.0.17\src\xi.c	/^	int		loop_begin, loop_end ;$/;"	m	struct:__anon76	file:	access:public
__anon76::sample_flags	.\libsndfile-1.0.17\src\xi.c	/^	int		sample_flags ;$/;"	m	struct:__anon76	file:	access:public
__anon76::sample_name	.\libsndfile-1.0.17\src\xi.c	/^	char	sample_name [22] ;$/;"	m	struct:__anon76	file:	access:public
__anon76::software	.\libsndfile-1.0.17\src\xi.c	/^	char	software [20] ;$/;"	m	struct:__anon76	file:	access:public
__anon77::read_rate	.\libsndfile-1.0.17\tests\benchmark.c	/^	double	read_rate ;$/;"	m	struct:__anon77	file:	access:public
__anon77::write_rate	.\libsndfile-1.0.17\tests\benchmark.c	/^{	double	write_rate ;$/;"	m	struct:__anon77	file:	access:public
__anon78::d	.\libsndfile-1.0.17\tests\fix_this.c	/^{	double	d [BUFFER_SIZE + 1];$/;"	m	union:__anon78	file:	access:public
__anon78::i	.\libsndfile-1.0.17\tests\fix_this.c	/^	int 	i [BUFFER_SIZE + 1];$/;"	m	union:__anon78	file:	access:public
__anon79::filename	.\libsndfile-1.0.17\tests\locale_test.c	/^	const char *filename ;$/;"	m	struct:__anon79	file:	access:public
__anon79::locale	.\libsndfile-1.0.17\tests\locale_test.c	/^{	const char *locale ;$/;"	m	struct:__anon79	file:	access:public
__anon79::width	.\libsndfile-1.0.17\tests\locale_test.c	/^	int	width ;$/;"	m	struct:__anon79	file:	access:public
__anon7::cmdbuf	.\libsndfile-1.0.17\regtest\database.c	/^	char cmdbuf [1 << 15] ;$/;"	m	struct:__anon7	file:	access:public
__anon7::count	.\libsndfile-1.0.17\regtest\database.c	/^	int count ;$/;"	m	struct:__anon7	file:	access:public
__anon7::ekey_max	.\libsndfile-1.0.17\regtest\database.c	/^	int ekey_max ;$/;"	m	struct:__anon7	file:	access:public
__anon7::filename	.\libsndfile-1.0.17\regtest\database.c	/^	char filename [256] ;$/;"	m	struct:__anon7	file:	access:public
__anon7::logbuf	.\libsndfile-1.0.17\regtest\database.c	/^	char logbuf [1 << 14] ;$/;"	m	struct:__anon7	file:	access:public
__anon7::pathname	.\libsndfile-1.0.17\regtest\database.c	/^	char pathname [512] ;$/;"	m	struct:__anon7	file:	access:public
__anon7::sql	.\libsndfile-1.0.17\regtest\database.c	/^{	sqlite3 *sql ;$/;"	m	struct:__anon7	file:	access:public
__anon80::c	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	char c [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
__anon80::d	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^{	double d [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
__anon80::f	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	float f [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
__anon80::i	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	int i [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
__anon80::s	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	short s [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
__anon81::d	.\libsndfile-1.0.17\tests\pcm_test.c	/^{	double	d [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
__anon81::f	.\libsndfile-1.0.17\tests\pcm_test.c	/^	float	f [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
__anon81::i	.\libsndfile-1.0.17\tests\pcm_test.c	/^	int		i [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
__anon81::s	.\libsndfile-1.0.17\tests\pcm_test.c	/^	short	s [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
__anon82::ext	.\libsndfile-1.0.17\tests\pipe_test.c	/^	const char	*ext ;$/;"	m	struct:__anon82	file:	access:public
__anon82::format	.\libsndfile-1.0.17\tests\pipe_test.c	/^{	int			format ;$/;"	m	struct:__anon82	file:	access:public
__anon83::dbl	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^{	double	dbl [BUFFER_SIZE] ;$/;"	m	union:__anon83	file:	access:public
__anon83::flt	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^	float	flt [BUFFER_SIZE] ;$/;"	m	union:__anon83	file:	access:public
__anon84::data	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^	unsigned char data [16 * 1024] ;$/;"	m	struct:__anon84	file:	access:public
__anon84::length	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^{	sf_count_t offset, length ;$/;"	m	struct:__anon84	file:	access:public
__anon84::offset	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^{	sf_count_t offset, length ;$/;"	m	struct:__anon84	file:	access:public
__anon85::c	.\libsndfile-1.0.17\tests\write_read_test.c	/^	char c [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
__anon85::d	.\libsndfile-1.0.17\tests\write_read_test.c	/^{	double d [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
__anon85::f	.\libsndfile-1.0.17\tests\write_read_test.c	/^	float f [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
__anon85::i	.\libsndfile-1.0.17\tests\write_read_test.c	/^	int i [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
__anon85::s	.\libsndfile-1.0.17\tests\write_read_test.c	/^	short s [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
__anon91::extension	.\sndfile.h	/^	const char	*extension ;$/;"	m	struct:__anon91	access:public
__anon91::format	.\sndfile.h	/^{	int			format ;$/;"	m	struct:__anon91	access:public
__anon91::name	.\sndfile.h	/^	const char	*name ;$/;"	m	struct:__anon91	access:public
__anon93::level	.\sndfile.h	/^	double		level ;$/;"	m	struct:__anon93	access:public
__anon93::name	.\sndfile.h	/^	const char	*name ;$/;"	m	struct:__anon93	access:public
__anon93::type	.\sndfile.h	/^{	int			type ;$/;"	m	struct:__anon93	access:public
__anon94::length	.\sndfile.h	/^	sf_count_t	length ;$/;"	m	struct:__anon94	access:public
__anon94::offset	.\sndfile.h	/^{	sf_count_t	offset ;$/;"	m	struct:__anon94	access:public
__anon96::__anon97::count	.\sndfile.h	/^		unsigned int count ;$/;"	m	struct:__anon96::__anon97	access:public
__anon96::__anon97::end	.\sndfile.h	/^		unsigned int end ;$/;"	m	struct:__anon96::__anon97	access:public
__anon96::__anon97::mode	.\sndfile.h	/^	{	int mode ;$/;"	m	struct:__anon96::__anon97	access:public
__anon96::__anon97::start	.\sndfile.h	/^		unsigned int start ;$/;"	m	struct:__anon96::__anon97	access:public
__anon96::basenote	.\sndfile.h	/^	char basenote, detune ;$/;"	m	struct:__anon96	access:public
__anon96::detune	.\sndfile.h	/^	char basenote, detune ;$/;"	m	struct:__anon96	access:public
__anon96::gain	.\sndfile.h	/^{	int gain ;$/;"	m	struct:__anon96	access:public
__anon96::key_hi	.\sndfile.h	/^	char key_lo, key_hi ;$/;"	m	struct:__anon96	access:public
__anon96::key_lo	.\sndfile.h	/^	char key_lo, key_hi ;$/;"	m	struct:__anon96	access:public
__anon96::loop_count	.\sndfile.h	/^	int loop_count ;$/;"	m	struct:__anon96	access:public
__anon96::loops	.\sndfile.h	/^	} loops [16] ; \/* make variable in a sensible way *\/$/;"	m	struct:__anon96	typeref:struct:__anon96::__anon97	access:public
__anon96::velocity_hi	.\sndfile.h	/^	char velocity_lo, velocity_hi ;$/;"	m	struct:__anon96	access:public
__anon96::velocity_lo	.\sndfile.h	/^	char velocity_lo, velocity_hi ;$/;"	m	struct:__anon96	access:public
__anon98::bpm	.\sndfile.h	/^	float	bpm ;			\/* suggestion, as it can be calculated using other fields:*\/$/;"	m	struct:__anon98	access:public
__anon98::future	.\sndfile.h	/^	int future [6] ;$/;"	m	struct:__anon98	access:public
__anon98::loop_mode	.\sndfile.h	/^	int		loop_mode ;		\/* see SF_LOOP enum             *\/$/;"	m	struct:__anon98	access:public
__anon98::num_beats	.\sndfile.h	/^	int		num_beats ;		\/* this is NOT the amount of quarter notes !!!*\/$/;"	m	struct:__anon98	access:public
__anon98::root_key	.\sndfile.h	/^	int	root_key ;			\/* MIDI note, or -1 for None *\/$/;"	m	struct:__anon98	access:public
__anon98::time_sig_den	.\sndfile.h	/^	short	time_sig_den ;	\/* any positive power of 2 > 0  *\/$/;"	m	struct:__anon98	access:public
__anon98::time_sig_num	.\sndfile.h	/^	short	time_sig_num ;	\/* any positive integer    > 0  *\/$/;"	m	struct:__anon98	access:public
__anon99::coding_history	.\sndfile.h	/^	char			coding_history [256] ;$/;"	m	struct:__anon99	access:public
__anon99::coding_history_size	.\sndfile.h	/^	unsigned int	coding_history_size ;$/;"	m	struct:__anon99	access:public
__anon99::description	.\sndfile.h	/^{	char			description [256] ;$/;"	m	struct:__anon99	access:public
__anon99::origination_date	.\sndfile.h	/^	char			origination_date [10] ;$/;"	m	struct:__anon99	access:public
__anon99::origination_time	.\sndfile.h	/^	char			origination_time [8] ;$/;"	m	struct:__anon99	access:public
__anon99::originator	.\sndfile.h	/^	char			originator [32] ;$/;"	m	struct:__anon99	access:public
__anon99::originator_reference	.\sndfile.h	/^	char			originator_reference [32] ;$/;"	m	struct:__anon99	access:public
__anon99::reserved	.\sndfile.h	/^	char			reserved [190] ;$/;"	m	struct:__anon99	access:public
__anon99::time_reference_high	.\sndfile.h	/^	int				time_reference_high ;$/;"	m	struct:__anon99	access:public
__anon99::time_reference_low	.\sndfile.h	/^	int				time_reference_low ;$/;"	m	struct:__anon99	access:public
__anon99::umid	.\sndfile.h	/^	char			umid [64] ;$/;"	m	struct:__anon99	access:public
__anon99::version	.\sndfile.h	/^	short			version ;$/;"	m	struct:__anon99	access:public
_dqlntab	.\libsndfile-1.0.17\src\G72x\g721.c	/^static short	_dqlntab[16] = {-2048, 4, 135, 213, 273, 323, 373, 425,$/;"	v	file:
_dqlntab	.\libsndfile-1.0.17\src\G72x\g723_16.c	/^static short   _dqlntab[4] = { 116, 365, 365, 116}; $/;"	v	file:
_dqlntab	.\libsndfile-1.0.17\src\G72x\g723_24.c	/^static short	_dqlntab[8] = {-2048, 135, 273, 373, 373, 273, 135, -2048};$/;"	v	file:
_dqlntab	.\libsndfile-1.0.17\src\G72x\g723_40.c	/^static short	_dqlntab[32] = {-2048, -66, 28, 104, 169, 224, 274, 318,$/;"	v	file:
_fitab	.\libsndfile-1.0.17\src\G72x\g721.c	/^static short	_fitab[16] = {0, 0, 0, 0x200, 0x200, 0x200, 0x600, 0xE00,$/;"	v	file:
_fitab	.\libsndfile-1.0.17\src\G72x\g723_16.c	/^static short   _fitab[4] = {0, 0xE00, 0xE00, 0};$/;"	v	file:
_fitab	.\libsndfile-1.0.17\src\G72x\g723_24.c	/^static short	_fitab[8] = {0, 0x200, 0x400, 0xE00, 0xE00, 0x400, 0x200, 0};$/;"	v	file:
_fitab	.\libsndfile-1.0.17\src\G72x\g723_40.c	/^static short	_fitab[32] = {0, 0, 0, 0, 0, 0x200, 0x200, 0x200,$/;"	v	file:
_witab	.\libsndfile-1.0.17\src\G72x\g721.c	/^static short	_witab[16] = {-12, 18, 41, 64, 112, 198, 355, 1122,$/;"	v	file:
_witab	.\libsndfile-1.0.17\src\G72x\g723_16.c	/^static short   _witab[4] = {-704, 14048, 14048, -704};$/;"	v	file:
_witab	.\libsndfile-1.0.17\src\G72x\g723_24.c	/^static short	_witab[8] = {-128, 960, 4384, 18624, 18624, 4384, 960, -128};$/;"	v	file:
_witab	.\libsndfile-1.0.17\src\G72x\g723_40.c	/^static short	_witab[32] = {448, 448, 768, 1248, 1280, 1312, 1856, 3200,$/;"	v	file:
a	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short a[2];	\/* Coefficients of pole portion of prediction filter. *\/$/;"	m	struct:g72x_state	access:public
aac_MARKER	.\libsndfile-1.0.17\src\caf.c	35;"	d	file:
absolute_byte_offset	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_enc_seek_callback (const FLAC__SeekableStreamEncoder * UNUSED (encoder), FLAC__uint64 absolute_byte_offset, void *client_data)$/;"	v	file:
absolute_byte_offset	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_enc_tell_callback (const FLAC__SeekableStreamEncoder *UNUSED (encoder), FLAC__uint64 *absolute_byte_offset, void *client_data)$/;"	v	file:
absolute_byte_offset	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_seek_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__uint64 absolute_byte_offset, void *client_data)$/;"	v	file:
absolute_byte_offset	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_tell_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__uint64 *absolute_byte_offset, void *client_data)$/;"	v	file:
acid_MARKER	.\libsndfile-1.0.17\src\wav.c	60;"	d	file:
add_clipping	.\libsndfile-1.0.17\src\common.h	/^	int				add_clipping ;$/;"	m	struct:sf_private_tag	access:public
adtl_MARKER	.\libsndfile-1.0.17\src\wav.c	51;"	d	file:
afsp_MARKER	.\libsndfile-1.0.17\src\wav.c	63;"	d	file:
aifc_data	.\libsndfile-1.0.17\tests\aiff_rw_test.c	/^static unsigned char aifc_data [] =$/;"	v	file:
aiff_close	.\libsndfile-1.0.17\src\aiff.c	/^aiff_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
aiff_close	.\libsndfile-1.0.17\src\aiff.c	/^static int	aiff_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
aiff_command	.\libsndfile-1.0.17\src\aiff.c	/^aiff_command (SF_PRIVATE *psf, int command, void *data, int datasize)$/;"	f	file:	signature:(SF_PRIVATE *psf, int command, void *data, int datasize)
aiff_command	.\libsndfile-1.0.17\src\aiff.c	/^static int	aiff_command (SF_PRIVATE *psf, int command, void *data, int datasize) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int command, void *data, int datasize)
aiff_formats	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static int 	aiff_formats [] =$/;"	v	file:
aiff_ima_decode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^aiff_ima_decode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
aiff_ima_decode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int aiff_ima_decode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
aiff_ima_encode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^aiff_ima_encode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
aiff_ima_encode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int aiff_ima_encode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
aiff_ima_init	.\libsndfile-1.0.17\src\common.h	/^int		aiff_ima_init (SF_PRIVATE *psf, int blockalign, int samplesperblock) ;$/;"	p	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
aiff_ima_init	.\libsndfile-1.0.17\src\ima_adpcm.c	/^aiff_ima_init (SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
aiff_open	.\libsndfile-1.0.17\src\aiff.c	/^aiff_open (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
aiff_open	.\libsndfile-1.0.17\src\common.h	/^int		aiff_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
aiff_read_basc_chunk	.\libsndfile-1.0.17\src\aiff.c	/^aiff_read_basc_chunk (SF_PRIVATE * psf, int datasize)$/;"	f	file:	signature:(SF_PRIVATE * psf, int datasize)
aiff_read_basc_chunk	.\libsndfile-1.0.17\src\aiff.c	/^static int aiff_read_basc_chunk (SF_PRIVATE * psf, int) ;$/;"	p	file:	signature:(SF_PRIVATE * psf, int)
aiff_read_comm_chunk	.\libsndfile-1.0.17\src\aiff.c	/^aiff_read_comm_chunk (SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)$/;"	f	file:	signature:(SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)
aiff_read_comm_chunk	.\libsndfile-1.0.17\src\aiff.c	/^static int	aiff_read_comm_chunk (SF_PRIVATE *psf, COMM_CHUNK *comm_fmt) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)
aiff_read_header	.\libsndfile-1.0.17\src\aiff.c	/^aiff_read_header (SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)$/;"	f	file:	signature:(SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)
aiff_read_header	.\libsndfile-1.0.17\src\aiff.c	/^static int	aiff_read_header (SF_PRIVATE *psf, COMM_CHUNK *comm_fmt) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, COMM_CHUNK *comm_fmt)
aiff_write_header	.\libsndfile-1.0.17\src\aiff.c	/^aiff_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
aiff_write_header	.\libsndfile-1.0.17\src\aiff.c	/^static int	aiff_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
aiff_write_strings	.\libsndfile-1.0.17\src\aiff.c	/^aiff_write_strings (SF_PRIVATE *psf, int location)$/;"	f	file:	signature:(SF_PRIVATE *psf, int location)
aiff_write_strings	.\libsndfile-1.0.17\src\aiff.c	/^static void	aiff_write_strings (SF_PRIVATE *psf, int location) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int location)
aiff_write_tailer	.\libsndfile-1.0.17\src\aiff.c	/^aiff_write_tailer (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
aiff_write_tailer	.\libsndfile-1.0.17\src\aiff.c	/^static int	aiff_write_tailer (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
alac_MARKER	.\libsndfile-1.0.17\src\caf.c	36;"	d	file:
alaw2d_array	.\libsndfile-1.0.17\src\alaw.c	/^alaw2d_array (unsigned char *buffer, int count, double *ptr, double normfact)$/;"	f	file:	signature:(unsigned char *buffer, int count, double *ptr, double normfact)
alaw2d_array	.\libsndfile-1.0.17\src\alaw.c	/^static void alaw2d_array (unsigned char *buffer, int count, double *ptr, double normfact) ;$/;"	p	file:	signature:(unsigned char *buffer, int count, double *ptr, double normfact)
alaw2f_array	.\libsndfile-1.0.17\src\alaw.c	/^alaw2f_array (unsigned char *buffer, int count, float *ptr, float normfact)$/;"	f	file:	signature:(unsigned char *buffer, int count, float *ptr, float normfact)
alaw2f_array	.\libsndfile-1.0.17\src\alaw.c	/^static void alaw2f_array (unsigned char *buffer, int count, float *ptr, float normfact) ;$/;"	p	file:	signature:(unsigned char *buffer, int count, float *ptr, float normfact)
alaw2i_array	.\libsndfile-1.0.17\src\alaw.c	/^alaw2i_array (unsigned char *buffer, int count, int *ptr)$/;"	f	file:	signature:(unsigned char *buffer, int count, int *ptr)
alaw2i_array	.\libsndfile-1.0.17\src\alaw.c	/^static void alaw2i_array (unsigned char *buffer, int count, int *ptr) ;$/;"	p	file:	signature:(unsigned char *buffer, int count, int *ptr)
alaw2s_array	.\libsndfile-1.0.17\src\alaw.c	/^alaw2s_array (unsigned char *buffer, int count, short *ptr)$/;"	f	file:	signature:(unsigned char *buffer, int count, short *ptr)
alaw2s_array	.\libsndfile-1.0.17\src\alaw.c	/^static void alaw2s_array (unsigned char *buffer, int count, short *ptr) ;$/;"	p	file:	signature:(unsigned char *buffer, int count, short *ptr)
alaw_MARKER	.\libsndfile-1.0.17\src\aiff.c	71;"	d	file:
alaw_MARKER	.\libsndfile-1.0.17\src\caf.c	37;"	d	file:
alaw_buffer	.\libsndfile-1.0.17\tests\alaw_test.c	/^static	unsigned char	alaw_buffer [BUFFER_SIZE] ;$/;"	v	file:
alaw_decode	.\libsndfile-1.0.17\src\alaw.c	/^short alaw_decode [256] =$/;"	v	file:
alaw_decode	.\libsndfile-1.0.17\tests\alaw_test.c	/^int alaw_decode (unsigned int Alawbyte)$/;"	f	file:	signature:(unsigned int Alawbyte)
alaw_decode	.\libsndfile-1.0.17\tests\alaw_test.c	/^static int				alaw_decode (unsigned int alawbyte) ;$/;"	p	file:	signature:(unsigned int alawbyte)
alaw_encode	.\libsndfile-1.0.17\src\alaw.c	/^unsigned char alaw_encode [2048 + 1] =$/;"	v	file:
alaw_encode	.\libsndfile-1.0.17\tests\alaw_test.c	/^static unsigned char	alaw_encode (int sample) ;$/;"	p	file:	signature:(int sample)
alaw_encode	.\libsndfile-1.0.17\tests\alaw_test.c	/^unsigned char alaw_encode (int sample)$/;"	f	file:	signature:(int sample)
alaw_init	.\libsndfile-1.0.17\src\alaw.c	/^alaw_init (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
alaw_init	.\libsndfile-1.0.17\src\common.h	/^int		alaw_init		(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
alaw_read_alaw2d	.\libsndfile-1.0.17\src\alaw.c	/^alaw_read_alaw2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
alaw_read_alaw2d	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_read_alaw2d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
alaw_read_alaw2f	.\libsndfile-1.0.17\src\alaw.c	/^alaw_read_alaw2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
alaw_read_alaw2f	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_read_alaw2f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
alaw_read_alaw2i	.\libsndfile-1.0.17\src\alaw.c	/^alaw_read_alaw2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
alaw_read_alaw2i	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_read_alaw2i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
alaw_read_alaw2s	.\libsndfile-1.0.17\src\alaw.c	/^alaw_read_alaw2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
alaw_read_alaw2s	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_read_alaw2s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
alaw_write_d2alaw	.\libsndfile-1.0.17\src\alaw.c	/^alaw_write_d2alaw	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
alaw_write_d2alaw	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_write_d2alaw (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
alaw_write_f2alaw	.\libsndfile-1.0.17\src\alaw.c	/^alaw_write_f2alaw	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
alaw_write_f2alaw	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_write_f2alaw (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
alaw_write_i2alaw	.\libsndfile-1.0.17\src\alaw.c	/^alaw_write_i2alaw	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
alaw_write_i2alaw	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_write_i2alaw (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
alaw_write_s2alaw	.\libsndfile-1.0.17\src\alaw.c	/^alaw_write_s2alaw	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
alaw_write_s2alaw	.\libsndfile-1.0.17\src\alaw.c	/^static sf_count_t alaw_write_s2alaw (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
allowed_open_files	.\libsndfile-1.0.17\tests\utils.c	/^static int allowed_open_files = -1 ;$/;"	v	file:
alsa_open	.\libsndfile-1.0.17\examples\sndfile-play.c	/^alsa_open (int channels, unsigned samplerate, int realtime)$/;"	f	file:	signature:(int channels, unsigned samplerate, int realtime)
alsa_open	.\libsndfile-1.0.17\examples\sndfile-play.c	/^static snd_pcm_t * alsa_open (int channels, unsigned srate, int realtime) ;$/;"	p	file:	signature:(int channels, unsigned srate, int realtime)
alsa_play	.\libsndfile-1.0.17\examples\sndfile-play.c	/^alsa_play (int argc, char *argv [])$/;"	f	file:	signature:(int argc, char *argv [])
alsa_write_float	.\libsndfile-1.0.17\examples\sndfile-play.c	/^alsa_write_float (snd_pcm_t *alsa_dev, float *data, int frames, int channels)$/;"	f	file:	signature:(snd_pcm_t *alsa_dev, float *data, int frames, int channels)
alsa_write_float	.\libsndfile-1.0.17\examples\sndfile-play.c	/^static int alsa_write_float (snd_pcm_t *alsa_dev, float *data, int frames, int channels) ;$/;"	p	file:	signature:(snd_pcm_t *alsa_dev, float *data, int frames, int channels)
ap	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short ap;	\/* Linear weighting coefficient of 'yl' and 'yu'. *\/$/;"	m	struct:g72x_state	access:public
artist	.\libsndfile-1.0.17\tests\string_test.c	/^	artist		[]	= "The Artist",$/;"	v	file:
attacklen	.\libsndfile-1.0.17\src\txw.c	/^	unsigned int	attacklen, repeatlen ;$/;"	m	struct:__anon56	file:	access:public
au_close	.\libsndfile-1.0.17\src\au.c	/^au_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
au_close	.\libsndfile-1.0.17\src\au.c	/^static	int		au_close		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
au_format_to_encoding	.\libsndfile-1.0.17\src\au.c	/^au_format_to_encoding (int format)$/;"	f	file:	signature:(int format)
au_format_to_encoding	.\libsndfile-1.0.17\src\au.c	/^static	int 	au_format_to_encoding	(int format) ;$/;"	p	file:	signature:(int format)
au_formats	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static int 	au_formats [] =$/;"	v	file:
au_open	.\libsndfile-1.0.17\src\au.c	/^au_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
au_open	.\libsndfile-1.0.17\src\common.h	/^int		au_open		(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
au_read_header	.\libsndfile-1.0.17\src\au.c	/^au_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
au_read_header	.\libsndfile-1.0.17\src\au.c	/^static int		au_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
au_write_header	.\libsndfile-1.0.17\src\au.c	/^au_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
au_write_header	.\libsndfile-1.0.17\src\au.c	/^static int		au_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
auto_header	.\libsndfile-1.0.17\src\common.h	/^	int				auto_header ;$/;"	m	struct:sf_private_tag	access:public
auxblocksize	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	auxblocksize ;$/;"	m	struct:__anon70	access:public
avr_close	.\libsndfile-1.0.17\src\avr.c	/^avr_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
avr_close	.\libsndfile-1.0.17\src\avr.c	/^static int		avr_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
avr_open	.\libsndfile-1.0.17\src\avr.c	/^avr_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
avr_open	.\libsndfile-1.0.17\src\common.h	/^int		avr_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
avr_read_header	.\libsndfile-1.0.17\src\avr.c	/^avr_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
avr_read_header	.\libsndfile-1.0.17\src\avr.c	/^static int		avr_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
avr_write_header	.\libsndfile-1.0.17\src\avr.c	/^avr_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
avr_write_header	.\libsndfile-1.0.17\src\avr.c	/^static int		avr_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
b	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short b[6];	\/* Coefficients of zero portion of prediction filter. *\/$/;"	m	struct:g72x_state	access:public
b	.\libsndfile-1.0.17\src\dwvw.c	/^	} b ;$/;"	m	struct:__anon34	typeref:struct:__anon34::__anon35	file:	access:public
bad_header	.\libsndfile-1.0.17\src\nist.c	/^static char bad_header [] =$/;"	v	file:
bad_raw_test	.\libsndfile-1.0.17\tests\raw_test.c	/^bad_raw_test (void)$/;"	f	file:	signature:(void)
bad_raw_test	.\libsndfile-1.0.17\tests\raw_test.c	/^static	void	bad_raw_test (void) ;$/;"	p	file:	signature:(void)
basc_CHUNK	.\libsndfile-1.0.17\src\aiff.c	/^} basc_CHUNK ;$/;"	t	typeref:struct:__anon16	file:
basc_MARKER	.\libsndfile-1.0.17\src\aiff.c	54;"	d	file:
basc_SCALE_BOTH	.\libsndfile-1.0.17\src\aiff.c	/^	basc_SCALE_BOTH$/;"	e	enum:__anon14	file:
basc_SCALE_MAJOR	.\libsndfile-1.0.17\src\aiff.c	/^	basc_SCALE_MAJOR,$/;"	e	enum:__anon14	file:
basc_SCALE_MINOR	.\libsndfile-1.0.17\src\aiff.c	/^{	basc_SCALE_MINOR = 1,$/;"	e	enum:__anon14	file:
basc_SCALE_NEITHER	.\libsndfile-1.0.17\src\aiff.c	/^	basc_SCALE_NEITHER,$/;"	e	enum:__anon14	file:
basc_TYPE_LOOP	.\libsndfile-1.0.17\src\aiff.c	/^{	basc_TYPE_LOOP = 0,$/;"	e	enum:__anon15	file:
basc_TYPE_ONE_SHOT	.\libsndfile-1.0.17\src\aiff.c	/^	basc_TYPE_ONE_SHOT$/;"	e	enum:__anon15	file:
baseNote	.\libsndfile-1.0.17\src\aiff.c	/^{	char		baseNote ;		\/* all notes are MIDI note numbers *\/$/;"	m	struct:__anon13	file:	access:public
basenote	.\sndfile.h	/^	char basenote, detune ;$/;"	m	struct:__anon96	access:public
bd2d_write	.\libsndfile-1.0.17\src\double64.c	/^bd2d_write (double *buffer, int count)$/;"	f	file:	signature:(double *buffer, int count)
bd2d_write	.\libsndfile-1.0.17\src\double64.c	/^static	void	bd2d_write (double *buffer, int count) ;$/;"	p	file:	signature:(double *buffer, int count)
beginLoop	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	beginLoop ;$/;"	m	struct:__anon12	file:	access:public
bei2d_array	.\libsndfile-1.0.17\src\pcm.c	/^bei2d_array (int *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(int *src, int count, double *dest, double normfact)
bei2f_array	.\libsndfile-1.0.17\src\pcm.c	/^bei2f_array (int *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(int *src, int count, float *dest, float normfact)
bei2s_array	.\libsndfile-1.0.17\src\pcm.c	/^bei2s_array (int *src, int count, short *dest)$/;"	f	file:	signature:(int *src, int count, short *dest)
beos_play	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^beos_play (int argc, char *argv [])$/;"	f	file:	signature:(int argc, char *argv [])
bes2d_array	.\libsndfile-1.0.17\src\pcm.c	/^bes2d_array (short *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(short *src, int count, double *dest, double normfact)
bes2f_array	.\libsndfile-1.0.17\src\pcm.c	/^bes2f_array (short *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(short *src, int count, float *dest, float normfact)
bes2i_array	.\libsndfile-1.0.17\src\pcm.c	/^bes2i_array (short *src, int count, int *dest)$/;"	f	file:	signature:(short *src, int count, int *dest)
bet2d_array	.\libsndfile-1.0.17\src\pcm.c	/^bet2d_array (tribyte *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(tribyte *src, int count, double *dest, double normfact)
bet2f_array	.\libsndfile-1.0.17\src\pcm.c	/^bet2f_array (tribyte *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(tribyte *src, int count, float *dest, float normfact)
bet2i_array	.\libsndfile-1.0.17\src\pcm.c	/^bet2i_array (tribyte *src, int count, int *dest)$/;"	f	file:	signature:(tribyte *src, int count, int *dest)
bet2s_array	.\libsndfile-1.0.17\src\pcm.c	/^bet2s_array (tribyte *src, int count, short *dest)$/;"	f	file:	signature:(tribyte *src, int count, short *dest)
bext_MARKER	.\libsndfile-1.0.17\src\wav.c	56;"	d	file:
bf2f_array	.\libsndfile-1.0.17\src\float32.c	/^bf2f_array (float *buffer, int count)$/;"	f	file:	signature:(float *buffer, int count)
bf2f_array	.\libsndfile-1.0.17\src\float32.c	/^static	void	bf2f_array (float *buffer, int count) ;$/;"	p	file:	signature:(float *buffer, int count)
bit_count	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
bit_width	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
bitoff	.\libsndfile-1.0.17\src\GSM610\add.c	/^static unsigned char const bitoff[ 256 ] = {$/;"	v	file:
bits	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
bits_per_chan	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int bits_per_chan ;$/;"	m	struct:__anon22	file:	access:public
bitwidth	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
bitwidth	.\libsndfile-1.0.17\src\sds.c	/^{	int bitwidth, frames ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
bitwidth	.\libsndfile-1.0.17\src\voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon59	file:	access:public
bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon65	access:public
bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon66	access:public
bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon67	access:public
bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon69	access:public
bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon70	access:public
bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon71	access:public
bitwidth	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	bitwidth ;$/;"	m	struct:__anon73	access:public
block	.\libsndfile-1.0.17\src\g72x.c	/^	unsigned char	block	[G72x_BLOCK_SIZE] ;$/;"	m	struct:__anon40	file:	access:public
block	.\libsndfile-1.0.17\src\gsm610.c	/^	unsigned char	block [WAV_W64_GSM610_BLOCKSIZE] ;$/;"	m	struct:gsm610_tag	file:	access:public
block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	unsigned char	*block ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	unsigned char	*block ;$/;"	m	struct:__anon45	file:	access:public
block	.\libsndfile-1.0.17\src\paf.c	/^	unsigned char	*block ;$/;"	m	struct:__anon47	file:	access:public
block_curr	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon40	file:	access:public
blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon65	access:public
blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon66	access:public
blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon67	access:public
blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon69	access:public
blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon70	access:public
blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon71	access:public
blockalign	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	blockalign ;$/;"	m	struct:__anon73	access:public
blockcount	.\libsndfile-1.0.17\src\gsm610.c	/^	int				blockcount, samplecount ;$/;"	m	struct:gsm610_tag	file:	access:public
blockcount	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				blockcount, samplecount ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
blockcount	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	int				blockcount ;$/;"	m	struct:__anon45	file:	access:public
blocks	.\libsndfile-1.0.17\src\gsm610.c	/^{	int				blocks ;$/;"	m	struct:gsm610_tag	file:	access:public
blocks	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
blocks	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
blocks	.\libsndfile-1.0.17\src\voc.c	/^	SND_DATA_BLOCKS	blocks [VOC_MAX_SECTIONS] ;$/;"	m	struct:__anon59	file:	access:public
blocks_total	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon40	file:	access:public
blocksize	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state	access:public
blocksize	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	blocksize ;$/;"	m	struct:__anon11	file:	access:public
blocksize	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon40	file:	access:public
blocksize	.\libsndfile-1.0.17\src\gsm610.c	/^	int				samplesperblock, blocksize ;$/;"	m	struct:gsm610_tag	file:	access:public
blocksize	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
blocksize	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
blocksize	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
blockwidth	.\libsndfile-1.0.17\src\common.h	/^	int				blockwidth ;	\/* Size in bytes of one set of interleaved samples. *\/$/;"	m	struct:sf_private_tag	access:public
bpm	.\sndfile.h	/^	float	bpm ;			\/* suggestion, as it can be calculated using other fields:*\/$/;"	m	struct:__anon98	access:public
broadcast_add_coding_history	.\libsndfile-1.0.17\src\broadcast.c	/^broadcast_add_coding_history (SF_BROADCAST_INFO* bext, unsigned int channels, unsigned int samplerate)$/;"	f	signature:(SF_BROADCAST_INFO* bext, unsigned int channels, unsigned int samplerate)
broadcast_add_coding_history	.\libsndfile-1.0.17\src\common.h	/^int		broadcast_add_coding_history (SF_BROADCAST_INFO* bext, unsigned int channels, unsigned int samplerate) ;$/;"	p	signature:(SF_BROADCAST_INFO* bext, unsigned int channels, unsigned int samplerate)
broadcast_dump	.\libsndfile-1.0.17\examples\sndfile-info.c	/^broadcast_dump (const char *filename)$/;"	f	file:	signature:(const char *filename)
broadcast_dump	.\libsndfile-1.0.17\examples\sndfile-info.c	/^static void broadcast_dump (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
broadcast_info	.\libsndfile-1.0.17\src\common.h	/^	SF_BROADCAST_INFO *broadcast_info ;$/;"	m	struct:sf_private_tag	access:public
broadcast_info_alloc	.\libsndfile-1.0.17\src\broadcast.c	/^broadcast_info_alloc (void)$/;"	f	signature:(void)
broadcast_info_alloc	.\libsndfile-1.0.17\src\common.h	/^SF_BROADCAST_INFO* broadcast_info_alloc (void) ;$/;"	p	signature:(void)
broadcast_info_copy	.\libsndfile-1.0.17\src\broadcast.c	/^broadcast_info_copy (SF_BROADCAST_INFO* dst, SF_BROADCAST_INFO* src)$/;"	f	signature:(SF_BROADCAST_INFO* dst, SF_BROADCAST_INFO* src)
broadcast_info_copy	.\libsndfile-1.0.17\src\common.h	/^int		broadcast_info_copy (SF_BROADCAST_INFO* dst, SF_BROADCAST_INFO* src) ;$/;"	p	signature:(SF_BROADCAST_INFO* dst, SF_BROADCAST_INFO* src)
broadcast_test	.\libsndfile-1.0.17\tests\command_test.c	/^broadcast_test (const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
broadcast_test	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	broadcast_test		(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
buf_size	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	UInt32 			buf_size ;$/;"	m	struct:__anon4	file:	access:public
buffer	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^} buffer ;$/;"	v	typeref:union:__anon1	file:
buffer	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	short		buffer [WIN32_BUFFER_LEN \/ sizeof (short)] ;$/;"	m	struct:__anon5	file:	access:public
buffer	.\libsndfile-1.0.17\src\dither.c	/^	double buffer [SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	struct:__anon31	file:	access:public
buffer	.\libsndfile-1.0.17\src\dwvw.c	/^		unsigned char	buffer [256] ;$/;"	m	struct:__anon34::__anon35	file:	access:public
buffer	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_enc_write_callback (const FLAC__SeekableStreamEncoder * UNUSED (encoder), const FLAC__byte buffer [], unsigned bytes, unsigned UNUSED (samples), unsigned UNUSED (current_frame), void *client_data)$/;"	v	file:
buffer	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_read_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__byte buffer [], unsigned *bytes, void *client_data)$/;"	v	file:
buffer	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_write_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data)$/;"	v	file:
buffer	.\libsndfile-1.0.17\src\interleave.c	/^{	double	buffer [SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	struct:__anon41	file:	access:public
buffer_callback	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^buffer_callback(void *theCookie, void *buf, size_t size, const media_raw_audio_format &format) $/;"	f	file:	signature:(void *theCookie, void *buf, size_t size, const media_raw_audio_format &format)
buffer_in	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static	BUFFER	buffer_in ;$/;"	v	file:
buffer_out	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static	BUFFER	buffer_out ;$/;"	v	file:
bufferbackup	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__bool bufferbackup ;$/;"	m	struct:__anon37	file:	access:public
bufferlen	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int			current, bufferlen ;$/;"	m	struct:__anon5	file:	access:public
bufferpos	.\libsndfile-1.0.17\src\flac.c	/^	unsigned bufferpos ;$/;"	m	struct:__anon37	file:	access:public
bytes	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_enc_write_callback (const FLAC__SeekableStreamEncoder * UNUSED (encoder), const FLAC__byte buffer [], unsigned bytes, unsigned UNUSED (samples), unsigned UNUSED (current_frame), void *client_data)$/;"	v	file:
bytes	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_read_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__byte buffer [], unsigned *bytes, void *client_data)$/;"	v	file:
bytesperblock	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon40	file:	access:public
bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon65	access:public
bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon66	access:public
bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon67	access:public
bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon69	access:public
bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon70	access:public
bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon71	access:public
bytespersec	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	bytespersec ;$/;"	m	struct:__anon73	access:public
bytewidth	.\libsndfile-1.0.17\src\common.h	/^	int				bytewidth ;		\/* Size in bytes of one sample (one channel). *\/$/;"	m	struct:sf_private_tag	access:public
c	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	char c [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
c	.\libsndfile-1.0.17\tests\write_read_test.c	/^	char c [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
c_MARKER	.\libsndfile-1.0.17\src\aiff.c	45;"	d	file:
c_MARKER	.\libsndfile-1.0.17\src\svx.c	44;"	d	file:
caf_close	.\libsndfile-1.0.17\src\caf.c	/^caf_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
caf_close	.\libsndfile-1.0.17\src\caf.c	/^static int	caf_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
caf_open	.\libsndfile-1.0.17\src\caf.c	/^caf_open (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
caf_open	.\libsndfile-1.0.17\src\common.h	/^int		caf_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
caf_read_header	.\libsndfile-1.0.17\src\caf.c	/^caf_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
caf_read_header	.\libsndfile-1.0.17\src\caf.c	/^static int	caf_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
caf_write_header	.\libsndfile-1.0.17\src\caf.c	/^caf_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
caf_write_header	.\libsndfile-1.0.17\src\caf.c	/^static int	caf_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
caff_MARKER	.\libsndfile-1.0.17\src\caf.c	38;"	d	file:
calc_checksum	.\libsndfile-1.0.17\regtest\checksum.c	/^calc_checksum (SNDFILE * file, const SF_INFO * info)$/;"	f	signature:(SNDFILE * file, const SF_INFO * info)
calc_checksum	.\libsndfile-1.0.17\regtest\database.c	/^int calc_checksum (SNDFILE * file, const SF_INFO * info) ;$/;"	p	file:	signature:(SNDFILE * file, const SF_INFO * info)
calc_checksum	.\libsndfile-1.0.17\regtest\regtest.h	/^int calc_checksum (SNDFILE * file, const SF_INFO * info) ;$/;"	p	signature:(SNDFILE * file, const SF_INFO * info)
calc_decibels	.\libsndfile-1.0.17\examples\sndfile-info.c	/^calc_decibels (SF_INFO * sfinfo, double max)$/;"	f	file:	signature:(SF_INFO * sfinfo, double max)
calc_float_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^calc_float_performance (int format, double read_rate, double write_rate)$/;"	f	file:	signature:(int format, double read_rate, double write_rate)
calc_float_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^static void	calc_float_performance (int format, double read_rate, double write_rate) ;$/;"	p	file:	signature:(int format, double read_rate, double write_rate)
calc_int_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^calc_int_performance (int format, double read_rate, double write_rate)$/;"	f	file:	signature:(int format, double read_rate, double write_rate)
calc_int_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^static void	calc_int_performance (int format, double read_rate, double write_rate) ;$/;"	p	file:	signature:(int format, double read_rate, double write_rate)
calc_max_spectral_difference	.\libsndfile-1.0.17\tests\dft_cmp.c	/^calc_max_spectral_difference (double *orig, double *test)$/;"	f	file:	signature:(double *orig, double *test)
calc_max_spectral_difference	.\libsndfile-1.0.17\tests\dft_cmp.c	/^static double calc_max_spectral_difference (double *spec1, double *spec2) ;$/;"	p	file:	signature:(double *spec1, double *spec2)
calc_peak_test	.\libsndfile-1.0.17\tests\command_test.c	/^calc_peak_test (int filetype, const char *filename)$/;"	f	file:	signature:(int filetype, const char *filename)
calc_peak_test	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	calc_peak_test		(int filetype, const char *filename) ;$/;"	p	file:	signature:(int filetype, const char *filename)
calc_raw_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^calc_raw_performance (PERF_STATS *stats)$/;"	f	file:	signature:(PERF_STATS *stats)
calc_raw_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^static void calc_raw_performance (PERF_STATS *stats) ;$/;"	p	file:	signature:(PERF_STATS *stats)
calc_short_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^calc_short_performance (int format, double read_rate, double write_rate)$/;"	f	file:	signature:(int format, double read_rate, double write_rate)
calc_short_performance	.\libsndfile-1.0.17\tests\benchmark.c	/^static void	calc_short_performance (int format, double read_rate, double write_rate) ;$/;"	p	file:	signature:(int format, double read_rate, double write_rate)
callback	.\libsndfile-1.0.17\regtest\database.c	/^callback (void *unused, int argc, char **argv, char **colname)$/;"	f	file:	signature:(void *unused, int argc, char **argv, char **colname)
callback	.\libsndfile-1.0.17\regtest\database.c	/^static int callback (void *unused, int argc, char **argv, char **colname) ;$/;"	p	file:	signature:(void *unused, int argc, char **argv, char **colname)
cbuf	.\libsndfile-1.0.17\src\common.h	/^		char			cbuf	[SF_BUFFER_LEN \/ sizeof (char)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
ceeplusplus_test	.\libsndfile-1.0.17\tests\cpp_test.cc	/^ceeplusplus_test (const char *filename, int format)$/;"	f	file:	signature:(const char *filename, int format)
chan_MARKER	.\libsndfile-1.0.17\src\caf.c	39;"	d	file:
channel_len	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		channel_len ;$/;"	m	struct:__anon41	file:	access:public
channel_map	.\libsndfile-1.0.17\src\common.h	/^	int				*channel_map ;$/;"	m	struct:sf_private_tag	access:public
channel_map_test	.\libsndfile-1.0.17\tests\command_test.c	/^channel_map_test (const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
channel_map_test	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	channel_map_test	(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
channelmask	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	channelmask ;$/;"	m	struct:__anon73	access:public
channels	.\libsndfile-1.0.17\src\au.c	/^    int		channels ;$/;"	m	struct:__anon20	file:	access:public
channels	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
channels	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
channels	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
channels	.\libsndfile-1.0.17\src\paf.c	/^	int	channels ;$/;"	m	struct:__anon46	file:	access:public
channels	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
channels	.\libsndfile-1.0.17\src\sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon51	file:	access:public
channels	.\libsndfile-1.0.17\src\sndfile.hh	/^		int			channels (void) const	{ return p ? p->sfinfo.channels : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
channels	.\libsndfile-1.0.17\src\voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon59	file:	access:public
channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon65	access:public
channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon66	access:public
channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon67	access:public
channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon69	access:public
channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon70	access:public
channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon71	access:public
channels	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	channels ;$/;"	m	struct:__anon73	access:public
channels	.\sndfile.h	/^	int			channels ;$/;"	m	struct:SF_INFO	access:public
channels	.\sndfile.hh	/^		int			channels (void) const	{ return p ? p->sfinfo.channels : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
channels_per_frame	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int channels_per_frame ;$/;"	m	struct:__anon22	file:	access:public
check	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="check"><\/A>$/;"	a
check	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="check"><\/A>$/;"	a
check_comment	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^check_comment (SNDFILE * file, int format, int lineno)$/;"	f	file:	signature:(SNDFILE * file, int format, int lineno)
check_comment	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static void check_comment (SNDFILE * file, int format, int lineno) ;$/;"	p	file:	signature:(SNDFILE * file, int format, int lineno)
check_file_by_ekey	.\libsndfile-1.0.17\regtest\database.c	/^check_file_by_ekey (REGTEST_DB * db, int ekey)$/;"	f	file:	signature:(REGTEST_DB * db, int ekey)
check_file_by_ekey	.\libsndfile-1.0.17\regtest\database.c	/^static int check_file_by_ekey (REGTEST_DB * db, int ekey) ;$/;"	p	file:	signature:(REGTEST_DB * db, int ekey)
check_file_hash_or_die	.\libsndfile-1.0.17\tests\utils.c	/^check_file_hash_or_die (const char *filename, unsigned int target_hash, int line_num)$/;"	f	signature:(const char *filename, unsigned int target_hash, int line_num)
check_file_hash_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void	check_file_hash_or_die	(const char *filename, unsigned int target_hash, int line_num) ;$/;"	p	signature:(const char *filename, unsigned int target_hash, int line_num)
check_log_buffer_or_die	.\libsndfile-1.0.17\tests\utils.c	/^check_log_buffer_or_die (SNDFILE *file, int line_num)$/;"	f	signature:(SNDFILE *file, int line_num)
check_log_buffer_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	check_log_buffer_or_die (SNDFILE *file, int line_num) ;$/;"	p	signature:(SNDFILE *file, int line_num)
check_logged_peaks	.\libsndfile-1.0.17\tests\peak_chunk_test.c	/^check_logged_peaks (char *buffer)$/;"	f	file:	signature:(char *buffer)
check_logged_peaks	.\libsndfile-1.0.17\tests\peak_chunk_test.c	/^static void		check_logged_peaks (char *buffer) ;$/;"	p	file:	signature:(char *buffer)
check_open_file_count_or_die	.\libsndfile-1.0.17\tests\utils.c	/^check_open_file_count_or_die (int lineno)$/;"	f	signature:(int lineno)
check_open_file_count_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void	check_open_file_count_or_die (int lineno) ;$/;"	p	signature:(int lineno)
check_short_data	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^check_short_data (short * data, int len, int start, int line)$/;"	f	file:	signature:(short * data, int len, int start, int line)
check_title	.\libsndfile-1.0.17\tests\cpp_test.cc	/^check_title (const SndfileHandle & file, const char * filename)$/;"	f	file:	signature:(const SndfileHandle & file, const char * filename)
choose_predictor	.\libsndfile-1.0.17\src\ms_adpcm.c	/^choose_predictor (unsigned int channels, short *data, int *block_pred, int *idelta)$/;"	f	file:	signature:(unsigned int channels, short *data, int *block_pred, int *idelta)
choose_predictor	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static	void	choose_predictor (unsigned int channels, short *data, int *bpred, int *idelta) ;$/;"	p	file:	signature:(unsigned int channels, short *data, int *bpred, int *idelta)
clm_MARKER	.\libsndfile-1.0.17\src\wav.c	64;"	d	file:
close	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="close"><\/A>$/;"	a
close	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="close"><\/A>$/;"	a
cmdbuf	.\libsndfile-1.0.17\regtest\database.c	/^	char cmdbuf [1 << 15] ;$/;"	m	struct:__anon7	file:	access:public
codec_bits	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state	access:public
codec_close	.\libsndfile-1.0.17\src\common.h	/^	int				(*codec_close)		(struct sf_private_tag*) ;$/;"	m	struct:sf_private_tag	access:public
codec_data	.\libsndfile-1.0.17\src\common.h	/^	void			*codec_data ;		\/*	This is a pointer to dynamically allocated file$/;"	m	struct:sf_private_tag	access:public
coding_history	.\sndfile.h	/^	char			coding_history [256] ;$/;"	m	struct:__anon99	access:public
coding_history_size	.\sndfile.h	/^	unsigned int	coding_history_size ;$/;"	m	struct:__anon99	access:public
coeff1	.\libsndfile-1.0.17\src\wav_w64.h	/^	{	short	coeff1 ;$/;"	m	struct:__anon67::__anon68	access:public
coeff2	.\libsndfile-1.0.17\src\wav_w64.h	/^		short	coeff2 ;$/;"	m	struct:__anon67::__anon68	access:public
coeffs	.\libsndfile-1.0.17\src\wav_w64.h	/^	}	coeffs [7] ;$/;"	m	struct:__anon67	typeref:struct:__anon67::__anon68	access:public
cols	.\libsndfile-1.0.17\src\mat5.c	/^	int			rows, cols ;$/;"	m	struct:__anon44	file:	access:public
comm_offset	.\libsndfile-1.0.17\src\aiff.c	/^{	sf_count_t	comm_offset ;$/;"	m	struct:__anon18	file:	access:public
command	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="command"><\/A>$/;"	a
command	.\libsndfile-1.0.17\src\common.h	/^	int				(*command)		(struct sf_private_tag*, int command, void *data, int datasize) ;$/;"	m	struct:sf_private_tag	access:public
command	.\libsndfile-1.0.17\src\sndfile.hh	/^		int command (int cmd, void *data, int datasize) ;$/;"	p	class:SndfileHandle	access:public	signature:(int cmd, void *data, int datasize)
command	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::command (int cmd, void *data, int datasize)$/;"	f	class:SndfileHandle	signature:(int cmd, void *data, int datasize)
command	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="command"><\/A>$/;"	a
command	.\sndfile.hh	/^		int command (int cmd, void *data, int datasize) ;$/;"	p	class:SndfileHandle	access:public	signature:(int cmd, void *data, int datasize)
command	.\sndfile.hh	/^SndfileHandle::command (int cmd, void *data, int datasize)$/;"	f	class:SndfileHandle	signature:(int cmd, void *data, int datasize)
comment	.\libsndfile-1.0.17\tests\string_test.c	/^	comment		[]	= "Comment goes here!!!",$/;"	v	file:
compare_strings_or_die	.\libsndfile-1.0.17\src\test_log_printf.c	/^compare_strings_or_die (int linenum, const char *fmt, const char* s1, const char* s2)$/;"	f	file:	signature:(int linenum, const char *fmt, const char* s1, const char* s2)
compare_strings_or_die	.\libsndfile-1.0.17\src\test_log_printf.c	/^static int compare_strings_or_die (int linenum, const char *fmt, const char* s1, const char* s3) ;$/;"	p	file:	signature:(int linenum, const char *fmt, const char* s1, const char* s3)
compression	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
compression	.\libsndfile-1.0.17\src\svx.c	/^	unsigned char	octave, compression ;$/;"	m	struct:__anon54	file:	access:public
container_close	.\libsndfile-1.0.17\src\common.h	/^	int				(*container_close)	(struct sf_private_tag*) ;$/;"	m	struct:sf_private_tag	access:public
container_data	.\libsndfile-1.0.17\src\common.h	/^	void			*container_data ;	\/*	This is a pointer to dynamically allocated file$/;"	m	struct:sf_private_tag	access:public
copy_data_fp	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^copy_data_fp (SNDFILE *outfile, SNDFILE *infile, int channels)$/;"	f	file:	signature:(SNDFILE *outfile, SNDFILE *infile, int channels)
copy_data_fp	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^static void copy_data_fp (SNDFILE *outfile, SNDFILE *infile, int channels) ;$/;"	p	file:	signature:(SNDFILE *outfile, SNDFILE *infile, int channels)
copy_data_int	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^copy_data_int (SNDFILE *outfile, SNDFILE *infile, int channels)$/;"	f	file:	signature:(SNDFILE *outfile, SNDFILE *infile, int channels)
copy_data_int	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^static void copy_data_int (SNDFILE *outfile, SNDFILE *infile, int channels) ;$/;"	p	file:	signature:(SNDFILE *outfile, SNDFILE *infile, int channels)
copy_filename	.\libsndfile-1.0.17\src\sndfile.c	/^copy_filename (SF_PRIVATE *psf, const char *path)$/;"	f	file:	signature:(SF_PRIVATE *psf, const char *path)
copy_filename	.\libsndfile-1.0.17\src\sndfile.c	/^static void	copy_filename (SF_PRIVATE *psf, const char *path) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const char *path)
copy_metadata	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^copy_metadata (SNDFILE *outfile, SNDFILE *infile)$/;"	f	file:	signature:(SNDFILE *outfile, SNDFILE *infile)
copy_metadata	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^static void copy_metadata (SNDFILE *outfile, SNDFILE *infile) ;$/;"	p	file:	signature:(SNDFILE *outfile, SNDFILE *infile)
copyright	.\libsndfile-1.0.17\tests\string_test.c	/^	copyright	[]	= "Copyright (c) 2001 The Artist",$/;"	v	file:
count	.\libsndfile-1.0.17\regtest\database.c	/^	int count ;$/;"	m	struct:__anon7	file:	access:public
count	.\sndfile.h	/^		unsigned int count ;$/;"	m	struct:__anon96::__anon97	access:public
count_callback	.\libsndfile-1.0.17\regtest\database.c	/^count_callback (REGTEST_DB * db, int argc, char **argv, char **colname)$/;"	f	file:	signature:(REGTEST_DB * db, int argc, char **argv, char **colname)
count_callback	.\libsndfile-1.0.17\regtest\database.c	/^static int count_callback (REGTEST_DB * db, int argc, char **argv, char **colname) ;$/;"	p	file:	signature:(REGTEST_DB * db, int argc, char **argv, char **colname)
count_open_files	.\libsndfile-1.0.17\tests\utils.c	/^count_open_files (void)$/;"	f	signature:(void)
count_open_files	.\libsndfile-1.0.17\tests\utils.h	/^void	count_open_files (void) ;$/;"	p	signature:(void)
cpu_is_big_endian	.\libsndfile-1.0.17\tests\benchmark.c	/^cpu_is_big_endian (void)$/;"	f	file:	signature:(void)
cpu_is_big_endian	.\libsndfile-1.0.17\tests\benchmark.c	/^static int cpu_is_big_endian (void) ;$/;"	p	file:	signature:(void)
create_file	.\libsndfile-1.0.17\tests\cpp_test.cc	/^create_file (const char * filename, int format)$/;"	f	file:	signature:(const char * filename, int format)
create_short_file	.\libsndfile-1.0.17\tests\write_read_test.c	/^create_short_file (const char *filename)$/;"	f	file:	signature:(const char *filename)
create_short_file	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void	create_short_file (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
cue_MARKER	.\libsndfile-1.0.17\src\wav.c	45;"	d	file:
current	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int			current, bufferlen ;$/;"	m	struct:__anon5	file:	access:public
d	.\libsndfile-1.0.17\tests\fix_this.c	/^{	double	d [BUFFER_SIZE + 1];$/;"	m	union:__anon78	file:	access:public
d	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^{	double d [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
d	.\libsndfile-1.0.17\tests\pcm_test.c	/^{	double	d [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
d	.\libsndfile-1.0.17\tests\write_read_test.c	/^{	double d [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
d2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^d2alaw_array (const double *ptr, int count, unsigned char *buffer, double normfact)$/;"	f	file:	signature:(const double *ptr, int count, unsigned char *buffer, double normfact)
d2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^static void d2alaw_array (const double *buffer, int count, unsigned char *ptr, double normfact) ;$/;"	p	file:	signature:(const double *buffer, int count, unsigned char *ptr, double normfact)
d2bd_read	.\libsndfile-1.0.17\src\double64.c	/^d2bd_read (double *buffer, int count)$/;"	f	file:	signature:(double *buffer, int count)
d2bd_read	.\libsndfile-1.0.17\src\double64.c	/^static	void	d2bd_read (double *buffer, int count) ;$/;"	p	file:	signature:(double *buffer, int count)
d2bei_array	.\libsndfile-1.0.17\src\pcm.c	/^d2bei_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, int *dest, int count, int normalize)
d2bei_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2bei_clip_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, int *dest, int count, int normalize)
d2bes_array	.\libsndfile-1.0.17\src\pcm.c	/^d2bes_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, short *dest, int count, int normalize)
d2bes_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2bes_clip_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, short *dest, int count, int normalize)
d2bet_array	.\libsndfile-1.0.17\src\pcm.c	/^d2bet_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, tribyte *dest, int count, int normalize)
d2bet_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2bet_clip_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, tribyte *dest, int count, int normalize)
d2dles_array	.\libsndfile-1.0.17\src\xi.c	/^d2dles_array (XI_PRIVATE *pxi, const double *src, short *dest, int count, double normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const double *src, short *dest, int count, double normfact)
d2dles_array	.\libsndfile-1.0.17\src\xi.c	/^static void d2dles_array (XI_PRIVATE *pxi, const double *src, short *dest, int count, double normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const double *src, short *dest, int count, double normfact)
d2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^d2dsc_array (XI_PRIVATE *pxi, const double *src, signed char *dest, int count, double normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const double *src, signed char *dest, int count, double normfact)
d2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^static void d2dsc_array (XI_PRIVATE *pxi, const double *src, signed char *dest, int count, double normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const double *src, signed char *dest, int count, double normfact)
d2f_array	.\libsndfile-1.0.17\src\double64.c	/^d2f_array (const double *src, int count, float *dest)$/;"	f	file:	signature:(const double *src, int count, float *dest)
d2f_array	.\libsndfile-1.0.17\src\float32.c	/^d2f_array (const double *src, float *dest, int count)$/;"	f	file:	signature:(const double *src, float *dest, int count)
d2flac16_array	.\libsndfile-1.0.17\src\flac.c	/^d2flac16_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac16_array	.\libsndfile-1.0.17\src\flac.c	/^static void		d2flac16_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac16_clip_array	.\libsndfile-1.0.17\src\flac.c	/^d2flac16_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac16_clip_array	.\libsndfile-1.0.17\src\flac.c	/^static void		d2flac16_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac24_array	.\libsndfile-1.0.17\src\flac.c	/^d2flac24_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac24_array	.\libsndfile-1.0.17\src\flac.c	/^static void		d2flac24_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac24_clip_array	.\libsndfile-1.0.17\src\flac.c	/^d2flac24_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac24_clip_array	.\libsndfile-1.0.17\src\flac.c	/^static void		d2flac24_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac8_array	.\libsndfile-1.0.17\src\flac.c	/^d2flac8_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac8_array	.\libsndfile-1.0.17\src\flac.c	/^static void		d2flac8_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac8_clip_array	.\libsndfile-1.0.17\src\flac.c	/^d2flac8_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2flac8_clip_array	.\libsndfile-1.0.17\src\flac.c	/^static void		d2flac8_clip_array (const double *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const double *src, FLAC__int32 *dest, int count, int normalize)
d2i_array	.\libsndfile-1.0.17\src\double64.c	/^d2i_array (const double *src, int count, int *dest, double scale)$/;"	f	file:	signature:(const double *src, int count, int *dest, double scale)
d2lei_array	.\libsndfile-1.0.17\src\pcm.c	/^d2lei_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, int *dest, int count, int normalize)
d2lei_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2lei_clip_array (const double *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, int *dest, int count, int normalize)
d2les_array	.\libsndfile-1.0.17\src\pcm.c	/^d2les_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, short *dest, int count, int normalize)
d2les_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2les_clip_array (const double *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, short *dest, int count, int normalize)
d2let_array	.\libsndfile-1.0.17\src\pcm.c	/^d2let_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, tribyte *dest, int count, int normalize)
d2let_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2let_clip_array (const double *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, tribyte *dest, int count, int normalize)
d2s_array	.\libsndfile-1.0.17\src\double64.c	/^d2s_array (const double *src, int count, short *dest, double scale)$/;"	f	file:	signature:(const double *src, int count, short *dest, double scale)
d2sc_array	.\libsndfile-1.0.17\src\pcm.c	/^d2sc_array	(const double *src, signed char *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, signed char *dest, int count, int normalize)
d2sc_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2sc_clip_array	(const double *src, signed char *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, signed char *dest, int count, int normalize)
d2uc_array	.\libsndfile-1.0.17\src\pcm.c	/^d2uc_array	(const double *src, unsigned char *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, unsigned char *dest, int count, int normalize)
d2uc_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^d2uc_clip_array	(const double *src, unsigned char *dest, int count, int normalize)$/;"	f	file:	signature:(const double *src, unsigned char *dest, int count, int normalize)
d2ulaw_array	.\libsndfile-1.0.17\src\ulaw.c	/^d2ulaw_array (const double *ptr, int count, unsigned char *buffer, double normfact)$/;"	f	file:	signature:(const double *ptr, int count, unsigned char *buffer, double normfact)
darwin_symbols	.\libsndfile-1.0.17\src\create_symbols_file.py	/^def darwin_symbols (progname, version):$/;"	f	access:public
data	.\libsndfile-1.0.17\examples\sndfile-info.c	/^static double	data [BUFFER_LEN] ;$/;"	v	file:
data	.\libsndfile-1.0.17\regtest\checksum.c	/^} data ;$/;"	v	typeref:union:__anon6	file:
data	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	short			data	[0] ; \/* This is a hack and might not work. *\/$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
data	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	short			data	[] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
data	.\libsndfile-1.0.17\src\paf.c	/^	int				data [1] ; \/* This is a hack and may not work. *\/$/;"	m	struct:__anon47	file:	access:public
data	.\libsndfile-1.0.17\src\paf.c	/^	int				data [] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:__anon47	file:	access:public
data	.\libsndfile-1.0.17\tests\benchmark.c	/^static void	*data = NULL ;$/;"	v	file:
data	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static short data [DATA_LENGTH] ;$/;"	v	file:
data	.\libsndfile-1.0.17\tests\peak_chunk_test.c	/^static	double	data [BUFFER_LEN] ;$/;"	v	file:
data	.\libsndfile-1.0.17\tests\raw_test.c	/^static	short	data [BUFFER_LEN] ;$/;"	v	file:
data	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^	unsigned char data [16 * 1024] ;$/;"	m	struct:__anon84	file:	access:public
data_HASH16	.\libsndfile-1.0.17\src\w64.c	62;"	d	file:
data_MARKER	.\libsndfile-1.0.17\src\caf.c	40;"	d	file:
data_MARKER	.\libsndfile-1.0.17\src\ms_adpcm.c	37;"	d	file:
data_MARKER	.\libsndfile-1.0.17\src\wav.c	41;"	d	file:
data_buffer	.\libsndfile-1.0.17\tests\fix_this.c	/^static	BUFFER	data_buffer ;$/;"	v	file:
data_buffer	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	BUFFER	data_buffer ;$/;"	v	file:
data_in	.\libsndfile-1.0.17\tests\header_test.c	/^static	int	data_in	[BUFFER_LEN] ;$/;"	v	file:
data_in	.\libsndfile-1.0.17\tests\pcm_test.c	/^static	BUFFER	data_in ;$/;"	v	file:
data_length	.\libsndfile-1.0.17\src\sd2.c	/^	int data_offset, data_length ;$/;"	m	struct:__anon51	file:	access:public
data_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int data_offset, data_length ;$/;"	m	struct:__anon51	file:	access:public
data_out	.\libsndfile-1.0.17\tests\dither_test.c	/^static	short	data_out [BUFFER_LEN] ;$/;"	v	file:
data_out	.\libsndfile-1.0.17\tests\header_test.c	/^static	int	data_out [BUFFER_LEN] ;$/;"	v	file:
data_out	.\libsndfile-1.0.17\tests\pcm_test.c	/^static	BUFFER	data_out ;$/;"	v	file:
data_out	.\libsndfile-1.0.17\tests\string_test.c	/^static	short	data_out [BUFFER_LEN] ;$/;"	v	file:
dataend	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		dataend ;		\/* Offset to file tailer. *\/$/;"	m	struct:sf_private_tag	access:public
datalen	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
datalength	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		datalength ;	\/* Length in bytes of the audio data. *\/$/;"	m	struct:sf_private_tag	access:public
dataoffset	.\libsndfile-1.0.17\src\au.c	/^{	int		dataoffset ;$/;"	m	struct:__anon20	file:	access:public
dataoffset	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		dataoffset ;	\/* Offset in number of bytes from beginning of file. *\/$/;"	m	struct:sf_private_tag	access:public
dataremaining	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
datasize	.\libsndfile-1.0.17\src\au.c	/^	int		datasize ;$/;"	m	struct:__anon20	file:	access:public
date	.\libsndfile-1.0.17\tests\string_test.c	/^	date		[]	= "2001\/01\/27" ;$/;"	v	file:
db_add_file	.\libsndfile-1.0.17\regtest\database.c	/^db_add_file (REG_DB * db_handle, const char * filepath)$/;"	f	signature:(REG_DB * db_handle, const char * filepath)
db_add_file	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_add_file (REG_DB * db_handle, const char * filename) ;$/;"	p	signature:(REG_DB * db_handle, const char * filename)
db_check_all	.\libsndfile-1.0.17\regtest\database.c	/^db_check_all (REG_DB * db_handle)$/;"	f	signature:(REG_DB * db_handle)
db_check_all	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_check_all (REG_DB * db_handle) ;$/;"	p	signature:(REG_DB * db_handle)
db_check_file	.\libsndfile-1.0.17\regtest\database.c	/^db_check_file (REG_DB * db_handle, const char * filepath)$/;"	f	signature:(REG_DB * db_handle, const char * filepath)
db_check_file	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_check_file (REG_DB * db_handle, const char * filename) ;$/;"	p	signature:(REG_DB * db_handle, const char * filename)
db_close	.\libsndfile-1.0.17\regtest\database.c	/^db_close (REG_DB * db_handle)$/;"	f	signature:(REG_DB * db_handle)
db_close	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_close (REG_DB * db_handle) ;$/;"	p	signature:(REG_DB * db_handle)
db_create	.\libsndfile-1.0.17\regtest\database.c	/^db_create (const char * db_name)$/;"	f	signature:(const char * db_name)
db_create	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_create (const char * dbname) ;$/;"	p	signature:(const char * dbname)
db_del_entry	.\libsndfile-1.0.17\regtest\database.c	/^db_del_entry (REG_DB * db_handle, const char * entry)$/;"	f	signature:(REG_DB * db_handle, const char * entry)
db_del_entry	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_del_entry (REG_DB * db_handle, const char * entry) ;$/;"	p	signature:(REG_DB * db_handle, const char * entry)
db_file_exists	.\libsndfile-1.0.17\regtest\database.c	/^db_file_exists (REG_DB * db_handle, const char * filename)$/;"	f	signature:(REG_DB * db_handle, const char * filename)
db_file_exists	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_file_exists (REG_DB * db_handle, const char * filename) ;$/;"	p	signature:(REG_DB * db_handle, const char * filename)
db_list_all	.\libsndfile-1.0.17\regtest\database.c	/^db_list_all (REG_DB * db_handle)$/;"	f	signature:(REG_DB * db_handle)
db_list_all	.\libsndfile-1.0.17\regtest\regtest.h	/^int db_list_all (REG_DB * db_handle) ;$/;"	p	signature:(REG_DB * db_handle)
db_open	.\libsndfile-1.0.17\regtest\database.c	/^db_open (const char * db_name)$/;"	f	signature:(const char * db_name)
db_open	.\libsndfile-1.0.17\regtest\regtest.h	/^REG_DB * db_open (const char * db_name) ;$/;"	p	signature:(const char * db_name)
dbl	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^{	double	dbl [BUFFER_SIZE] ;$/;"	m	union:__anon83	file:	access:public
dbl_scale_clip_test_08	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^dbl_scale_clip_test_08 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
dbl_scale_clip_test_08	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	dbl_scale_clip_test_08 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
dbl_scale_clip_test_16	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^dbl_scale_clip_test_16 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
dbl_scale_clip_test_16	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	dbl_scale_clip_test_16 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
dbl_scale_clip_test_24	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^dbl_scale_clip_test_24 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
dbl_scale_clip_test_24	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	dbl_scale_clip_test_24 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
dbl_scale_clip_test_32	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^dbl_scale_clip_test_32 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
dbl_scale_clip_test_32	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	dbl_scale_clip_test_32 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
dbuf	.\libsndfile-1.0.17\src\common.h	/^	{	double			dbuf	[SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
dbuffer	.\libsndfile-1.0.17\tests\cpp_test.cc	/^static double	dbuffer [100] ;$/;"	v	file:
decay_response	.\libsndfile-1.0.17\tests\fix_this.c	/^decay_response (int k)$/;"	f	file:	signature:(int k)
decay_response	.\libsndfile-1.0.17\tests\fix_this.c	/^static	int		decay_response (int k) ;$/;"	p	file:	signature:(int k)
decay_response	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^decay_response (int k)$/;"	f	file:	signature:(int k)
decay_response	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	int		decay_response (int k) ;$/;"	p	file:	signature:(int k)
decode_block	.\libsndfile-1.0.17\src\gsm610.c	/^	int				(*decode_block)	(SF_PRIVATE *psf, struct gsm610_tag *pgsm610) ;$/;"	m	struct:gsm610_tag	file:	access:public
decode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^{	int 			(*decode_block) (SF_PRIVATE *psf, struct IMA_ADPCM_PRIVATE_tag *pima) ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
decode_desc_chunk	.\libsndfile-1.0.17\src\caf.c	/^decode_desc_chunk (SF_PRIVATE *psf, const DESC_CHUNK *desc)$/;"	f	file:	signature:(SF_PRIVATE *psf, const DESC_CHUNK *desc)
decoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		(*decoder) (int, struct g72x_state* state) ;$/;"	m	struct:g72x_state	access:public
delete_file	.\libsndfile-1.0.17\tests\utils.c	/^delete_file (int format, const char *filename)$/;"	f	signature:(int format, const char *filename)
delete_file	.\libsndfile-1.0.17\tests\utils.h	/^void	delete_file (int format, const char *filename) ;$/;"	p	signature:(int format, const char *filename)
desc_MARKER	.\libsndfile-1.0.17\src\caf.c	41;"	d	file:
description	.\sndfile.h	/^{	char			description [256] ;$/;"	m	struct:__anon99	access:public
detune	.\libsndfile-1.0.17\src\aiff.c	/^	char		detune ;		\/* cents off, only -50 to +50 are significant *\/$/;"	m	struct:__anon13	file:	access:public
detune	.\sndfile.h	/^	char basenote, detune ;$/;"	m	struct:__anon96	access:public
device	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	AudioDeviceID 	device ;$/;"	m	struct:__anon4	file:	access:public
dft_cmp	.\libsndfile-1.0.17\tests\dft_cmp.c	/^dft_cmp (int linenum, double *orig, double *test, int len, double target_snr, int allow_exit)$/;"	f	signature:(int linenum, double *orig, double *test, int len, double target_snr, int allow_exit)
dft_cmp	.\libsndfile-1.0.17\tests\dft_cmp.h	/^double	dft_cmp (int linenum, double *orig, double *test, int len, double tolerance, int allow_exit) ;$/;"	p	signature:(int linenum, double *orig, double *test, int len, double tolerance, int allow_exit)
dft_magnitude	.\libsndfile-1.0.17\tests\dft_cmp.c	/^dft_magnitude (const double *data, double *spectrum)$/;"	f	file:	signature:(const double *data, double *spectrum)
dft_magnitude	.\libsndfile-1.0.17\tests\dft_cmp.c	/^static void	dft_magnitude (const double *data, double *spectrum) ;$/;"	p	file:	signature:(const double *data, double *spectrum)
dir_cmd	.\libsndfile-1.0.17\tests\win32_test.c	/^	static char dir_cmd [] = "dir" ;$/;"	v	file:
dir_cmd	.\libsndfile-1.0.17\tests\win32_test.c	/^	static char dir_cmd [] = "ls -l" ;$/;"	v	file:
directory	.\libsndfile-1.0.17\src\common.h	/^	char			directory	[SF_FILENAME_LEN] ;$/;"	m	struct:sf_private_tag	access:public
dither	.\libsndfile-1.0.17\src\common.h	/^	void			*dither ;$/;"	m	struct:sf_private_tag	access:public
dither_double	.\libsndfile-1.0.17\src\dither.c	/^dither_double (const double *in, double *out, int frames, int channels)$/;"	f	file:	signature:(const double *in, double *out, int frames, int channels)
dither_double	.\libsndfile-1.0.17\src\dither.c	/^static void dither_double	(const double *in, double *out, int frames, int channels) ;$/;"	p	file:	signature:(const double *in, double *out, int frames, int channels)
dither_float	.\libsndfile-1.0.17\src\dither.c	/^dither_float (const float *in, float *out, int frames, int channels)$/;"	f	file:	signature:(const float *in, float *out, int frames, int channels)
dither_float	.\libsndfile-1.0.17\src\dither.c	/^static void dither_float	(const float *in, float *out, int frames, int channels) ;$/;"	p	file:	signature:(const float *in, float *out, int frames, int channels)
dither_init	.\libsndfile-1.0.17\src\common.h	/^int 	dither_init		(SF_PRIVATE *psf, int mode) ;$/;"	p	signature:(SF_PRIVATE *psf, int mode)
dither_init	.\libsndfile-1.0.17\src\dither.c	/^dither_init (SF_PRIVATE *psf, int mode)$/;"	f	signature:(SF_PRIVATE *psf, int mode)
dither_int	.\libsndfile-1.0.17\src\dither.c	/^dither_int (const int *in, int *out, int frames, int channels)$/;"	f	file:	signature:(const int *in, int *out, int frames, int channels)
dither_int	.\libsndfile-1.0.17\src\dither.c	/^static void dither_int		(const int *in, int *out, int frames, int channels) ;$/;"	p	file:	signature:(const int *in, int *out, int frames, int channels)
dither_read_int	.\libsndfile-1.0.17\src\dither.c	/^dither_read_int (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dither_read_int	.\libsndfile-1.0.17\src\dither.c	/^static sf_count_t dither_read_int		(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dither_read_short	.\libsndfile-1.0.17\src\dither.c	/^dither_read_short (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dither_read_short	.\libsndfile-1.0.17\src\dither.c	/^static sf_count_t dither_read_short		(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dither_short	.\libsndfile-1.0.17\src\dither.c	/^dither_short (const short *in, short *out, int frames, int channels)$/;"	f	file:	signature:(const short *in, short *out, int frames, int channels)
dither_short	.\libsndfile-1.0.17\src\dither.c	/^static void dither_short	(const short *in, short *out, int frames, int channels) ;$/;"	p	file:	signature:(const short *in, short *out, int frames, int channels)
dither_test	.\libsndfile-1.0.17\tests\dither_test.c	/^dither_test (const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
dither_test	.\libsndfile-1.0.17\tests\dither_test.c	/^static void	dither_test (const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
dither_write_double	.\libsndfile-1.0.17\src\dither.c	/^dither_write_double	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dither_write_double	.\libsndfile-1.0.17\src\dither.c	/^static sf_count_t dither_write_double	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dither_write_float	.\libsndfile-1.0.17\src\dither.c	/^dither_write_float	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dither_write_float	.\libsndfile-1.0.17\src\dither.c	/^static sf_count_t dither_write_float	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dither_write_int	.\libsndfile-1.0.17\src\dither.c	/^dither_write_int	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dither_write_int	.\libsndfile-1.0.17\src\dither.c	/^static sf_count_t dither_write_int		(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dither_write_short	.\libsndfile-1.0.17\src\dither.c	/^dither_write_short	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
dither_write_short	.\libsndfile-1.0.17\src\dither.c	/^static sf_count_t dither_write_short	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
dles2d_array	.\libsndfile-1.0.17\src\xi.c	/^dles2d_array (XI_PRIVATE *pxi, short *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, short *src, int count, double *dest, double normfact)
dles2d_array	.\libsndfile-1.0.17\src\xi.c	/^static void dles2d_array (XI_PRIVATE *pxi, short *src, int count, double *dest, double normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, short *src, int count, double *dest, double normfact)
dles2f_array	.\libsndfile-1.0.17\src\xi.c	/^dles2f_array (XI_PRIVATE *pxi, short *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, short *src, int count, float *dest, float normfact)
dles2f_array	.\libsndfile-1.0.17\src\xi.c	/^static void dles2f_array (XI_PRIVATE *pxi, short *src, int count, float *dest, float normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, short *src, int count, float *dest, float normfact)
dles2i_array	.\libsndfile-1.0.17\src\xi.c	/^dles2i_array (XI_PRIVATE *pxi, short *src, int count, int *dest)$/;"	f	file:	signature:(XI_PRIVATE *pxi, short *src, int count, int *dest)
dles2i_array	.\libsndfile-1.0.17\src\xi.c	/^static void dles2i_array (XI_PRIVATE *pxi, short *src, int count, int *dest) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, short *src, int count, int *dest)
dles2s_array	.\libsndfile-1.0.17\src\xi.c	/^dles2s_array (XI_PRIVATE *pxi, short *src, int count, short *dest)$/;"	f	file:	signature:(XI_PRIVATE *pxi, short *src, int count, short *dest)
dles2s_array	.\libsndfile-1.0.17\src\xi.c	/^static void dles2s_array (XI_PRIVATE *pxi, short *src, int count, short *dest) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, short *src, int count, short *dest)
dml	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short dml;	\/* Long term energy estimate. *\/$/;"	m	struct:g72x_state	access:public
dms	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short dms;	\/* Short term energy estimate. *\/$/;"	m	struct:g72x_state	access:public
do_not_close_descriptor	.\libsndfile-1.0.17\src\common.h	/^	int				do_not_close_descriptor ;$/;"	m	struct:sf_private_tag	access:public
done_playing	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int				done_playing ;$/;"	m	struct:__anon4	file:	access:public
double2int	.\libsndfile-1.0.17\src\float_cast.h	/^	double2int (register double in)$/;"	f	signature:(register double in)
double2int	.\libsndfile-1.0.17\src\float_cast.h	/^	static inline long double2int (double in)$/;"	f	signature:(double in)
double64_be_read	.\libsndfile-1.0.17\src\common.h	/^double	double64_be_read	(unsigned char *cptr) ;$/;"	p	signature:(unsigned char *cptr)
double64_be_read	.\libsndfile-1.0.17\src\double64.c	/^double64_be_read (unsigned char *cptr)$/;"	f	signature:(unsigned char *cptr)
double64_be_write	.\libsndfile-1.0.17\src\common.h	/^void	double64_be_write	(double in, unsigned char *out) ;$/;"	p	signature:(double in, unsigned char *out)
double64_be_write	.\libsndfile-1.0.17\src\double64.c	/^double64_be_write (double in, unsigned char *out)$/;"	f	signature:(double in, unsigned char *out)
double64_get_capability	.\libsndfile-1.0.17\src\double64.c	/^double64_get_capability	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
double64_get_capability	.\libsndfile-1.0.17\src\double64.c	/^static int		double64_get_capability	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
double64_init	.\libsndfile-1.0.17\src\common.h	/^int		double64_init	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
double64_init	.\libsndfile-1.0.17\src\double64.c	/^double64_init	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
double64_le_read	.\libsndfile-1.0.17\src\common.h	/^double	double64_le_read	(unsigned char *cptr) ;$/;"	p	signature:(unsigned char *cptr)
double64_le_read	.\libsndfile-1.0.17\src\double64.c	/^double64_le_read (unsigned char *cptr)$/;"	f	signature:(unsigned char *cptr)
double64_le_write	.\libsndfile-1.0.17\src\common.h	/^void	double64_le_write	(double in, unsigned char *out) ;$/;"	p	signature:(double in, unsigned char *out)
double64_le_write	.\libsndfile-1.0.17\src\double64.c	/^double64_le_write (double in, unsigned char *out)$/;"	f	signature:(double in, unsigned char *out)
double64_peak_update	.\libsndfile-1.0.17\src\double64.c	/^double64_peak_update	(SF_PRIVATE *psf, const double *buffer, int count, sf_count_t indx)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *buffer, int count, sf_count_t indx)
double64_peak_update	.\libsndfile-1.0.17\src\double64.c	/^static void		double64_peak_update	(SF_PRIVATE *psf, const double *buffer, int count, sf_count_t indx) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *buffer, int count, sf_count_t indx)
double_data	.\libsndfile-1.0.17\tests\command_test.c	/^static	double	double_data	[BUFFER_LEN] ;$/;"	v	file:
double_data	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static	double	double_data [DFT_DATA_LENGTH] ;$/;"	v	file:
double_data	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static double	double_data [DFT_DATA_LENGTH] ;$/;"	v	file:
double_int_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^double_int_big_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
double_int_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void double_int_big_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
double_int_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^double_int_little_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
double_int_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void double_int_little_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
double_norm_test	.\libsndfile-1.0.17\tests\command_test.c	/^double_norm_test (const char *filename)$/;"	f	file:	signature:(const char *filename)
double_norm_test	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	double_norm_test	(const char *filename) ;$/;"	p	file:	signature:(const char *filename)
double_scaled_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^double_scaled_test (const char *filename, int allow_exit, int replace_float, int filetype, double target_snr)$/;"	f	file:	signature:(const char *filename, int allow_exit, int replace_float, int filetype, double target_snr)
double_scaled_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void	double_scaled_test	(const char *filename, int allow_exit, int replace_float, int filetype, double target_snr) ;$/;"	p	file:	signature:(const char *filename, int allow_exit, int replace_float, int filetype, double target_snr)
double_short_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^double_short_big_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
double_short_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void double_short_big_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
double_short_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^double_short_little_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
double_short_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void double_short_little_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
dp0	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^{	word			dp0[ 280 ] ;$/;"	m	struct:gsm_state	access:public
dpcm_init	.\libsndfile-1.0.17\src\xi.c	/^dpcm_init (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
dpcm_init	.\libsndfile-1.0.17\src\xi.c	/^static int	dpcm_init 		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
dpcm_read_dles2d	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dles2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
dpcm_read_dles2d	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dles2d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
dpcm_read_dles2f	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dles2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
dpcm_read_dles2f	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dles2f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
dpcm_read_dles2i	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dles2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dpcm_read_dles2i	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dles2i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dpcm_read_dles2s	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dles2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dpcm_read_dles2s	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dles2s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dpcm_read_dsc2d	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dsc2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
dpcm_read_dsc2d	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dsc2d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
dpcm_read_dsc2f	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dsc2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
dpcm_read_dsc2f	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dsc2f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
dpcm_read_dsc2i	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dsc2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dpcm_read_dsc2i	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dsc2i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dpcm_read_dsc2s	.\libsndfile-1.0.17\src\xi.c	/^dpcm_read_dsc2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dpcm_read_dsc2s	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_read_dsc2s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dpcm_seek	.\libsndfile-1.0.17\src\xi.c	/^dpcm_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
dpcm_seek	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t	dpcm_seek (SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
dpcm_write_d2dles	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_d2dles (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dpcm_write_d2dles	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_d2dles (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dpcm_write_d2dsc	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_d2dsc (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dpcm_write_d2dsc	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_d2dsc (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dpcm_write_f2dles	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_f2dles (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dpcm_write_f2dles	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_f2dles (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dpcm_write_f2dsc	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_f2dsc (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dpcm_write_f2dsc	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_f2dsc (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dpcm_write_i2dles	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_i2dles (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dpcm_write_i2dles	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_i2dles (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dpcm_write_i2dsc	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_i2dsc (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dpcm_write_i2dsc	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_i2dsc (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dpcm_write_s2dles	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_s2dles (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
dpcm_write_s2dles	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_s2dles (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
dpcm_write_s2dsc	.\libsndfile-1.0.17\src\xi.c	/^dpcm_write_s2dsc (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
dpcm_write_s2dsc	.\libsndfile-1.0.17\src\xi.c	/^static sf_count_t dpcm_write_s2dsc (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
dq	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short dq[6];	\/*$/;"	m	struct:g72x_state	access:public
dsc2d_array	.\libsndfile-1.0.17\src\xi.c	/^dsc2d_array (XI_PRIVATE *pxi, signed char *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, double *dest, double normfact)
dsc2d_array	.\libsndfile-1.0.17\src\xi.c	/^static void dsc2d_array (XI_PRIVATE *pxi, signed char *src, int count, double *dest, double normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, double *dest, double normfact)
dsc2f_array	.\libsndfile-1.0.17\src\xi.c	/^dsc2f_array (XI_PRIVATE *pxi, signed char *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, float *dest, float normfact)
dsc2f_array	.\libsndfile-1.0.17\src\xi.c	/^static void dsc2f_array (XI_PRIVATE *pxi, signed char *src, int count, float *dest, float normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, float *dest, float normfact)
dsc2i_array	.\libsndfile-1.0.17\src\xi.c	/^dsc2i_array (XI_PRIVATE *pxi, signed char *src, int count, int *dest)$/;"	f	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, int *dest)
dsc2i_array	.\libsndfile-1.0.17\src\xi.c	/^static void dsc2i_array (XI_PRIVATE *pxi, signed char *src, int count, int *dest) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, int *dest)
dsc2s_array	.\libsndfile-1.0.17\src\xi.c	/^dsc2s_array (XI_PRIVATE *pxi, signed char *src, int count, short *dest)$/;"	f	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, short *dest)
dsc2s_array	.\libsndfile-1.0.17\src\xi.c	/^static void dsc2s_array (XI_PRIVATE *pxi, signed char *src, int count, short *dest) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, signed char *src, int count, short *dest)
dummy	.\libsndfile-1.0.17\regtest\database.c	/^dummy (void)$/;"	f	signature:(void)
dummy	.\libsndfile-1.0.17\regtest\database.c	/^int dummy (void) ;$/;"	p	file:	signature:(void)
dummy	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	dummy ;$/;"	m	struct:__anon66	access:public
dummydata	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	short			dummydata [0] ; \/* This is a hack an might not work. *\/$/;"	m	struct:__anon45	file:	access:public
dummydata	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	short			dummydata [] ; \/* ISO C99 struct flexible array. *\/$/;"	m	struct:__anon45	file:	access:public
dump_data_to_file	.\libsndfile-1.0.17\tests\utils.c	/^dump_data_to_file (const char *filename, void *data, unsigned int datalen)$/;"	f	signature:(const char *filename, void *data, unsigned int datalen)
dump_data_to_file	.\libsndfile-1.0.17\tests\utils.h	/^void	dump_data_to_file (const char *filename, void *data, unsigned int datalen) ;$/;"	p	signature:(const char *filename, void *data, unsigned int datalen)
dump_int64_t_array	.\libsndfile-1.0.17\src\test_endswap.c	/^dump_int64_t_array (const char * name, int64_t * data, int datalen)$/;"	f	file:	signature:(const char * name, int64_t * data, int datalen)
dump_int_array	.\libsndfile-1.0.17\src\test_endswap.c	/^dump_int_array (const char * name, int * data, int datalen)$/;"	f	file:	signature:(const char * name, int * data, int datalen)
dump_log_buffer	.\libsndfile-1.0.17\tests\utils.c	/^dump_log_buffer (SNDFILE *file)$/;"	f	signature:(SNDFILE *file)
dump_log_buffer	.\libsndfile-1.0.17\tests\utils.h	/^void 	dump_log_buffer (SNDFILE *file) ;$/;"	p	signature:(SNDFILE *file)
dump_short_array	.\libsndfile-1.0.17\src\test_endswap.c	/^dump_short_array (const char * name, short * data, int datalen)$/;"	f	file:	signature:(const char * name, short * data, int datalen)
dwd_close	.\libsndfile-1.0.17\src\dwd.c	/^dwd_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
dwd_close	.\libsndfile-1.0.17\src\dwd.c	/^static int	dwd_close		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
dwd_open	.\libsndfile-1.0.17\src\common.h	/^int		dwd_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
dwd_open	.\libsndfile-1.0.17\src\dwd.c	/^dwd_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
dwd_open	.\libsndfile-1.0.17\src\dwd.c	/^dwd_open (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
dwd_read_header	.\libsndfile-1.0.17\src\dwd.c	/^dwd_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
dwd_read_header	.\libsndfile-1.0.17\src\dwd.c	/^static int	dwd_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
dwm_maxsize	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
dwvw_close	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
dwvw_close	.\libsndfile-1.0.17\src\dwvw.c	/^static int	dwvw_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
dwvw_decode_data	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_decode_data (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int *ptr, int len)
dwvw_decode_data	.\libsndfile-1.0.17\src\dwvw.c	/^static int	dwvw_decode_data (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int *ptr, int len)
dwvw_decode_load_bits	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_decode_load_bits (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int bit_count)$/;"	f	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int bit_count)
dwvw_decode_load_bits	.\libsndfile-1.0.17\src\dwvw.c	/^static int	dwvw_decode_load_bits (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int bit_count) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int bit_count)
dwvw_encode_data	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_encode_data (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, const int *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, const int *ptr, int len)
dwvw_encode_data	.\libsndfile-1.0.17\src\dwvw.c	/^static int	dwvw_encode_data (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, const int *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, const int *ptr, int len)
dwvw_encode_store_bits	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_encode_store_bits (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int data, int new_bits)$/;"	f	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int data, int new_bits)
dwvw_encode_store_bits	.\libsndfile-1.0.17\src\dwvw.c	/^static void dwvw_encode_store_bits (SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int data, int new_bits) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, DWVW_PRIVATE *pdwvw, int data, int new_bits)
dwvw_init	.\libsndfile-1.0.17\src\common.h	/^int		dwvw_init		(SF_PRIVATE *psf, int bitwidth) ;$/;"	p	signature:(SF_PRIVATE *psf, int bitwidth)
dwvw_init	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_init (SF_PRIVATE *psf, int bitwidth)$/;"	f	signature:(SF_PRIVATE *psf, int bitwidth)
dwvw_read_d	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
dwvw_read_d	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
dwvw_read_f	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
dwvw_read_f	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
dwvw_read_i	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dwvw_read_i	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
dwvw_read_reset	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_read_reset (DWVW_PRIVATE *pdwvw)$/;"	f	file:	signature:(DWVW_PRIVATE *pdwvw)
dwvw_read_reset	.\libsndfile-1.0.17\src\dwvw.c	/^static void dwvw_read_reset (DWVW_PRIVATE *pdwvw) ;$/;"	p	file:	signature:(DWVW_PRIVATE *pdwvw)
dwvw_read_s	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dwvw_read_s	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
dwvw_seek	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
dwvw_seek	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t	dwvw_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
dwvw_test	.\libsndfile-1.0.17\tests\dwvw_test.c	/^dwvw_test (const char *filename, int format, int bit_width)$/;"	f	file:	signature:(const char *filename, int format, int bit_width)
dwvw_test	.\libsndfile-1.0.17\tests\dwvw_test.c	/^static	void	dwvw_test (const char *filename, int format, int bit_width) ;$/;"	p	file:	signature:(const char *filename, int format, int bit_width)
dwvw_write_d	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dwvw_write_d	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
dwvw_write_f	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dwvw_write_f	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
dwvw_write_i	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dwvw_write_i	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
dwvw_write_s	.\libsndfile-1.0.17\src\dwvw.c	/^dwvw_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
dwvw_write_s	.\libsndfile-1.0.17\src\dwvw.c	/^static sf_count_t dwvw_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
e	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word e[50] ;$/;"	m	struct:gsm_state	access:public
edct_MARKER	.\libsndfile-1.0.17\src\caf.c	42;"	d	file:
edit_number	.\libsndfile-1.0.17\src\common.h	/^	unsigned int	edit_number ;$/;"	m	struct:__anon26	access:public
ekey_max	.\libsndfile-1.0.17\regtest\database.c	/^	int ekey_max ;$/;"	m	struct:__anon7	file:	access:public
ekey_max_callback	.\libsndfile-1.0.17\regtest\database.c	/^ekey_max_callback (REGTEST_DB * db, int argc, char **argv, char **unused)$/;"	f	file:	signature:(REGTEST_DB * db, int argc, char **argv, char **unused)
ekey_max_callback	.\libsndfile-1.0.17\regtest\database.c	/^static int ekey_max_callback (REGTEST_DB * db, int argc, char **argv, char **colname) ;$/;"	p	file:	signature:(REGTEST_DB * db, int argc, char **argv, char **colname)
elmo_MARKER	.\libsndfile-1.0.17\src\wav.c	65;"	d	file:
empty_file_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^empty_file_test (const char *filename, int format)$/;"	f	file:	signature:(const char *filename, int format)
empty_file_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void empty_file_test (const char *filename, int format) ;$/;"	p	file:	signature:(const char *filename, int format)
encbuffer	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__int32* encbuffer ;$/;"	m	struct:__anon37	file:	access:public
encode_block	.\libsndfile-1.0.17\src\gsm610.c	/^	int				(*encode_block)	(SF_PRIVATE *psf, struct gsm610_tag *pgsm610) ;$/;"	m	struct:gsm610_tag	file:	access:public
encode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int 			(*encode_block) (SF_PRIVATE *psf, struct IMA_ADPCM_PRIVATE_tag *pima) ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
encode_file	.\libsndfile-1.0.17\examples\generate.c	/^encode_file (const char *infilename, const char *outfilename, int filetype)$/;"	f	file:	signature:(const char *infilename, const char *outfilename, int filetype)
encode_file	.\libsndfile-1.0.17\examples\generate.c	/^static void encode_file (const char *infilename, const char *outfilename, int filetype) ;$/;"	p	file:	signature:(const char *infilename, const char *outfilename, int filetype)
encoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		(*encoder) (int, struct g72x_state* state) ;$/;"	m	struct:g72x_state	access:public
encoding	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	encoding ;$/;"	m	struct:__anon10	file:	access:public
encoding	.\libsndfile-1.0.17\src\au.c	/^	int		encoding ;$/;"	m	struct:__anon20	file:	access:public
end	.\libsndfile-1.0.17\src\dwvw.c	/^	{	int				index, end ;$/;"	m	struct:__anon34::__anon35	file:	access:public
end	.\sndfile.h	/^		unsigned int end ;$/;"	m	struct:__anon96::__anon97	access:public
endLoop	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	endLoop ;$/;"	m	struct:__anon12	file:	access:public
endian	.\libsndfile-1.0.17\src\common.h	/^	int				endian ;		\/* File endianness : SF_ENDIAN_LITTLE or SF_ENDIAN_BIG. *\/$/;"	m	struct:sf_private_tag	access:public
endianness	.\libsndfile-1.0.17\src\paf.c	/^	int	endianness ;$/;"	m	struct:__anon46	file:	access:public
endswap_double_array	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_double_array (double *ptr, int len)$/;"	f	signature:(double *ptr, int len)
endswap_double_copy	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_double_copy (double *dest, const double *src, int len)$/;"	f	signature:(double *dest, const double *src, int len)
endswap_float_array	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_float_array (float *ptr, int len)$/;"	f	signature:(float *ptr, int len)
endswap_float_copy	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_float_copy (float *dest, const float *src, int len)$/;"	f	signature:(float *dest, const float *src, int len)
endswap_int64_t_array	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_int64_t_array (int64_t *ptr, int len)$/;"	f	signature:(int64_t *ptr, int len)
endswap_int64_t_copy	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_int64_t_copy (int64_t *dest, const int64_t *src, int len)$/;"	f	signature:(int64_t *dest, const int64_t *src, int len)
endswap_int_array	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_int_array (int *ptr, int len)$/;"	f	signature:(int *ptr, int len)
endswap_int_copy	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_int_copy (int *dest, const int *src, int len)$/;"	f	signature:(int *dest, const int *src, int len)
endswap_short_array	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_short_array (short *ptr, int len)$/;"	f	signature:(short *ptr, int len)
endswap_short_copy	.\libsndfile-1.0.17\src\sfendian.h	/^endswap_short_copy (short *dest, const short *src, int len)$/;"	f	signature:(short *dest, const short *src, int len)
error	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="error"><\/A>$/;"	a
error	.\libsndfile-1.0.17\src\common.h	/^	int				error ;$/;"	m	struct:sf_private_tag	access:public
error	.\libsndfile-1.0.17\src\sndfile.c	/^{	int 		error ;$/;"	m	struct:__anon53	file:	access:public
error	.\libsndfile-1.0.17\src\sndfile.hh	/^		int error (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
error	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::error (void) const$/;"	f	class:SndfileHandle	signature:(void) const
error	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="error"><\/A>$/;"	a
error	.\sndfile.hh	/^		int error (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
error	.\sndfile.hh	/^SndfileHandle::error (void) const$/;"	f	class:SndfileHandle	signature:(void) const
error_function	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^error_function (double data, double orig, double margin)$/;"	f	file:	signature:(double data, double orig, double margin)
error_function	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^static int error_function (double data, double orig, double margin) ;$/;"	p	file:	signature:(double data, double orig, double margin)
error_function	.\libsndfile-1.0.17\tests\fix_this.c	/^error_function (double data, double orig, double margin)$/;"	f	file:	signature:(double data, double orig, double margin)
error_function	.\libsndfile-1.0.17\tests\fix_this.c	/^static	int		error_function (double data, double orig, double margin) ;$/;"	p	file:	signature:(double data, double orig, double margin)
error_function	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^error_function (double data, double orig, double margin)$/;"	f	file:	signature:(double data, double orig, double margin)
error_function	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	int		error_function (double data, double orig, double margin) ;$/;"	p	file:	signature:(double data, double orig, double margin)
error_number_test	.\libsndfile-1.0.17\tests\error_test.c	/^error_number_test (void)$/;"	f	file:	signature:(void)
error_number_test	.\libsndfile-1.0.17\tests\error_test.c	/^static void error_number_test (void) ;$/;"	p	file:	signature:(void)
error_value_test	.\libsndfile-1.0.17\tests\error_test.c	/^error_value_test (void)$/;"	f	file:	signature:(void)
error_value_test	.\libsndfile-1.0.17\tests\error_test.c	/^static void error_value_test (void) ;$/;"	p	file:	signature:(void)
esf	.\libsndfile-1.0.17\src\wav_w64.h	/^	EXT_SUBFORMAT	esf ;$/;"	m	struct:__anon73	access:public
esf_field1	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned int	esf_field1 ;$/;"	m	struct:__anon72	access:public
esf_field2	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	esf_field2 ;$/;"	m	struct:__anon72	access:public
esf_field3	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	esf_field3 ;$/;"	m	struct:__anon72	access:public
esf_field4	.\libsndfile-1.0.17\src\wav_w64.h	/^	char			esf_field4 [8] ;$/;"	m	struct:__anon72	access:public
exit_if_true	.\libsndfile-1.0.17\tests\utils.h	/^exit_if_true (int test, const char *format, ...)$/;"	f	signature:(int test, const char *format, ...)
ext	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^{	const char	*ext ;$/;"	m	struct:__anon3	file:	access:public
ext	.\libsndfile-1.0.17\src\avr.c	/^	char	ext [20] ;	\/* Additional filename space, used if (name[7] != 0) *\/$/;"	m	struct:__anon21	file:	access:public
ext	.\libsndfile-1.0.17\src\wav_w64.h	/^	EXTENSIBLE_WAV_FMT	ext ;$/;"	m	union:__anon74	access:public
ext	.\libsndfile-1.0.17\tests\pipe_test.c	/^	const char	*ext ;$/;"	m	struct:__anon82	file:	access:public
extension	.\sndfile.h	/^	const char	*extension ;$/;"	m	struct:__anon91	access:public
extra_header_test	.\libsndfile-1.0.17\tests\header_test.c	/^extra_header_test (const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
extra_header_test	.\libsndfile-1.0.17\tests\header_test.c	/^static void extra_header_test (const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon66	access:public
extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon67	access:public
extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon69	access:public
extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon70	access:public
extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon71	access:public
extrabytes	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	extrabytes ;$/;"	m	struct:__anon73	access:public
f	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^	float f [BUFFER_LEN] ;$/;"	m	union:__anon1	file:	access:public
f	.\libsndfile-1.0.17\regtest\checksum.c	/^	float	f [1 << 15] ;$/;"	m	union:__anon6	file:	access:public
f	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	float f [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
f	.\libsndfile-1.0.17\tests\pcm_test.c	/^	float	f [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
f	.\libsndfile-1.0.17\tests\write_read_test.c	/^	float f [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
f2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^f2alaw_array (const float *ptr, int count, unsigned char *buffer, float normfact)$/;"	f	file:	signature:(const float *ptr, int count, unsigned char *buffer, float normfact)
f2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^static void f2alaw_array (const float *buffer, int count, unsigned char *ptr, float normfact) ;$/;"	p	file:	signature:(const float *buffer, int count, unsigned char *ptr, float normfact)
f2bei_array	.\libsndfile-1.0.17\src\pcm.c	/^f2bei_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, int *dest, int count, int normalize)
f2bei_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2bei_clip_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, int *dest, int count, int normalize)
f2bes_array	.\libsndfile-1.0.17\src\pcm.c	/^f2bes_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, short *dest, int count, int normalize)
f2bes_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2bes_clip_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, short *dest, int count, int normalize)
f2bet_array	.\libsndfile-1.0.17\src\pcm.c	/^f2bet_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, tribyte *dest, int count, int normalize)
f2bet_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2bet_clip_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, tribyte *dest, int count, int normalize)
f2bf_array	.\libsndfile-1.0.17\src\float32.c	/^f2bf_array (float *buffer, int count)$/;"	f	file:	signature:(float *buffer, int count)
f2bf_array	.\libsndfile-1.0.17\src\float32.c	/^static	void	f2bf_array (float *buffer, int count) ;$/;"	p	file:	signature:(float *buffer, int count)
f2d_array	.\libsndfile-1.0.17\src\double64.c	/^f2d_array (const float *src, double *dest, int count)$/;"	f	file:	signature:(const float *src, double *dest, int count)
f2d_array	.\libsndfile-1.0.17\src\float32.c	/^f2d_array (const float *src, int count, double *dest)$/;"	f	file:	signature:(const float *src, int count, double *dest)
f2dles_array	.\libsndfile-1.0.17\src\xi.c	/^f2dles_array (XI_PRIVATE *pxi, const float *src, short *dest, int count, float normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const float *src, short *dest, int count, float normfact)
f2dles_array	.\libsndfile-1.0.17\src\xi.c	/^static void f2dles_array (XI_PRIVATE *pxi, const float *src, short *dest, int count, float normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const float *src, short *dest, int count, float normfact)
f2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^f2dsc_array (XI_PRIVATE *pxi, const float *src, signed char *dest, int count, float normfact)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const float *src, signed char *dest, int count, float normfact)
f2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^static void f2dsc_array (XI_PRIVATE *pxi, const float *src, signed char *dest, int count, float normfact) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const float *src, signed char *dest, int count, float normfact)
f2flac16_array	.\libsndfile-1.0.17\src\flac.c	/^f2flac16_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac16_array	.\libsndfile-1.0.17\src\flac.c	/^static void		f2flac16_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac16_clip_array	.\libsndfile-1.0.17\src\flac.c	/^f2flac16_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac16_clip_array	.\libsndfile-1.0.17\src\flac.c	/^static void		f2flac16_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac24_array	.\libsndfile-1.0.17\src\flac.c	/^f2flac24_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac24_array	.\libsndfile-1.0.17\src\flac.c	/^static void		f2flac24_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac24_clip_array	.\libsndfile-1.0.17\src\flac.c	/^f2flac24_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac24_clip_array	.\libsndfile-1.0.17\src\flac.c	/^static void		f2flac24_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac8_array	.\libsndfile-1.0.17\src\flac.c	/^f2flac8_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac8_array	.\libsndfile-1.0.17\src\flac.c	/^static void		f2flac8_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac8_clip_array	.\libsndfile-1.0.17\src\flac.c	/^f2flac8_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2flac8_clip_array	.\libsndfile-1.0.17\src\flac.c	/^static void		f2flac8_clip_array (const float *src, FLAC__int32 *dest, int count, int normalize) ;$/;"	p	file:	signature:(const float *src, FLAC__int32 *dest, int count, int normalize)
f2i_array	.\libsndfile-1.0.17\src\float32.c	/^f2i_array (const float *src, int count, int *dest, float scale)$/;"	f	file:	signature:(const float *src, int count, int *dest, float scale)
f2lei_array	.\libsndfile-1.0.17\src\pcm.c	/^f2lei_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, int *dest, int count, int normalize)
f2lei_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2lei_clip_array (const float *src, int *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, int *dest, int count, int normalize)
f2les_array	.\libsndfile-1.0.17\src\pcm.c	/^f2les_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, short *dest, int count, int normalize)
f2les_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2les_clip_array (const float *src, short *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, short *dest, int count, int normalize)
f2let_array	.\libsndfile-1.0.17\src\pcm.c	/^f2let_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, tribyte *dest, int count, int normalize)
f2let_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2let_clip_array (const float *src, tribyte *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, tribyte *dest, int count, int normalize)
f2s_array	.\libsndfile-1.0.17\src\float32.c	/^f2s_array (const float *src, int count, short *dest, float scale)$/;"	f	file:	signature:(const float *src, int count, short *dest, float scale)
f2sc_array	.\libsndfile-1.0.17\src\pcm.c	/^f2sc_array (const float *src, signed char *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, signed char *dest, int count, int normalize)
f2sc_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2sc_clip_array (const float *src, signed char *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, signed char *dest, int count, int normalize)
f2uc_array	.\libsndfile-1.0.17\src\pcm.c	/^f2uc_array	(const float *src, unsigned char *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, unsigned char *dest, int count, int normalize)
f2uc_clip_array	.\libsndfile-1.0.17\src\pcm.c	/^f2uc_clip_array	(const float *src, unsigned char *dest, int count, int normalize)$/;"	f	file:	signature:(const float *src, unsigned char *dest, int count, int normalize)
f2ulaw_array	.\libsndfile-1.0.17\src\ulaw.c	/^f2ulaw_array (const float *ptr, int count, unsigned char *buffer, float normfact)$/;"	f	file:	signature:(const float *ptr, int count, unsigned char *buffer, float normfact)
fact_HASH16	.\libsndfile-1.0.17\src\w64.c	59;"	d	file:
fact_MARKER	.\libsndfile-1.0.17\src\ms_adpcm.c	36;"	d	file:
fact_MARKER	.\libsndfile-1.0.17\src\wav.c	42;"	d	file:
fake_stereo	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	int				fake_stereo ;$/;"	m	struct:__anon4	file:	access:public
fast	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	char			fast;			\/* only used if FAST		*\/$/;"	m	struct:gsm_state	access:public
fbuf	.\libsndfile-1.0.17\src\common.h	/^		float			fbuf	[SF_BUFFER_LEN \/ sizeof (float)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
fbuffer	.\libsndfile-1.0.17\tests\cpp_test.cc	/^static float	fbuffer [100] ;$/;"	v	file:
file_exists	.\libsndfile-1.0.17\tests\pipe_test.c	/^file_exists (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_exists	.\libsndfile-1.0.17\tests\pipe_test.c	/^static int		file_exists (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
file_exists	.\libsndfile-1.0.17\tests\stdio_test.c	/^file_exists (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_exists	.\libsndfile-1.0.17\tests\stdio_test.c	/^static int		file_exists (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
file_length	.\libsndfile-1.0.17\tests\stdio_test.c	/^file_length (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_length	.\libsndfile-1.0.17\tests\stdio_test.c	/^static size_t	file_length (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
file_open_test	.\libsndfile-1.0.17\src\test_file_io.c	/^file_open_test (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_open_test	.\libsndfile-1.0.17\src\test_file_io.c	/^static void file_open_test (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
file_read_write_test	.\libsndfile-1.0.17\src\test_file_io.c	/^file_read_write_test (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_read_write_test	.\libsndfile-1.0.17\src\test_file_io.c	/^static void file_read_write_test (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
file_size	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^file_size (char *filename)$/;"	f	file:	signature:(char *filename)
file_size	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^static off_t file_size (char *filename) ;$/;"	p	file:	signature:(char *filename)
file_truncate_test	.\libsndfile-1.0.17\src\test_file_io.c	/^file_truncate_test (const char *filename)$/;"	f	file:	signature:(const char *filename)
file_truncate_test	.\libsndfile-1.0.17\src\test_file_io.c	/^static void file_truncate_test (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
filedes	.\libsndfile-1.0.17\src\common.h	/^	int 			filedes, rsrcdes, savedes ;$/;"	m	struct:sf_private_tag	access:public
filelength	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		filelength ;	\/* Overall length of (embedded) file. *\/$/;"	m	struct:sf_private_tag	access:public
filename	.\libsndfile-1.0.17\regtest\database.c	/^	char filename [256] ;$/;"	m	struct:__anon7	file:	access:public
filename	.\libsndfile-1.0.17\src\common.h	/^	char			filename	[SF_FILENAME_LEN \/ 4] ;$/;"	m	struct:sf_private_tag	access:public
filename	.\libsndfile-1.0.17\src\xi.c	/^	char	filename [22] ;$/;"	m	struct:__anon76	file:	access:public
filename	.\libsndfile-1.0.17\tests\locale_test.c	/^	const char *filename ;$/;"	m	struct:__anon79	file:	access:public
fileoffset	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		fileoffset ;	\/* Offset in number of bytes from beginning of file. *\/$/;"	m	struct:sf_private_tag	access:public
filepath	.\libsndfile-1.0.17\src\common.h	/^	char			filepath	[SF_FILENAME_LEN] ;$/;"	m	struct:sf_private_tag	access:public
filesystem_full_test	.\libsndfile-1.0.17\tests\misc_test.c	/^filesystem_full_test (int typemajor)$/;"	f	file:	signature:(int typemajor)
filesystem_full_test	.\libsndfile-1.0.17\tests\misc_test.c	/^static void	filesystem_full_test (int typemajor) ;$/;"	p	file:	signature:(int typemajor)
filetypes	.\libsndfile-1.0.17\tests\stdio_test.c	/^static const char *filetypes [] =$/;"	v	file:
find_binheader_writefs	.\libsndfile-1.0.17\src\binheader_writef_check.py	/^def find_binheader_writefs (data):$/;"	f	access:public
find_format_string	.\libsndfile-1.0.17\src\binheader_writef_check.py	/^def find_format_string (s):$/;"	f	access:public
finished	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	sem_id finished;$/;"	m	struct:shared_data	file:	access:public
fix_file	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^fix_file (char *filename)$/;"	f	file:	signature:(char *filename)
fix_file	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^static void fix_file (char *filename) ;$/;"	p	file:	signature:(char *filename)
fl32_MARKER	.\libsndfile-1.0.17\src\aiff.c	64;"	d	file:
fl64_MARKER	.\libsndfile-1.0.17\src\aiff.c	66;"	d	file:
flac_buffer_copy	.\libsndfile-1.0.17\src\flac.c	/^flac_buffer_copy (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
flac_close	.\libsndfile-1.0.17\src\flac.c	/^flac_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
flac_close	.\libsndfile-1.0.17\src\flac.c	/^static int			flac_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
flac_command	.\libsndfile-1.0.17\src\flac.c	/^flac_command (SF_PRIVATE *psf, int command, void *data, int datasize)$/;"	f	file:	signature:(SF_PRIVATE *psf, int command, void *data, int datasize)
flac_command	.\libsndfile-1.0.17\src\flac.c	/^static int flac_command (SF_PRIVATE *psf, int command, void *data, int datasize) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int command, void *data, int datasize)
flac_enc_init	.\libsndfile-1.0.17\src\flac.c	/^flac_enc_init (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
flac_enc_init	.\libsndfile-1.0.17\src\flac.c	/^static int			flac_enc_init (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
flac_init	.\libsndfile-1.0.17\src\common.h	/^int		flac_init		(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
flac_init	.\libsndfile-1.0.17\src\flac.c	/^flac_init (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
flac_open	.\libsndfile-1.0.17\src\common.h	/^int		flac_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
flac_open	.\libsndfile-1.0.17\src\flac.c	/^flac_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
flac_open	.\libsndfile-1.0.17\src\flac.c	/^flac_open (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
flac_read_flac2d	.\libsndfile-1.0.17\src\flac.c	/^flac_read_flac2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
flac_read_flac2d	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_read_flac2d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
flac_read_flac2f	.\libsndfile-1.0.17\src\flac.c	/^flac_read_flac2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
flac_read_flac2f	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_read_flac2f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
flac_read_flac2i	.\libsndfile-1.0.17\src\flac.c	/^flac_read_flac2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
flac_read_flac2i	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_read_flac2i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
flac_read_flac2s	.\libsndfile-1.0.17\src\flac.c	/^flac_read_flac2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
flac_read_flac2s	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_read_flac2s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
flac_read_header	.\libsndfile-1.0.17\src\flac.c	/^flac_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
flac_read_header	.\libsndfile-1.0.17\src\flac.c	/^static int			flac_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
flac_read_loop	.\libsndfile-1.0.17\src\flac.c	/^flac_read_loop (SF_PRIVATE *psf, unsigned len)$/;"	f	file:	signature:(SF_PRIVATE *psf, unsigned len)
flac_seek	.\libsndfile-1.0.17\src\flac.c	/^flac_seek (SF_PRIVATE *psf, int UNUSED (mode), sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int UNUSED (mode), sf_count_t offset)
flac_seek	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_seek (SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
flac_write_d2flac	.\libsndfile-1.0.17\src\flac.c	/^flac_write_d2flac (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
flac_write_d2flac	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_write_d2flac (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
flac_write_f2flac	.\libsndfile-1.0.17\src\flac.c	/^flac_write_f2flac (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
flac_write_f2flac	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_write_f2flac (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
flac_write_i2flac	.\libsndfile-1.0.17\src\flac.c	/^flac_write_i2flac (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
flac_write_i2flac	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_write_i2flac (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
flac_write_s2flac	.\libsndfile-1.0.17\src\flac.c	/^flac_write_s2flac (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
flac_write_s2flac	.\libsndfile-1.0.17\src\flac.c	/^static sf_count_t	flac_write_s2flac (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
flags	.\libsndfile-1.0.17\src\common.h	/^	int		flags ;$/;"	m	struct:__anon27	access:public
float2int	.\libsndfile-1.0.17\src\float_cast.h	/^	float2int (register float in)$/;"	f	signature:(register float in)
float2int	.\libsndfile-1.0.17\src\float_cast.h	/^	static inline long float2int (float in)$/;"	f	signature:(float in)
float32_be_read	.\libsndfile-1.0.17\src\common.h	/^float	float32_be_read		(unsigned char *cptr) ;$/;"	p	signature:(unsigned char *cptr)
float32_be_read	.\libsndfile-1.0.17\src\float32.c	/^float32_be_read (unsigned char *cptr)$/;"	f	signature:(unsigned char *cptr)
float32_be_write	.\libsndfile-1.0.17\src\common.h	/^void	float32_be_write	(float in, unsigned char *out) ;$/;"	p	signature:(float in, unsigned char *out)
float32_be_write	.\libsndfile-1.0.17\src\float32.c	/^float32_be_write (float in, unsigned char *out)$/;"	f	signature:(float in, unsigned char *out)
float32_get_capability	.\libsndfile-1.0.17\src\float32.c	/^float32_get_capability	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
float32_get_capability	.\libsndfile-1.0.17\src\float32.c	/^static int		float32_get_capability	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
float32_init	.\libsndfile-1.0.17\src\common.h	/^int		float32_init	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
float32_init	.\libsndfile-1.0.17\src\float32.c	/^float32_init	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
float32_le_read	.\libsndfile-1.0.17\src\common.h	/^float	float32_le_read		(unsigned char *cptr) ;$/;"	p	signature:(unsigned char *cptr)
float32_le_read	.\libsndfile-1.0.17\src\float32.c	/^float32_le_read (unsigned char *cptr)$/;"	f	signature:(unsigned char *cptr)
float32_le_write	.\libsndfile-1.0.17\src\common.h	/^void	float32_le_write	(float in, unsigned char *out) ;$/;"	p	signature:(float in, unsigned char *out)
float32_le_write	.\libsndfile-1.0.17\src\float32.c	/^float32_le_write (float in, unsigned char *out)$/;"	f	signature:(float in, unsigned char *out)
float32_peak_update	.\libsndfile-1.0.17\src\float32.c	/^float32_peak_update	(SF_PRIVATE *psf, const float *buffer, int count, sf_count_t indx)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *buffer, int count, sf_count_t indx)
float32_peak_update	.\libsndfile-1.0.17\src\float32.c	/^static void		float32_peak_update	(SF_PRIVATE *psf, const float *buffer, int count, sf_count_t indx) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *buffer, int count, sf_count_t indx)
float_checksum	.\libsndfile-1.0.17\regtest\checksum.c	/^float_checksum (SNDFILE * file, int start)$/;"	f	file:	signature:(SNDFILE * file, int start)
float_checksum	.\libsndfile-1.0.17\regtest\checksum.c	/^static int float_checksum (SNDFILE * file, int start) ;$/;"	p	file:	signature:(SNDFILE * file, int start)
float_data	.\libsndfile-1.0.17\tests\command_test.c	/^static	float	float_data	[BUFFER_LEN] ;$/;"	v	file:
float_data	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static float	float_data [DFT_DATA_LENGTH] ;$/;"	v	file:
float_endswap	.\libsndfile-1.0.17\src\common.h	/^	int				float_endswap ;	\/* Need to endswap float32s? *\/$/;"	m	struct:sf_private_tag	access:public
float_int_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^float_int_big_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
float_int_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void float_int_big_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
float_int_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^float_int_little_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
float_int_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void float_int_little_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
float_int_mult	.\libsndfile-1.0.17\src\common.h	/^	int				float_int_mult ;$/;"	m	struct:sf_private_tag	access:public
float_max	.\libsndfile-1.0.17\src\common.h	/^	float			float_max ;$/;"	m	struct:sf_private_tag	access:public
float_norm_test	.\libsndfile-1.0.17\tests\command_test.c	/^float_norm_test (const char *filename)$/;"	f	file:	signature:(const char *filename)
float_norm_test	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	float_norm_test		(const char *filename) ;$/;"	p	file:	signature:(const char *filename)
float_scaled_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^float_scaled_test (const char *filename, int allow_exit, int replace_float, int filetype, double target_snr)$/;"	f	file:	signature:(const char *filename, int allow_exit, int replace_float, int filetype, double target_snr)
float_scaled_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void	float_scaled_test	(const char *filename, int allow_exit, int replace_float, int filetype, double target_snr) ;$/;"	p	file:	signature:(const char *filename, int allow_exit, int replace_float, int filetype, double target_snr)
float_short_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^float_short_big_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
float_short_big_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void float_short_big_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
float_short_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^float_short_little_test (const char * filename)$/;"	f	file:	signature:(const char * filename)
float_short_little_test	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static void float_short_little_test (const char * filename) ;$/;"	p	file:	signature:(const char * filename)
flt	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^	float	flt [BUFFER_SIZE] ;$/;"	m	union:__anon83	file:	access:public
flt_scale_clip_test_08	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^flt_scale_clip_test_08 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
flt_scale_clip_test_08	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	flt_scale_clip_test_08 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
flt_scale_clip_test_16	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^flt_scale_clip_test_16 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
flt_scale_clip_test_16	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	flt_scale_clip_test_16 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
flt_scale_clip_test_24	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^flt_scale_clip_test_24 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
flt_scale_clip_test_24	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	flt_scale_clip_test_24 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
flt_scale_clip_test_32	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^flt_scale_clip_test_32 (const char *filename, int filetype, float maxval)$/;"	f	file:	signature:(const char *filename, int filetype, float maxval)
flt_scale_clip_test_32	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^static void	flt_scale_clip_test_32 (const char *filename, int filetype, float maxval) ;$/;"	p	file:	signature:(const char *filename, int filetype, float maxval)
fmt_HASH16	.\libsndfile-1.0.17\src\w64.c	56;"	d	file:
fmt_MARKER	.\libsndfile-1.0.17\src\ms_adpcm.c	35;"	d	file:
fmt_MARKER	.\libsndfile-1.0.17\src\wav.c	40;"	d	file:
fmt_flags	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int fmt_flags ;$/;"	m	struct:__anon22	file:	access:public
fmt_id	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int fmt_id ;$/;"	m	struct:__anon22	file:	access:public
fmult	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int fmult (int an, int srn)$/;"	f	file:	signature:(int an, int srn)
format	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	int			format ;$/;"	m	struct:__anon3	file:	access:public
format	.\libsndfile-1.0.17\examples\sndfile-play.c	/^{	AudioStreamBasicDescription		format ;$/;"	m	struct:__anon4	file:	access:public
format	.\libsndfile-1.0.17\src\paf.c	/^    int	format ;$/;"	m	struct:__anon46	file:	access:public
format	.\libsndfile-1.0.17\src\sndfile.hh	/^		int			format (void) const		{ return p ? p->sfinfo.format : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
format	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short		format ;$/;"	m	union:__anon74	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon65	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon66	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon67	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon69	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon70	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon71	access:public
format	.\libsndfile-1.0.17\src\wav_w64.h	/^{	unsigned short	format ;$/;"	m	struct:__anon73	access:public
format	.\libsndfile-1.0.17\tests\pipe_test.c	/^{	int			format ;$/;"	m	struct:__anon82	file:	access:public
format	.\sndfile.h	/^	int			format ;$/;"	m	struct:SF_INFO	access:public
format	.\sndfile.h	/^{	int			format ;$/;"	m	struct:__anon91	access:public
format	.\sndfile.hh	/^		int			format (void) const		{ return p ? p->sfinfo.format : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
format_desc	.\libsndfile-1.0.17\src\common.h	/^	char			*format_desc ;$/;"	m	struct:sf_private_tag	access:public
format_from_extension	.\libsndfile-1.0.17\src\sndfile.c	/^format_from_extension (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
format_from_extension	.\libsndfile-1.0.17\src\sndfile.c	/^static int 	format_from_extension (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
format_map	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^static OUTPUT_FORMAT_MAP format_map [] =$/;"	v	file:
format_tests	.\libsndfile-1.0.17\tests\command_test.c	/^format_tests	(void)$/;"	f	file:	signature:(void)
format_tests	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	format_tests		(void) ;$/;"	p	file:	signature:(void)
frame	.\libsndfile-1.0.17\src\flac.c	/^	const FLAC__Frame *frame ;$/;"	m	struct:__anon37	file:	access:public
frame	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_write_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data)$/;"	v	file:
frame_chain	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	unsigned char	frame_chain;	\/*   half-byte to carry forward	*\/$/;"	m	struct:gsm_state	access:public
frame_index	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	unsigned char	frame_index;	\/*            odd\/even chaining	*\/$/;"	m	struct:gsm_state	access:public
frames	.\libsndfile-1.0.17\src\avr.c	/^	int		frames ;	\/* sample length in bytes or words (see rez) *\/$/;"	m	struct:__anon21	file:	access:public
frames	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
frames	.\libsndfile-1.0.17\src\sds.c	/^{	int bitwidth, frames ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
frames	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	frames (void) const		{ return p ? p->sfinfo.frames : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
frames	.\libsndfile-1.0.17\src\wav_w64.h	/^{	int frames ;$/;"	m	struct:__anon75	access:public
frames	.\sndfile.h	/^{	sf_count_t	frames ;		\/* Used to be called samples.  Changed to avoid confusion. *\/$/;"	m	struct:SF_INFO	access:public
frames	.\sndfile.hh	/^		sf_count_t	frames (void) const		{ return p ? p->sfinfo.frames : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
free	.\libsndfile-1.0.17\src\GSM610\gsm_destroy.c	/^		extern void free();$/;"	p	file:
free_MARKER	.\libsndfile-1.0.17\src\caf.c	43;"	d	file:
fsd	.\libsndfile-1.0.17\src\flac.c	/^{	FLAC__SeekableStreamDecoder *fsd ;$/;"	m	struct:__anon37	file:	access:public
fse	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__SeekableStreamEncoder *fse ;$/;"	m	struct:__anon37	file:	access:public
func_extract_an_archive	.\libsndfile-1.0.17\ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	.\libsndfile-1.0.17\ltmain.sh	/^func_extract_archives ()$/;"	f
func_infer_tag	.\libsndfile-1.0.17\ltmain.sh	/^func_infer_tag ()$/;"	f
func_mktempdir	.\libsndfile-1.0.17\ltmain.sh	/^func_mktempdir ()$/;"	f
func_win32_libid	.\libsndfile-1.0.17\ltmain.sh	/^func_win32_libid ()$/;"	f
future	.\sndfile.h	/^	int future [6] ;$/;"	m	struct:__anon98	access:public
g721_decoder	.\libsndfile-1.0.17\src\G72x\g721.c	/^g721_decoder($/;"	f	signature:( int i, G72x_STATE *state_ptr)
g721_decoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g721_decoder	(int code, G72x_STATE *state_ptr);$/;"	p	signature:(int code, G72x_STATE *state_ptr)
g721_encoder	.\libsndfile-1.0.17\src\G72x\g721.c	/^g721_encoder($/;"	f	signature:( int sl, G72x_STATE *state_ptr)
g721_encoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g721_encoder	(int sample, G72x_STATE *state_ptr);$/;"	p	signature:(int sample, G72x_STATE *state_ptr)
g721_test	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^g721_test	(void)$/;"	f	file:	signature:(void)
g721_test	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^static void g721_test	(void) ;$/;"	p	file:	signature:(void)
g723_16_decoder	.\libsndfile-1.0.17\src\G72x\g723_16.c	/^g723_16_decoder($/;"	f	signature:( int i, G72x_STATE *state_ptr)
g723_16_decoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g723_16_decoder	(int code, G72x_STATE *state_ptr);$/;"	p	signature:(int code, G72x_STATE *state_ptr)
g723_16_encoder	.\libsndfile-1.0.17\src\G72x\g723_16.c	/^g723_16_encoder($/;"	f	signature:( int sl, G72x_STATE *state_ptr)
g723_16_encoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g723_16_encoder	(int sample, G72x_STATE *state_ptr);$/;"	p	signature:(int sample, G72x_STATE *state_ptr)
g723_24_decoder	.\libsndfile-1.0.17\src\G72x\g723_24.c	/^g723_24_decoder($/;"	f	signature:( int i, G72x_STATE *state_ptr)
g723_24_decoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g723_24_decoder	(int code, G72x_STATE *state_ptr);$/;"	p	signature:(int code, G72x_STATE *state_ptr)
g723_24_encoder	.\libsndfile-1.0.17\src\G72x\g723_24.c	/^g723_24_encoder($/;"	f	signature:( int sl, G72x_STATE *state_ptr)
g723_24_encoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g723_24_encoder	(int sample, G72x_STATE *state_ptr);$/;"	p	signature:(int sample, G72x_STATE *state_ptr)
g723_40_decoder	.\libsndfile-1.0.17\src\G72x\g723_40.c	/^int	g723_40_decoder	(int i, G72x_STATE *state_ptr)$/;"	f	signature:(int i, G72x_STATE *state_ptr)
g723_40_decoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g723_40_decoder	(int code, G72x_STATE *state_ptr);$/;"	p	signature:(int code, G72x_STATE *state_ptr)
g723_40_encoder	.\libsndfile-1.0.17\src\G72x\g723_40.c	/^int	g723_40_encoder (int sl, G72x_STATE *state_ptr)$/;"	f	signature:(int sl, G72x_STATE *state_ptr)
g723_40_encoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int g723_40_encoder	(int sample, G72x_STATE *state_ptr);$/;"	p	signature:(int sample, G72x_STATE *state_ptr)
g723_test	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^g723_test	(double margin)$/;"	f	file:	signature:(double margin)
g723_test	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^static void g723_test	(double margin) ;$/;"	p	file:	signature:(double margin)
g72x	.\libsndfile-1.0.17\src\wav_w64.h	/^	G72x_ADPCM_WAV_FMT	g72x ;$/;"	m	union:__anon74	access:public
g72x_close	.\libsndfile-1.0.17\src\g72x.c	/^g72x_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
g72x_close	.\libsndfile-1.0.17\src\g72x.c	/^static	int	g72x_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
g72x_decode_block	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int g72x_decode_block (G72x_STATE *pstate, const unsigned char *block, short *samples)$/;"	f	signature:(G72x_STATE *pstate, const unsigned char *block, short *samples)
g72x_decode_block	.\libsndfile-1.0.17\src\G72x\g72x.h	/^int g72x_decode_block (struct g72x_state *pstate, const unsigned char *block, short *samples) ;$/;"	p	signature:(struct g72x_state *pstate, const unsigned char *block, short *samples)
g72x_encode_block	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int g72x_encode_block (G72x_STATE *pstate, short *samples, unsigned char *block)$/;"	f	signature:(G72x_STATE *pstate, short *samples, unsigned char *block)
g72x_encode_block	.\libsndfile-1.0.17\src\G72x\g72x.h	/^int g72x_encode_block (struct g72x_state *pstate, short *samples, unsigned char *block) ;$/;"	p	signature:(struct g72x_state *pstate, short *samples, unsigned char *block)
g72x_init	.\libsndfile-1.0.17\src\common.h	/^int		g72x_init 		(SF_PRIVATE * psf) ;$/;"	p	signature:(SF_PRIVATE * psf)
g72x_init	.\libsndfile-1.0.17\src\g72x.c	/^g72x_init (SF_PRIVATE * psf)$/;"	f	signature:(SF_PRIVATE * psf)
g72x_read_block	.\libsndfile-1.0.17\src\g72x.c	/^g72x_read_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x, short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, G72x_PRIVATE *pg72x, short *ptr, int len)
g72x_read_d	.\libsndfile-1.0.17\src\g72x.c	/^g72x_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
g72x_read_d	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
g72x_read_f	.\libsndfile-1.0.17\src\g72x.c	/^g72x_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
g72x_read_f	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
g72x_read_i	.\libsndfile-1.0.17\src\g72x.c	/^g72x_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
g72x_read_i	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
g72x_read_s	.\libsndfile-1.0.17\src\g72x.c	/^g72x_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
g72x_read_s	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
g72x_reader_init	.\libsndfile-1.0.17\src\G72x\g72x.c	/^struct g72x_state * g72x_reader_init (int codec, int *blocksize, int *samplesperblock)$/;"	f	signature:(int codec, int *blocksize, int *samplesperblock)
g72x_reader_init	.\libsndfile-1.0.17\src\G72x\g72x.h	/^struct g72x_state * g72x_reader_init (int codec, int *blocksize, int *samplesperblock) ;$/;"	p	signature:(int codec, int *blocksize, int *samplesperblock)
g72x_seek	.\libsndfile-1.0.17\src\g72x.c	/^g72x_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
g72x_seek	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t g72x_seek (SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
g72x_state	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^struct g72x_state$/;"	s
g72x_state::a	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short a[2];	\/* Coefficients of pole portion of prediction filter. *\/$/;"	m	struct:g72x_state	access:public
g72x_state::ap	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short ap;	\/* Linear weighting coefficient of 'yl' and 'yu'. *\/$/;"	m	struct:g72x_state	access:public
g72x_state::b	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short b[6];	\/* Coefficients of zero portion of prediction filter. *\/$/;"	m	struct:g72x_state	access:public
g72x_state::blocksize	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state	access:public
g72x_state::codec_bits	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state	access:public
g72x_state::decoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		(*decoder) (int, struct g72x_state* state) ;$/;"	m	struct:g72x_state	access:public
g72x_state::dml	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short dml;	\/* Long term energy estimate. *\/$/;"	m	struct:g72x_state	access:public
g72x_state::dms	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short dms;	\/* Short term energy estimate. *\/$/;"	m	struct:g72x_state	access:public
g72x_state::dq	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short dq[6];	\/*$/;"	m	struct:g72x_state	access:public
g72x_state::encoder	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		(*encoder) (int, struct g72x_state* state) ;$/;"	m	struct:g72x_state	access:public
g72x_state::pk	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short pk[2];	\/*$/;"	m	struct:g72x_state	access:public
g72x_state::samplesperblock	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state	access:public
g72x_state::sr	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short sr[2];	\/*$/;"	m	struct:g72x_state	access:public
g72x_state::td	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	char td;	\/* delayed tone detect, new in 1988 version *\/$/;"	m	struct:g72x_state	access:public
g72x_state::yl	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^{	long  yl;	\/* Locked or steady state step size multiplier. *\/$/;"	m	struct:g72x_state	access:public
g72x_state::yu	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short yu;	\/* Unlocked or non-steady state step size multiplier. *\/$/;"	m	struct:g72x_state	access:public
g72x_state_new	.\libsndfile-1.0.17\src\G72x\g72x.c	/^static G72x_STATE * g72x_state_new (void) ;$/;"	p	file:	signature:(void)
g72x_state_new	.\libsndfile-1.0.17\src\G72x\g72x.c	/^static G72x_STATE * g72x_state_new (void)$/;"	f	file:	signature:(void)
g72x_write_block	.\libsndfile-1.0.17\src\g72x.c	/^g72x_write_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x, const short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, G72x_PRIVATE *pg72x, const short *ptr, int len)
g72x_write_d	.\libsndfile-1.0.17\src\g72x.c	/^g72x_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
g72x_write_d	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
g72x_write_f	.\libsndfile-1.0.17\src\g72x.c	/^g72x_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
g72x_write_f	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
g72x_write_i	.\libsndfile-1.0.17\src\g72x.c	/^g72x_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
g72x_write_i	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
g72x_write_s	.\libsndfile-1.0.17\src\g72x.c	/^g72x_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
g72x_write_s	.\libsndfile-1.0.17\src\g72x.c	/^static	sf_count_t	g72x_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
g72x_writer_init	.\libsndfile-1.0.17\src\G72x\g72x.c	/^struct g72x_state * g72x_writer_init (int codec, int *blocksize, int *samplesperblock)$/;"	f	signature:(int codec, int *blocksize, int *samplesperblock)
g72x_writer_init	.\libsndfile-1.0.17\src\G72x\g72x.h	/^struct g72x_state * g72x_writer_init (int codec, int *blocksize, int *samplesperblock) ;$/;"	p	signature:(int codec, int *blocksize, int *samplesperblock)
gain	.\libsndfile-1.0.17\src\aiff.c	/^	short		gain ;			\/* in dB, 0 is normal *\/$/;"	m	struct:__anon13	file:	access:public
gain	.\sndfile.h	/^{	int gain ;$/;"	m	struct:__anon96	access:public
gen_short_data	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^gen_short_data (short * data, int len, int start)$/;"	f	file:	signature:(short * data, int len, int start)
gen_signal_double	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^gen_signal_double (double *gendata, double scale, int gendatalen)$/;"	f	file:	signature:(double *gendata, double scale, int gendatalen)
gen_signal_double	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^static void	gen_signal_double (double *data, double scale, int datalen) ;$/;"	p	file:	signature:(double *data, double scale, int datalen)
gen_signal_double	.\libsndfile-1.0.17\tests\fix_this.c	/^gen_signal_double (double *data, double scale, int datalen)$/;"	f	file:	signature:(double *data, double scale, int datalen)
gen_signal_double	.\libsndfile-1.0.17\tests\fix_this.c	/^static	void	gen_signal_double (double *data, double scale, int datalen) ;$/;"	p	file:	signature:(double *data, double scale, int datalen)
gen_signal_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^gen_signal_double (double *data, double scale, int channels, int datalen)$/;"	f	file:	signature:(double *data, double scale, int channels, int datalen)
gen_signal_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	gen_signal_double (double *data, double scale, int channels, int datalen) ;$/;"	p	file:	signature:(double *data, double scale, int channels, int datalen)
gen_windowed_sine_double	.\libsndfile-1.0.17\tests\utils.c	/^gen_windowed_sine_double (double *data, int len, double maximum)$/;"	f	signature:(double *data, int len, double maximum)
gen_windowed_sine_double	.\libsndfile-1.0.17\tests\utils.h	/^void gen_windowed_sine_double (double *data, int len, double maximum) ;$/;"	p	signature:(double *data, int len, double maximum)
gen_windowed_sine_float	.\libsndfile-1.0.17\tests\utils.c	/^gen_windowed_sine_float (float *data, int len, double maximum)$/;"	f	signature:(float *data, int len, double maximum)
gen_windowed_sine_float	.\libsndfile-1.0.17\tests\utils.h	/^void gen_windowed_sine_float (float *data, int len, double maximum) ;$/;"	p	signature:(float *data, int len, double maximum)
generate_duration_str	.\libsndfile-1.0.17\examples\sndfile-info.c	/^generate_duration_str (SF_INFO *sfinfo)$/;"	f	file:	signature:(SF_INFO *sfinfo)
getString	.\libsndfile-1.0.17\src\sndfile.hh	/^		const char* getString (int str_type) const ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type) const
getString	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::getString (int str_type) const$/;"	f	class:SndfileHandle	signature:(int str_type) const
getString	.\sndfile.hh	/^		const char* getString (int str_type) const ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type) const
getString	.\sndfile.hh	/^SndfileHandle::getString (int str_type) const$/;"	f	class:SndfileHandle	signature:(int str_type) const
get_ekey_from_filename	.\libsndfile-1.0.17\regtest\database.c	/^get_ekey_from_filename (REGTEST_DB * db, const char *filepath)$/;"	f	file:	signature:(REGTEST_DB * db, const char *filepath)
get_ekey_from_filename	.\libsndfile-1.0.17\regtest\database.c	/^static int get_ekey_from_filename (REGTEST_DB * db, const char *filepath) ;$/;"	p	file:	signature:(REGTEST_DB * db, const char *filepath)
get_encoding	.\libsndfile-1.0.17\src\ircam.c	/^get_encoding (int subformat)$/;"	f	file:	signature:(int subformat)
get_encoding	.\libsndfile-1.0.17\src\ircam.c	/^static	int		get_encoding (int subformat) ;$/;"	p	file:	signature:(int subformat)
get_encoding_str	.\libsndfile-1.0.17\src\ircam.c	/^get_encoding_str (int encoding)$/;"	f	file:	signature:(int encoding)
get_encoding_str	.\libsndfile-1.0.17\src\ircam.c	/^static	const char*	get_encoding_str (int encoding) ;$/;"	p	file:	signature:(int encoding)
get_file_length	.\libsndfile-1.0.17\tests\multi_file_test.c	/^get_file_length (int fd)$/;"	f	file:	signature:(int fd)
get_file_length	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static off_t get_file_length (int fd) ;$/;"	p	file:	signature:(int fd)
get_filelen	.\sndfile.h	/^{	sf_vio_get_filelen	get_filelen ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
get_filename_pathname	.\libsndfile-1.0.17\regtest\database.c	/^get_filename_pathname (REGTEST_DB * db, const char *filepath)$/;"	f	file:	signature:(REGTEST_DB * db, const char *filepath)
get_filename_pathname	.\libsndfile-1.0.17\regtest\database.c	/^static void get_filename_pathname (REGTEST_DB * db, const char *filepath) ;$/;"	p	file:	signature:(REGTEST_DB * db, const char *filepath)
get_filename_pathname_by_ekey	.\libsndfile-1.0.17\regtest\database.c	/^get_filename_pathname_by_ekey (REGTEST_DB * db, int ekey)$/;"	f	file:	signature:(REGTEST_DB * db, int ekey)
get_filename_pathname_by_ekey	.\libsndfile-1.0.17\regtest\database.c	/^static int get_filename_pathname_by_ekey (REGTEST_DB * db, int ekey) ;$/;"	p	file:	signature:(REGTEST_DB * db, int ekey)
get_loop_mode	.\libsndfile-1.0.17\src\aiff.c	/^get_loop_mode (short mode)$/;"	f	file:	signature:(short mode)
get_loop_mode	.\libsndfile-1.0.17\src\aiff.c	/^static short get_loop_mode (short mode) ;$/;"	p	file:	signature:(short mode)
get_loop_mode_str	.\libsndfile-1.0.17\src\aiff.c	/^get_loop_mode_str (short mode)$/;"	f	file:	signature:(short mode)
get_loop_mode_str	.\libsndfile-1.0.17\src\aiff.c	/^static const char *get_loop_mode_str (short mode) ;$/;"	p	file:	signature:(short mode)
get_param_list	.\libsndfile-1.0.17\src\binheader_writef_check.py	/^def get_param_list (data):$/;"	f	access:public
get_signal_max	.\libsndfile-1.0.17\examples\sndfile-info.c	/^get_signal_max (SNDFILE *file)$/;"	f	file:	signature:(SNDFILE *file)
get_subtype_str	.\libsndfile-1.0.17\tests\benchmark.c	/^get_subtype_str (int subtype)$/;"	f	file:	signature:(int subtype)
get_subtype_str	.\libsndfile-1.0.17\tests\benchmark.c	/^static const char* get_subtype_str (int subtype) ;$/;"	p	file:	signature:(int subtype)
gsm	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^typedef struct gsm_state * 	gsm;$/;"	t	typeref:struct:gsm_state
gsm610	.\libsndfile-1.0.17\src\wav_w64.h	/^	GSM610_WAV_FMT		gsm610 ;$/;"	m	union:__anon74	access:public
gsm610_close	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
gsm610_close	.\libsndfile-1.0.17\src\gsm610.c	/^static int	gsm610_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
gsm610_decode_block	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_decode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_decode_block	.\libsndfile-1.0.17\src\gsm610.c	/^static	int	gsm610_decode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_encode_block	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_encode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_encode_block	.\libsndfile-1.0.17\src\gsm610.c	/^static	int	gsm610_encode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_init	.\libsndfile-1.0.17\src\common.h	/^int		gsm610_init		(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
gsm610_init	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_init	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
gsm610_read_block	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_read_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, short *ptr, int len)
gsm610_read_block	.\libsndfile-1.0.17\src\gsm610.c	/^static	int gsm610_read_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, short *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, short *ptr, int len)
gsm610_read_d	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
gsm610_read_d	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
gsm610_read_f	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
gsm610_read_f	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
gsm610_read_i	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
gsm610_read_i	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
gsm610_read_s	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_read_s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
gsm610_read_s	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_read_s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
gsm610_seek	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
gsm610_seek	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
gsm610_tag	.\libsndfile-1.0.17\src\gsm610.c	/^typedef struct gsm610_tag$/;"	s	file:
gsm610_tag::block	.\libsndfile-1.0.17\src\gsm610.c	/^	unsigned char	block [WAV_W64_GSM610_BLOCKSIZE] ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::blockcount	.\libsndfile-1.0.17\src\gsm610.c	/^	int				blockcount, samplecount ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::blocks	.\libsndfile-1.0.17\src\gsm610.c	/^{	int				blocks ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::blocksize	.\libsndfile-1.0.17\src\gsm610.c	/^	int				samplesperblock, blocksize ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::decode_block	.\libsndfile-1.0.17\src\gsm610.c	/^	int				(*decode_block)	(SF_PRIVATE *psf, struct gsm610_tag *pgsm610) ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::encode_block	.\libsndfile-1.0.17\src\gsm610.c	/^	int				(*encode_block)	(SF_PRIVATE *psf, struct gsm610_tag *pgsm610) ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::gsm_data	.\libsndfile-1.0.17\src\gsm610.c	/^	gsm				gsm_data ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::samplecount	.\libsndfile-1.0.17\src\gsm610.c	/^	int				blockcount, samplecount ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::samples	.\libsndfile-1.0.17\src\gsm610.c	/^	short			samples [WAV_W64_GSM610_SAMPLES] ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_tag::samplesperblock	.\libsndfile-1.0.17\src\gsm610.c	/^	int				samplesperblock, blocksize ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm610_wav_decode_block	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_wav_decode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_wav_decode_block	.\libsndfile-1.0.17\src\gsm610.c	/^static	int	gsm610_wav_decode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_wav_encode_block	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_wav_encode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)$/;"	f	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_wav_encode_block	.\libsndfile-1.0.17\src\gsm610.c	/^static	int	gsm610_wav_encode_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610)
gsm610_write_block	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_write_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, const short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, const short *ptr, int len)
gsm610_write_block	.\libsndfile-1.0.17\src\gsm610.c	/^static	int gsm610_write_block	(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, const short *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, GSM610_PRIVATE *pgsm610, const short *ptr, int len)
gsm610_write_d	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
gsm610_write_d	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
gsm610_write_f	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
gsm610_write_f	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
gsm610_write_i	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
gsm610_write_i	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
gsm610_write_s	.\libsndfile-1.0.17\src\gsm610.c	/^gsm610_write_s	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
gsm610_write_s	.\libsndfile-1.0.17\src\gsm610.c	/^static sf_count_t	gsm610_write_s	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
gsm_A	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_A[8]   = {20480, 20480, 20480,  20480,  13964,  15360,   8534,  9036};$/;"	v
gsm_B	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_B[8]   = {    0,     0,  2048,  -2560,     94,  -1792,   -341, -1144};$/;"	v
gsm_DLB	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_DLB[4] = {  6554,    16384,	26214,	   32767	};$/;"	v
gsm_FAC	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_FAC[8]	= { 18431, 20479, 22527, 24575, 26623, 28671, 30719, 32767 };$/;"	v
gsm_H	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_H[11] = {-134, -374, 0, 2054, 5741, 8192, 5741, 2054, 0, -374, -134 };$/;"	v
gsm_INVA	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_INVA[8]={ 13107, 13107,  13107, 13107,  19223, 17476,  31454, 29708 };$/;"	v
gsm_L_add	.\libsndfile-1.0.17\src\GSM610\add.c	/^longword gsm_L_add ( longword a, longword b)$/;"	f	signature:( longword a, longword b)
gsm_L_add	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^longword gsm_L_add 	(longword a, longword b ) ;$/;"	p	signature:(longword a, longword b )
gsm_L_asl	.\libsndfile-1.0.17\src\GSM610\add.c	/^longword gsm_L_asl (longword a, int n)$/;"	f	signature:(longword a, int n)
gsm_L_asl	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^longword gsm_L_asl  	(longword a, int n) ;$/;"	p	signature:(longword a, int n)
gsm_L_asr	.\libsndfile-1.0.17\src\GSM610\add.c	/^longword gsm_L_asr (longword a, int n)$/;"	f	signature:(longword a, int n)
gsm_L_asr	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^longword gsm_L_asr  	(longword a, int n) ;$/;"	p	signature:(longword a, int n)
gsm_L_mult	.\libsndfile-1.0.17\src\GSM610\add.c	/^longword gsm_L_mult (word a, word b)$/;"	f	signature:(word a, word b)
gsm_L_mult	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^longword gsm_L_mult 	(word a, word b) ;$/;"	p	signature:(word a, word b)
gsm_L_sub	.\libsndfile-1.0.17\src\GSM610\add.c	/^longword gsm_L_sub ( longword a, longword b)$/;"	f	signature:( longword a, longword b)
gsm_L_sub	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^longword gsm_L_sub 	(longword a, longword b) ;$/;"	p	signature:(longword a, longword b)
gsm_MAC	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_MAC[8] = {  31,    31,    15,     15,      7,      7,      3,     3 };$/;"	v
gsm_MIC	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_MIC[8] = { -32,   -32,   -16,    -16,     -8,     -8,     -4,    -4 };$/;"	v
gsm_NRFAC	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_NRFAC[8] = { 29128, 26215, 23832, 21846, 20165, 18725, 17476, 16384 };$/;"	v
gsm_QLB	.\libsndfile-1.0.17\src\GSM610\table.c	/^word gsm_QLB[4] = {  3277,    11469,	21299,	   32767	};$/;"	v
gsm_abs	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_abs (word a)$/;"	f	signature:(word a)
gsm_abs	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_abs 		(word a) ;$/;"	p	signature:(word a)
gsm_add	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_add ( word a, word b)$/;"	f	signature:( word a, word b)
gsm_add	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_add 		(word a, word b ) ;$/;"	p	signature:(word a, word b )
gsm_asl	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_asl (word a, int n)$/;"	f	signature:(word a, int n)
gsm_asl	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_asl 		(word a, int n) ;$/;"	p	signature:(word a, int n)
gsm_asr	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_asr (word a, int n)$/;"	f	signature:(word a, int n)
gsm_asr	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_asr  		(word a, int n) ;$/;"	p	signature:(word a, int n)
gsm_byte	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^typedef unsigned char		gsm_byte;$/;"	t
gsm_create	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^gsm  gsm_create 	(void);$/;"	p	signature:(void)
gsm_create	.\libsndfile-1.0.17\src\GSM610\gsm_create.c	/^gsm gsm_create (void)$/;"	f	signature:(void)
gsm_data	.\libsndfile-1.0.17\src\gsm610.c	/^	gsm				gsm_data ;$/;"	m	struct:gsm610_tag	file:	access:public
gsm_debug_longword	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	void  gsm_debug_longword  (char * name, longword) ;$/;"	p	signature:(char * name, longword)
gsm_debug_longword	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	289;"	d
gsm_debug_longwords	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	void  gsm_debug_longwords (char * name, int, int, longword *) ;$/;"	p	signature:(char * name, int, int, longword *)
gsm_debug_longwords	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	287;"	d
gsm_debug_word	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	void  gsm_debug_word      (char * name, word) ;$/;"	p	signature:(char * name, word)
gsm_debug_word	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	288;"	d
gsm_debug_words	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	void  gsm_debug_words     (char * name, int, int, word *) ;$/;"	p	signature:(char * name, int, int, word *)
gsm_debug_words	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	286;"	d
gsm_decode	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^int  gsm_decode  (gsm, gsm_byte   *, gsm_signal *);$/;"	p	signature:(gsm, gsm_byte *, gsm_signal *)
gsm_decode	.\libsndfile-1.0.17\src\GSM610\gsm_decode.c	/^int gsm_decode (gsm s, gsm_byte * c, gsm_signal * target)$/;"	f	signature:(gsm s, gsm_byte * c, gsm_signal * target)
gsm_destroy	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^void gsm_destroy (gsm);	$/;"	p	signature:(gsm)
gsm_destroy	.\libsndfile-1.0.17\src\GSM610\gsm_destroy.c	/^void gsm_destroy (gsm S)$/;"	f	signature:(gsm S)
gsm_div	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_div (word num, word denum)$/;"	f	signature:(word num, word denum)
gsm_div	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_div  		(word num, word denum) ;$/;"	p	signature:(word num, word denum)
gsm_encode	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^void gsm_encode  (gsm, gsm_signal *, gsm_byte  *);$/;"	p	signature:(gsm, gsm_signal *, gsm_byte *)
gsm_encode	.\libsndfile-1.0.17\src\GSM610\gsm_encode.c	/^void gsm_encode (gsm s, gsm_signal * source, gsm_byte * c)$/;"	f	signature:(gsm s, gsm_signal * source, gsm_byte * c)
gsm_explode	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^int  gsm_explode (gsm, gsm_byte   *, gsm_signal *);$/;"	p	signature:(gsm, gsm_byte *, gsm_signal *)
gsm_frame	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^typedef gsm_byte 			gsm_frame[33];		\/* 33 * 8 bits	 *\/$/;"	t
gsm_implode	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^void gsm_implode (gsm, gsm_signal *, gsm_byte   *);$/;"	p	signature:(gsm, gsm_signal *, gsm_byte *)
gsm_init	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^void gsm_init (gsm);	$/;"	p	signature:(gsm)
gsm_init	.\libsndfile-1.0.17\src\GSM610\gsm_create.c	/^void gsm_init (gsm state)$/;"	f	signature:(gsm state)
gsm_mult	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_mult ( word a, word b)$/;"	f	signature:( word a, word b)
gsm_mult	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_mult 		(word a, word b) ;$/;"	p	signature:(word a, word b)
gsm_mult_r	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_mult_r ( word a, word b)$/;"	f	signature:( word a, word b)
gsm_mult_r	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_mult_r		(word a, word b) ;$/;"	p	signature:(word a, word b)
gsm_norm	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_norm (longword a )$/;"	f	signature:(longword a )
gsm_norm	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_norm 		(longword a ) ;$/;"	p	signature:(longword a )
gsm_option	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^int  gsm_option  (gsm, int, int *);$/;"	p	signature:(gsm, int, int *)
gsm_option	.\libsndfile-1.0.17\src\GSM610\gsm_option.c	/^int gsm_option (gsm r, int opt, int * val)$/;"	f	signature:(gsm r, int opt, int * val)
gsm_print	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^int  gsm_print   (FILE *, gsm, gsm_byte  *);$/;"	p	signature:(FILE *, gsm, gsm_byte *)
gsm_signal	.\libsndfile-1.0.17\src\GSM610\gsm.h	/^typedef short		   		gsm_signal;		\/* signed 16 bit *\/$/;"	t
gsm_state	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^struct gsm_state$/;"	s
gsm_state::LARpp	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			LARpp[2][8] ; 	\/*                              *\/$/;"	m	struct:gsm_state	access:public
gsm_state::L_z2	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	longword		L_z2;		\/*                  Offset_com. *\/$/;"	m	struct:gsm_state	access:public
gsm_state::dp0	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^{	word			dp0[ 280 ] ;$/;"	m	struct:gsm_state	access:public
gsm_state::e	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word e[50] ;$/;"	m	struct:gsm_state	access:public
gsm_state::fast	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	char			fast;			\/* only used if FAST		*\/$/;"	m	struct:gsm_state	access:public
gsm_state::frame_chain	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	unsigned char	frame_chain;	\/*   half-byte to carry forward	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::frame_index	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	unsigned char	frame_index;	\/*            odd\/even chaining	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::j	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			j;				\/*                              *\/$/;"	m	struct:gsm_state	access:public
gsm_state::ltp_cut	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word	        ltp_cut;        \/* long_term.c, LTP crosscorr.  *\/$/;"	m	struct:gsm_state	access:public
gsm_state::mp	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	int				mp;			\/*                  Preemphasis	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::msr	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			msr;			\/* decoder.c,	Postprocessing	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::nrp	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			nrp; 			\/* 40 *\/	\/* long_term.c, synthesis	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::u	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			u[8] ;			\/* short_term_aly_filter.c	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::v	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			v[9] ;			\/* short_term.c, synthesis	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::verbose	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	char			verbose;		\/* only used if !NDEBUG		*\/$/;"	m	struct:gsm_state	access:public
gsm_state::wav_fmt	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	char			wav_fmt;		\/* only used if WAV49 defined	*\/$/;"	m	struct:gsm_state	access:public
gsm_state::z1	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			z1;			\/* preprocessing.c, Offset_com. *\/$/;"	m	struct:gsm_state	access:public
gsm_sub	.\libsndfile-1.0.17\src\GSM610\add.c	/^word gsm_sub ( word a, word b)$/;"	f	signature:( word a, word b)
gsm_sub	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^word	gsm_sub 		(word a, word b) ;$/;"	p	signature:(word a, word b)
guess_file_type	.\libsndfile-1.0.17\src\sndfile.c	/^guess_file_type (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
guess_file_type	.\libsndfile-1.0.17\src\sndfile.c	/^static int	guess_file_type (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
guess_output_file_type	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^guess_output_file_type (char *str, int format)$/;"	f	file:	signature:(char *str, int format)
handle_file	.\libsndfile-1.0.17\src\binheader_writef_check.py	/^def handle_file (fname):$/;"	f	access:public
has_text	.\libsndfile-1.0.17\src\common.h	/^	int				has_text ;$/;"	m	struct:sf_private_tag	access:public
have_written	.\libsndfile-1.0.17\src\common.h	/^	int				have_written ;	\/* Has a single write been done to the file? *\/$/;"	m	struct:sf_private_tag	access:public
headend	.\libsndfile-1.0.17\src\common.h	/^	int				headindex, headend ;$/;"	m	struct:sf_private_tag	access:public
header	.\libsndfile-1.0.17\src\common.h	/^	unsigned char	header		[SF_HEADER_LEN] ; \/* Must be unsigned *\/$/;"	m	struct:sf_private_tag	access:public
header_gets	.\libsndfile-1.0.17\src\common.c	/^header_gets (SF_PRIVATE *psf, char *ptr, int bufsize)$/;"	f	file:	signature:(SF_PRIVATE *psf, char *ptr, int bufsize)
header_put_be_3byte	.\libsndfile-1.0.17\src\common.c	/^header_put_be_3byte (SF_PRIVATE *psf, int x)$/;"	f	file:	signature:(SF_PRIVATE *psf, int x)
header_put_be_8byte	.\libsndfile-1.0.17\src\common.c	/^header_put_be_8byte (SF_PRIVATE *psf, sf_count_t x)$/;"	f	file:	signature:(SF_PRIVATE *psf, sf_count_t x)
header_put_be_int	.\libsndfile-1.0.17\src\common.c	/^header_put_be_int (SF_PRIVATE *psf, int x)$/;"	f	file:	signature:(SF_PRIVATE *psf, int x)
header_put_be_short	.\libsndfile-1.0.17\src\common.c	/^header_put_be_short (SF_PRIVATE *psf, int x)$/;"	f	file:	signature:(SF_PRIVATE *psf, int x)
header_put_byte	.\libsndfile-1.0.17\src\common.c	/^header_put_byte (SF_PRIVATE *psf, char x)$/;"	f	file:	signature:(SF_PRIVATE *psf, char x)
header_put_le_3byte	.\libsndfile-1.0.17\src\common.c	/^header_put_le_3byte (SF_PRIVATE *psf, int x)$/;"	f	file:	signature:(SF_PRIVATE *psf, int x)
header_put_le_8byte	.\libsndfile-1.0.17\src\common.c	/^header_put_le_8byte (SF_PRIVATE *psf, sf_count_t x)$/;"	f	file:	signature:(SF_PRIVATE *psf, sf_count_t x)
header_put_le_int	.\libsndfile-1.0.17\src\common.c	/^header_put_le_int (SF_PRIVATE *psf, int x)$/;"	f	file:	signature:(SF_PRIVATE *psf, int x)
header_put_le_short	.\libsndfile-1.0.17\src\common.c	/^header_put_le_short (SF_PRIVATE *psf, int x)$/;"	f	file:	signature:(SF_PRIVATE *psf, int x)
header_put_marker	.\libsndfile-1.0.17\src\common.c	/^header_put_marker (SF_PRIVATE *psf, int x)$/;"	f	file:	signature:(SF_PRIVATE *psf, int x)
header_read	.\libsndfile-1.0.17\src\common.c	/^header_read (SF_PRIVATE *psf, void *ptr, int bytes)$/;"	f	file:	signature:(SF_PRIVATE *psf, void *ptr, int bytes)
header_seek	.\libsndfile-1.0.17\src\common.c	/^header_seek (SF_PRIVATE *psf, sf_count_t position, int whence)$/;"	f	file:	signature:(SF_PRIVATE *psf, sf_count_t position, int whence)
headerless_test	.\libsndfile-1.0.17\tests\headerless_test.c	/^headerless_test (const char * filename, int format, int expected)$/;"	f	file:	signature:(const char * filename, int format, int expected)
headerless_test	.\libsndfile-1.0.17\tests\headerless_test.c	/^static void headerless_test (const char * filename, int format, int expected) ;$/;"	p	file:	signature:(const char * filename, int format, int expected)
headindex	.\libsndfile-1.0.17\src\common.h	/^	int				headindex, headend ;$/;"	m	struct:sf_private_tag	access:public
hexdump	.\libsndfile-1.0.17\src\strings.c	/^hexdump (void *data, int len)$/;"	f	file:	signature:(void *data, int len)
hexdump	.\libsndfile-1.0.17\src\strings.c	/^static void hexdump (void *data, int len) ;$/;"	p	file:	signature:(void *data, int len)
hexdump_file	.\libsndfile-1.0.17\tests\utils.c	/^hexdump_file (const char * filename, sf_count_t offset, sf_count_t length)$/;"	f	signature:(const char * filename, sf_count_t offset, sf_count_t length)
hexdump_file	.\libsndfile-1.0.17\tests\utils.h	/^void	hexdump_file (const char * filename, sf_count_t offset, sf_count_t length) ;$/;"	p	signature:(const char * filename, sf_count_t offset, sf_count_t length)
hfile	.\libsndfile-1.0.17\src\common.h	/^	void 			*hfile, *hrsrc, *hsaved ;$/;"	m	struct:sf_private_tag	access:public
highNote	.\libsndfile-1.0.17\src\aiff.c	/^	char		highNote ;$/;"	m	struct:__anon13	file:	access:public
highVelocity	.\libsndfile-1.0.17\src\aiff.c	/^	char		highVelocity ;	\/* 1 to 127 *\/$/;"	m	struct:__anon13	file:	access:public
host_read_d	.\libsndfile-1.0.17\src\double64.c	/^host_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
host_read_d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_read_d		(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
host_read_d2f	.\libsndfile-1.0.17\src\double64.c	/^host_read_d2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
host_read_d2f	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_read_d2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
host_read_d2i	.\libsndfile-1.0.17\src\double64.c	/^host_read_d2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
host_read_d2i	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_read_d2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
host_read_d2s	.\libsndfile-1.0.17\src\double64.c	/^host_read_d2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
host_read_d2s	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_read_d2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
host_read_f	.\libsndfile-1.0.17\src\float32.c	/^host_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
host_read_f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
host_read_f2d	.\libsndfile-1.0.17\src\float32.c	/^host_read_f2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
host_read_f2d	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_read_f2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
host_read_f2i	.\libsndfile-1.0.17\src\float32.c	/^host_read_f2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
host_read_f2i	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_read_f2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
host_read_f2s	.\libsndfile-1.0.17\src\float32.c	/^host_read_f2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
host_read_f2s	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_read_f2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
host_write_d	.\libsndfile-1.0.17\src\double64.c	/^host_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
host_write_d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
host_write_d2f	.\libsndfile-1.0.17\src\float32.c	/^host_write_d2f	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
host_write_d2f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_write_d2f	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
host_write_f	.\libsndfile-1.0.17\src\float32.c	/^host_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
host_write_f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
host_write_f2d	.\libsndfile-1.0.17\src\double64.c	/^host_write_f2d	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
host_write_f2d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_write_f2d	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
host_write_i2d	.\libsndfile-1.0.17\src\double64.c	/^host_write_i2d	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
host_write_i2d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_write_i2d	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
host_write_i2f	.\libsndfile-1.0.17\src\float32.c	/^host_write_i2f	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
host_write_i2f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_write_i2f	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
host_write_s2d	.\libsndfile-1.0.17\src\double64.c	/^host_write_s2d	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
host_write_s2d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t		host_write_s2d	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
host_write_s2f	.\libsndfile-1.0.17\src\float32.c	/^host_write_s2f	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
host_write_s2f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	host_write_s2f	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
hrsrc	.\libsndfile-1.0.17\src\common.h	/^	void 			*hfile, *hrsrc, *hsaved ;$/;"	m	struct:sf_private_tag	access:public
hsaved	.\libsndfile-1.0.17\src\common.h	/^	void 			*hfile, *hrsrc, *hsaved ;$/;"	m	struct:sf_private_tag	access:public
htk_close	.\libsndfile-1.0.17\src\htk.c	/^htk_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
htk_close	.\libsndfile-1.0.17\src\htk.c	/^static	int		htk_close		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
htk_open	.\libsndfile-1.0.17\src\common.h	/^int		htk_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
htk_open	.\libsndfile-1.0.17\src\htk.c	/^htk_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
htk_read_header	.\libsndfile-1.0.17\src\htk.c	/^htk_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
htk_read_header	.\libsndfile-1.0.17\src\htk.c	/^static int		htk_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
htk_write_header	.\libsndfile-1.0.17\src\htk.c	/^htk_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
htk_write_header	.\libsndfile-1.0.17\src\htk.c	/^static int		htk_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
hwave	.\libsndfile-1.0.17\examples\sndfile-play.c	/^{	HWAVEOUT	hwave ;$/;"	m	struct:__anon5	file:	access:public
i	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^{	int i [BUFFER_LEN] ;$/;"	m	union:__anon1	file:	access:public
i	.\libsndfile-1.0.17\regtest\checksum.c	/^	int		i [1 << 15] ;$/;"	m	union:__anon6	file:	access:public
i	.\libsndfile-1.0.17\tests\fix_this.c	/^	int 	i [BUFFER_SIZE + 1];$/;"	m	union:__anon78	file:	access:public
i	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	int i [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
i	.\libsndfile-1.0.17\tests\pcm_test.c	/^	int		i [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
i	.\libsndfile-1.0.17\tests\write_read_test.c	/^	int i [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
i2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^i2alaw_array (const int *ptr, int count, unsigned char *buffer)$/;"	f	file:	signature:(const int *ptr, int count, unsigned char *buffer)
i2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^static void i2alaw_array (const int *buffer, int count, unsigned char *ptr) ;$/;"	p	file:	signature:(const int *buffer, int count, unsigned char *ptr)
i2bes_array	.\libsndfile-1.0.17\src\pcm.c	/^i2bes_array (const int *src, short *dest, int count)$/;"	f	file:	signature:(const int *src, short *dest, int count)
i2bet_array	.\libsndfile-1.0.17\src\pcm.c	/^i2bet_array (const int *src, tribyte *dest, int count)$/;"	f	file:	signature:(const int *src, tribyte *dest, int count)
i2d_array	.\libsndfile-1.0.17\src\double64.c	/^i2d_array (const int *src, double *dest, int count)$/;"	f	file:	signature:(const int *src, double *dest, int count)
i2dles_array	.\libsndfile-1.0.17\src\xi.c	/^i2dles_array (XI_PRIVATE *pxi, const int *src, short *dest, int count)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const int *src, short *dest, int count)
i2dles_array	.\libsndfile-1.0.17\src\xi.c	/^static void i2dles_array (XI_PRIVATE *pxi, const int *src, short *dest, int count) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const int *src, short *dest, int count)
i2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^i2dsc_array (XI_PRIVATE *pxi, const int *src, signed char *dest, int count)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const int *src, signed char *dest, int count)
i2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^static void i2dsc_array (XI_PRIVATE *pxi, const int *src, signed char *dest, int count) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const int *src, signed char *dest, int count)
i2f_array	.\libsndfile-1.0.17\src\float32.c	/^i2f_array (const int *src, float *dest, int count)$/;"	f	file:	signature:(const int *src, float *dest, int count)
i2flac16_array	.\libsndfile-1.0.17\src\flac.c	/^i2flac16_array (const int *src, FLAC__int32 *dest, int count)$/;"	f	file:	signature:(const int *src, FLAC__int32 *dest, int count)
i2flac24_array	.\libsndfile-1.0.17\src\flac.c	/^i2flac24_array (const int *src, FLAC__int32 *dest, int count)$/;"	f	file:	signature:(const int *src, FLAC__int32 *dest, int count)
i2flac8_array	.\libsndfile-1.0.17\src\flac.c	/^i2flac8_array (const int *src, FLAC__int32 *dest, int count)$/;"	f	file:	signature:(const int *src, FLAC__int32 *dest, int count)
i2les_array	.\libsndfile-1.0.17\src\pcm.c	/^i2les_array (const int *src, short *dest, int count)$/;"	f	file:	signature:(const int *src, short *dest, int count)
i2let_array	.\libsndfile-1.0.17\src\pcm.c	/^i2let_array (const int *src, tribyte *dest, int count)$/;"	f	file:	signature:(const int *src, tribyte *dest, int count)
i2sc_array	.\libsndfile-1.0.17\src\pcm.c	/^i2sc_array	(const int *src, signed char *dest, int count)$/;"	f	file:	signature:(const int *src, signed char *dest, int count)
i2uc_array	.\libsndfile-1.0.17\src\pcm.c	/^i2uc_array	(const int *src, unsigned char *dest, int count)$/;"	f	file:	signature:(const int *src, unsigned char *dest, int count)
i2ulaw_array	.\libsndfile-1.0.17\src\ulaw.c	/^i2ulaw_array (const int *ptr, int count, unsigned char *buffer)$/;"	f	file:	signature:(const int *ptr, int count, unsigned char *buffer)
ibuf	.\libsndfile-1.0.17\src\common.h	/^		int				ibuf	[SF_BUFFER_LEN \/ sizeof (int)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
ibuffer	.\libsndfile-1.0.17\tests\cpp_test.cc	/^static int 		ibuffer [100] ;$/;"	v	file:
id	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
id	.\libsndfile-1.0.17\src\sd2.c	/^	int id ;$/;"	m	struct:__anon52	file:	access:public
ieee_replace	.\libsndfile-1.0.17\src\common.h	/^	int				ieee_replace ;$/;"	m	struct:sf_private_tag	access:public
ima	.\libsndfile-1.0.17\src\wav_w64.h	/^	IMA_ADPCM_WAV_FMT	ima ;$/;"	m	union:__anon74	access:public
ima4_MARKER	.\libsndfile-1.0.17\src\aiff.c	76;"	d	file:
ima4_MARKER	.\libsndfile-1.0.17\src\caf.c	44;"	d	file:
ima_close	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
ima_close	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int	ima_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
ima_indx_adjust	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int ima_indx_adjust [16] =$/;"	v	file:
ima_read_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_read_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, short *ptr, int len)
ima_read_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int ima_read_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, short *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, short *ptr, int len)
ima_read_d	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
ima_read_d	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
ima_read_f	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
ima_read_f	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
ima_read_i	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
ima_read_i	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
ima_read_s	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
ima_read_s	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
ima_reader_init	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_reader_init (SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f	file:	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
ima_reader_init	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int ima_reader_init (SF_PRIVATE *psf, int blockalign, int samplesperblock) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
ima_seek	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
ima_seek	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t	ima_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
ima_step_size	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int ima_step_size [89] =$/;"	v	file:
ima_write_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_write_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, const short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, const short *ptr, int len)
ima_write_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int ima_write_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, const short *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima, const short *ptr, int len)
ima_write_d	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
ima_write_d	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
ima_write_f	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
ima_write_f	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
ima_write_i	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
ima_write_i	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
ima_write_s	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
ima_write_s	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static sf_count_t ima_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
ima_writer_init	.\libsndfile-1.0.17\src\ima_adpcm.c	/^ima_writer_init (SF_PRIVATE *psf, int blockalign)$/;"	f	file:	signature:(SF_PRIVATE *psf, int blockalign)
ima_writer_init	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int ima_writer_init (SF_PRIVATE *psf, int blockalign) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int blockalign)
in32_MARKER	.\libsndfile-1.0.17\src\aiff.c	61;"	d	file:
increment_open_file_count	.\libsndfile-1.0.17\tests\utils.c	/^increment_open_file_count (void)$/;"	f	signature:(void)
increment_open_file_count	.\libsndfile-1.0.17\tests\utils.h	/^void	increment_open_file_count (void) ;$/;"	p	signature:(void)
index	.\libsndfile-1.0.17\src\dwvw.c	/^	{	int				index, end ;$/;"	m	struct:__anon34::__anon35	file:	access:public
infileinfo	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	SF_INFO	infileinfo, outfileinfo ;$/;"	m	struct:__anon2	file:	access:public
infilename	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^{	char	*infilename, *outfilename ;$/;"	m	struct:__anon2	file:	access:public
info_MARKER	.\libsndfile-1.0.17\src\caf.c	45;"	d	file:
info_dump	.\libsndfile-1.0.17\examples\sndfile-info.c	/^info_dump (const char *filename)$/;"	f	file:	signature:(const char *filename)
info_dump	.\libsndfile-1.0.17\examples\sndfile-info.c	/^static void info_dump (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
inst_MARKER	.\libsndfile-1.0.17\src\caf.c	46;"	d	file:
instrument	.\libsndfile-1.0.17\src\common.h	/^	SF_INSTRUMENT	*instrument ;$/;"	m	struct:sf_private_tag	access:public
instrument_dump	.\libsndfile-1.0.17\examples\sndfile-info.c	/^instrument_dump (const char *filename)$/;"	f	file:	signature:(const char *filename)
instrument_dump	.\libsndfile-1.0.17\examples\sndfile-info.c	/^static void instrument_dump (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
instrument_test	.\libsndfile-1.0.17\tests\command_test.c	/^instrument_test (const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
instrument_test	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	instrument_test		(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
int64_t	.\libsndfile-1.0.17\src\sfendian.h	/^typedef __int64 int64_t ;$/;"	t
int64_t	.\libsndfile-1.0.17\src\sfendian.h	/^typedef long int64_t ;$/;"	t
int64_t	.\libsndfile-1.0.17\src\sfendian.h	/^typedef long long int64_t ;$/;"	t
int_checksum	.\libsndfile-1.0.17\regtest\checksum.c	/^int_checksum (SNDFILE * file, int start)$/;"	f	file:	signature:(SNDFILE * file, int start)
int_checksum	.\libsndfile-1.0.17\regtest\checksum.c	/^static int int_checksum (SNDFILE * file, int start) ;$/;"	p	file:	signature:(SNDFILE * file, int start)
int_data	.\libsndfile-1.0.17\tests\command_test.c	/^static	int		int_data	[BUFFER_LEN] ;$/;"	v	file:
int_data	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static int		int_data [DFT_DATA_LENGTH] ;$/;"	v	file:
interleave	.\libsndfile-1.0.17\src\common.h	/^	void			*interleave ;$/;"	m	struct:sf_private_tag	access:public
interleave_init	.\libsndfile-1.0.17\src\common.h	/^int		interleave_init (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
interleave_init	.\libsndfile-1.0.17\src\interleave.c	/^interleave_init	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
interleave_read_double	.\libsndfile-1.0.17\src\interleave.c	/^interleave_read_double	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
interleave_read_double	.\libsndfile-1.0.17\src\interleave.c	/^static sf_count_t	interleave_read_double	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
interleave_read_float	.\libsndfile-1.0.17\src\interleave.c	/^interleave_read_float	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
interleave_read_float	.\libsndfile-1.0.17\src\interleave.c	/^static sf_count_t	interleave_read_float	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
interleave_read_int	.\libsndfile-1.0.17\src\interleave.c	/^interleave_read_int	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
interleave_read_int	.\libsndfile-1.0.17\src\interleave.c	/^static sf_count_t	interleave_read_int	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
interleave_read_short	.\libsndfile-1.0.17\src\interleave.c	/^interleave_read_short	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
interleave_read_short	.\libsndfile-1.0.17\src\interleave.c	/^static sf_count_t	interleave_read_short	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
interleave_seek	.\libsndfile-1.0.17\src\interleave.c	/^interleave_seek	(SF_PRIVATE *psf, int mode, sf_count_t samples_from_start)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t samples_from_start)
interleave_seek	.\libsndfile-1.0.17\src\interleave.c	/^static sf_count_t	interleave_seek	(SF_PRIVATE*, int mode, sf_count_t samples_from_start) ;$/;"	p	file:	signature:(SF_PRIVATE*, int mode, sf_count_t samples_from_start)
ircam_close	.\libsndfile-1.0.17\src\ircam.c	/^ircam_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
ircam_close	.\libsndfile-1.0.17\src\ircam.c	/^static	int		ircam_close			(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
ircam_open	.\libsndfile-1.0.17\src\common.h	/^int		ircam_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
ircam_open	.\libsndfile-1.0.17\src\ircam.c	/^ircam_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
ircam_read_header	.\libsndfile-1.0.17\src\ircam.c	/^ircam_read_header	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
ircam_read_header	.\libsndfile-1.0.17\src\ircam.c	/^static	int		ircam_read_header	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
ircam_write_header	.\libsndfile-1.0.17\src\ircam.c	/^ircam_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
ircam_write_header	.\libsndfile-1.0.17\src\ircam.c	/^static	int		ircam_write_header	(SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
is_data_really_float	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^is_data_really_float (SNDFILE *sndfile)$/;"	f	file:	signature:(SNDFILE *sndfile)
is_data_really_float	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^static int is_data_really_float (SNDFILE *sndfile) ;$/;"	p	file:	signature:(SNDFILE *sndfile)
is_pipe	.\libsndfile-1.0.17\src\common.h	/^	int				is_pipe ;		\/* True if file is a pipe. *\/$/;"	m	struct:sf_private_tag	access:public
item_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int item_offset ;$/;"	m	struct:__anon51	file:	access:public
j	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			j;				\/*                              *\/$/;"	m	struct:gsm_state	access:public
key_hi	.\sndfile.h	/^	char key_lo, key_hi ;$/;"	m	struct:__anon96	access:public
key_lo	.\sndfile.h	/^	char key_lo, key_hi ;$/;"	m	struct:__anon96	access:public
kuki_MARKER	.\libsndfile-1.0.17\src\caf.c	47;"	d	file:
labl_MARKER	.\libsndfile-1.0.17\src\wav.c	52;"	d	file:
largefile_test	.\libsndfile-1.0.17\tests\largefile_test.c	/^largefile_test (int filetype, const char * filename)$/;"	f	file:	signature:(int filetype, const char * filename)
largefile_test	.\libsndfile-1.0.17\tests\largefile_test.c	/^static void largefile_test (int filetype, const char * filename) ;$/;"	p	file:	signature:(int filetype, const char * filename)
last	.\libsndfile-1.0.17\src\vox_adpcm.c	/^{	short last ;$/;"	m	struct:__anon60	file:	access:public
last_16	.\libsndfile-1.0.17\src\xi.c	/^	short	last_16 ;$/;"	m	struct:__anon76	file:	access:public
last_delta_width	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
last_op	.\libsndfile-1.0.17\src\common.h	/^	int				last_op ;		\/* Last operation; either SFM_READ or SFM_WRITE *\/$/;"	m	struct:sf_private_tag	access:public
last_sample	.\libsndfile-1.0.17\src\dwvw.c	/^	int		bit_count, bits, last_delta_width, last_sample ;$/;"	m	struct:__anon34	file:	access:public
lbeg	.\libsndfile-1.0.17\src\avr.c	/^	int		lbeg ;		\/* offset to start of loop in bytes or words. *\/$/;"	m	struct:__anon21	file:	access:public
lbuf	.\libsndfile-1.0.17\src\common.h	/^		int64_t			lbuf	[SF_BUFFER_LEN \/ sizeof (int64_t)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
lbuf	.\libsndfile-1.0.17\src\common.h	/^		long			lbuf	[SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
lcomp_test_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^lcomp_test_double (const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
lcomp_test_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	lcomp_test_double	(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
lcomp_test_float	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^lcomp_test_float (const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
lcomp_test_float	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	lcomp_test_float	(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
lcomp_test_int	.\libsndfile-1.0.17\tests\fix_this.c	/^lcomp_test_int (const char *str, const char *filename, int filetype, double margin)$/;"	f	file:	signature:(const char *str, const char *filename, int filetype, double margin)
lcomp_test_int	.\libsndfile-1.0.17\tests\fix_this.c	/^static	void	lcomp_test_int	(const char *str, const char *filename, int filetype, double margin) ;$/;"	p	file:	signature:(const char *str, const char *filename, int filetype, double margin)
lcomp_test_int	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^lcomp_test_int (const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
lcomp_test_int	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	lcomp_test_int		(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
lcomp_test_short	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^lcomp_test_short (const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
lcomp_test_short	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	lcomp_test_short	(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
legal_sample_rates	.\libsndfile-1.0.17\src\flac.c	/^static const int legal_sample_rates [] =$/;"	v	file:
lei2d_array	.\libsndfile-1.0.17\src\pcm.c	/^lei2d_array (int *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(int *src, int count, double *dest, double normfact)
lei2f_array	.\libsndfile-1.0.17\src\pcm.c	/^lei2f_array (int *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(int *src, int count, float *dest, float normfact)
lei2s_array	.\libsndfile-1.0.17\src\pcm.c	/^lei2s_array (int *src, int count, short *dest)$/;"	f	file:	signature:(int *src, int count, short *dest)
len	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	int			len ;$/;"	m	struct:__anon3	file:	access:public
len	.\libsndfile-1.0.17\src\flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon37	file:	access:public
lend	.\libsndfile-1.0.17\src\avr.c	/^	int		lend ;		\/* offset to end of loop in bytes or words. *\/$/;"	m	struct:__anon21	file:	access:public
length	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^{	sf_count_t offset, length ;$/;"	m	struct:__anon84	file:	access:public
length	.\sndfile.h	/^	sf_count_t	length ;$/;"	m	struct:__anon94	access:public
les2d_array	.\libsndfile-1.0.17\src\pcm.c	/^les2d_array (short *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(short *src, int count, double *dest, double normfact)
les2f_array	.\libsndfile-1.0.17\src\pcm.c	/^les2f_array (short *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(short *src, int count, float *dest, float normfact)
les2i_array	.\libsndfile-1.0.17\src\pcm.c	/^les2i_array (short *src, int count, int *dest)$/;"	f	file:	signature:(short *src, int count, int *dest)
let2d_array	.\libsndfile-1.0.17\src\pcm.c	/^let2d_array (tribyte *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(tribyte *src, int count, double *dest, double normfact)
let2f_array	.\libsndfile-1.0.17\src\pcm.c	/^let2f_array (tribyte *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(tribyte *src, int count, float *dest, float normfact)
let2i_array	.\libsndfile-1.0.17\src\pcm.c	/^let2i_array (tribyte *src, int count, int *dest)$/;"	f	file:	signature:(tribyte *src, int count, int *dest)
let2s_array	.\libsndfile-1.0.17\src\pcm.c	/^let2s_array (tribyte *src, int count, short *dest)$/;"	f	file:	signature:(tribyte *src, int count, short *dest)
level	.\sndfile.h	/^	double		level ;$/;"	m	struct:__anon93	access:public
levl_MARKER	.\libsndfile-1.0.17\src\wav.c	57;"	d	file:
libsndfile_str_count	.\libsndfile-1.0.17\tests\string_test.c	/^libsndfile_str_count (const char * str)$/;"	f	file:	signature:(const char * str)
libsndfile_str_count	.\libsndfile-1.0.17\tests\string_test.c	/^static int libsndfile_str_count (const char * cptr) ;$/;"	p	file:	signature:(const char * cptr)
linux_open_dsp_device	.\libsndfile-1.0.17\examples\sndfile-play.c	/^linux_open_dsp_device (int channels, int srate)$/;"	f	file:	signature:(int channels, int srate)
linux_open_dsp_device	.\libsndfile-1.0.17\examples\sndfile-play.c	/^static	int	linux_open_dsp_device (int channels, int srate) ;$/;"	p	file:	signature:(int channels, int srate)
linux_play	.\libsndfile-1.0.17\examples\sndfile-play.c	/^linux_play (int argc, char *argv [])$/;"	f	file:	signature:(int argc, char *argv [])
linux_symbols	.\libsndfile-1.0.17\src\create_symbols_file.py	/^def linux_symbols (progname, version):$/;"	f	access:public
locale	.\libsndfile-1.0.17\tests\locale_test.c	/^{	const char *locale ;$/;"	m	struct:__anon79	file:	access:public
locale_test	.\libsndfile-1.0.17\tests\locale_test.c	/^locale_test (const char * locname, const char * filename, int width)$/;"	f	file:	signature:(const char * locname, const char * filename, int width)
locale_test	.\libsndfile-1.0.17\tests\locale_test.c	/^static void locale_test (const char * locname, const char * filename, int width) ;$/;"	p	file:	signature:(const char * locname, const char * filename, int width)
locations	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	/^static const char * locations [] =$/;"	v	file:
log_buffer	.\libsndfile-1.0.17\tests\peak_chunk_test.c	/^static	char	log_buffer [LOG_BUFFER_SIZE] ;$/;"	v	file:
log_putchar	.\libsndfile-1.0.17\src\common.c	/^log_putchar (SF_PRIVATE *psf, char ch)$/;"	f	file:	signature:(SF_PRIVATE *psf, char ch)
logbuf	.\libsndfile-1.0.17\regtest\database.c	/^	char logbuf [1 << 14] ;$/;"	m	struct:__anon7	file:	access:public
logbuffer	.\libsndfile-1.0.17\src\common.h	/^	char			logbuffer	[SF_BUFFER_LEN] ;$/;"	m	struct:sf_private_tag	access:public
logindex	.\libsndfile-1.0.17\src\common.h	/^	int				logindex ;$/;"	m	struct:sf_private_tag	access:public
long_comment	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static const char *long_comment =$/;"	v	file:
longword	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^typedef int					longword;	\/* 32 bit signed int	*\/$/;"	t
loop	.\libsndfile-1.0.17\src\avr.c	/^	short	loop ;		\/* 0 = no loop, 0xffff = looping sample *\/$/;"	m	struct:__anon21	file:	access:public
loopType	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	loopType ;$/;"	m	struct:__anon16	file:	access:public
loop_begin	.\libsndfile-1.0.17\src\xi.c	/^	int		loop_begin, loop_end ;$/;"	m	struct:__anon76	file:	access:public
loop_count	.\sndfile.h	/^	int loop_count ;$/;"	m	struct:__anon96	access:public
loop_end	.\libsndfile-1.0.17\src\xi.c	/^	int		loop_begin, loop_end ;$/;"	m	struct:__anon76	file:	access:public
loop_info	.\libsndfile-1.0.17\src\common.h	/^	SF_LOOP_INFO	*loop_info ;$/;"	m	struct:sf_private_tag	access:public
loop_mode	.\sndfile.h	/^	int		loop_mode ;		\/* see SF_LOOP enum             *\/$/;"	m	struct:__anon98	access:public
loops	.\sndfile.h	/^	} loops [16] ; \/* make variable in a sensible way *\/$/;"	m	struct:__anon96	typeref:struct:__anon96::__anon97	access:public
lowNote	.\libsndfile-1.0.17\src\aiff.c	/^	char		lowNote ;$/;"	m	struct:__anon13	file:	access:public
lowVelocity	.\libsndfile-1.0.17\src\aiff.c	/^	char		lowVelocity ;	\/* 1 to 127 *\/$/;"	m	struct:__anon13	file:	access:public
lpcm_MARKER	.\libsndfile-1.0.17\src\caf.c	48;"	d	file:
lrint	.\libsndfile-1.0.17\src\float_cast.h	/^	lrint (double flt)$/;"	f	signature:(double flt)
lrint	.\libsndfile-1.0.17\src\float_cast.h	168;"	d
lrint	.\libsndfile-1.0.17\src\float_cast.h	171;"	d
lrint	.\libsndfile-1.0.17\src\float_cast.h	204;"	d
lrint	.\libsndfile-1.0.17\src\float_cast.h	207;"	d
lrint	.\libsndfile-1.0.17\src\float_cast.h	248;"	d
lrint	.\libsndfile-1.0.17\src\float_cast.h	83;"	d
lrint	.\libsndfile-1.0.17\src\float_cast.h	86;"	d
lrintf	.\libsndfile-1.0.17\src\float_cast.h	/^	lrintf (float flt)$/;"	f	signature:(float flt)
lrintf	.\libsndfile-1.0.17\src\float_cast.h	169;"	d
lrintf	.\libsndfile-1.0.17\src\float_cast.h	172;"	d
lrintf	.\libsndfile-1.0.17\src\float_cast.h	205;"	d
lrintf	.\libsndfile-1.0.17\src\float_cast.h	208;"	d
lrintf	.\libsndfile-1.0.17\src\float_cast.h	249;"	d
lrintf	.\libsndfile-1.0.17\src\float_cast.h	84;"	d
lrintf	.\libsndfile-1.0.17\src\float_cast.h	87;"	d
lrintf_test	.\libsndfile-1.0.17\tests\pcm_test.c	/^lrintf_test (void)$/;"	f	file:	signature:(void)
lrintf_test	.\libsndfile-1.0.17\tests\pcm_test.c	/^static void	lrintf_test (void) ;$/;"	p	file:	signature:(void)
lsf1_MARKER	.\libsndfile-1.0.17\src\sd2.c	48;"	d	file:
ltp_cut	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word	        ltp_cut;        \/* long_term.c, LTP crosscorr.  *\/$/;"	m	struct:gsm_state	access:public
ltxt_MARKER	.\libsndfile-1.0.17\src\wav.c	53;"	d	file:
macbinary3_open	.\libsndfile-1.0.17\src\common.h	/^int		macbinary3_open (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
macbinary3_open	.\libsndfile-1.0.17\src\macbinary3.c	/^macbinary3_open (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
macos_guess_file_type	.\libsndfile-1.0.17\src\common.h	/^int macos_guess_file_type (SF_PRIVATE *psf, const char *filename) ;$/;"	p	signature:(SF_PRIVATE *psf, const char *filename)
macos_guess_file_type	.\libsndfile-1.0.17\src\macos.c	/^macos_guess_file_type (SF_PRIVATE *psf, const char *filename)$/;"	f	signature:(SF_PRIVATE *psf, const char *filename)
macosx_audio_out_callback	.\libsndfile-1.0.17\examples\sndfile-play.c	/^macosx_audio_out_callback (AudioDeviceID device, const AudioTimeStamp* current_time,$/;"	f	file:	signature:(AudioDeviceID device, const AudioTimeStamp* current_time, const AudioBufferList* data_in, const AudioTimeStamp* time_in, AudioBufferList* data_out, const AudioTimeStamp* time_out, void* client_data)
macosx_play	.\libsndfile-1.0.17\examples\sndfile-play.c	/^macosx_play (int argc, char *argv [])$/;"	f	file:	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\Win32\testprog.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\examples\generate.c	/^main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	.\libsndfile-1.0.17\examples\list_formats.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\examples\make_sine.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\examples\sfprocess.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^main (int argc, char * argv [])$/;"	f	signature:(int argc, char * argv [])
main	.\libsndfile-1.0.17\examples\sndfile-info.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\examples\sndfile-play.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^main (int argc, char * argv [])$/;"	f	signature:(int argc, char * argv [])
main	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\src\test_endswap.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\src\test_file_io.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\src\test_log_printf.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\aiff_rw_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\alaw_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\benchmark.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\command_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\cpp_test.cc	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\dither_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\dwvw_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\error_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\fix_this.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\floating_point_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\header_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\headerless_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\largefile_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\locale_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\misc_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\multi_file_test.c	/^main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	.\libsndfile-1.0.17\tests\open_fail_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\pcm_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\peak_chunk_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\pipe_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\raw_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\scale_clip_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\sfversion.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\stdin_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\stdio_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\stdout_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\string_test.c	/^main (int argc, char *argv [])$/;"	f	signature:(int argc, char *argv [])
main	.\libsndfile-1.0.17\tests\ulaw_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\win32_test.c	/^main (void)$/;"	f	signature:(void)
main	.\libsndfile-1.0.17\tests\write_read_test.c	/^main (int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	.\testprog.c	/^main (void)$/;"	f	signature:(void)
major	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
major_formats	.\libsndfile-1.0.17\src\command.c	/^static SF_FORMAT_INFO const major_formats [] =$/;"	v	file:
make_data	.\libsndfile-1.0.17\src\test_file_io.c	/^make_data (int *data, int len, int seed)$/;"	f	file:	signature:(int *data, int len, int seed)
make_data	.\libsndfile-1.0.17\src\test_file_io.c	/^static void make_data (int *data, int len, int seed) ;$/;"	p	file:	signature:(int *data, int len, int seed)
make_size_t	.\libsndfile-1.0.17\src\common.h	/^make_size_t (int x)$/;"	f	signature:(int x)
map_length	.\libsndfile-1.0.17\src\sd2.c	/^	int map_offset, map_length ;$/;"	m	struct:__anon51	file:	access:public
map_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int map_offset, map_length ;$/;"	m	struct:__anon51	file:	access:public
mark_MARKER	.\libsndfile-1.0.17\src\caf.c	49;"	d	file:
marker	.\libsndfile-1.0.17\src\avr.c	/^{	int		marker ;	\/* 2BIT *\/$/;"	m	struct:__anon21	file:	access:public
markerID	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned short	markerID ;$/;"	m	struct:__anon17	file:	access:public
marker_to_position	.\libsndfile-1.0.17\src\aiff.c	/^marker_to_position (const MARK_ID_POS *m, unsigned short n, int marksize)$/;"	f	file:	signature:(const MARK_ID_POS *m, unsigned short n, int marksize)
marker_to_position	.\libsndfile-1.0.17\src\aiff.c	/^static unsigned int marker_to_position (const MARK_ID_POS *m, unsigned short n, int marksize) ;$/;"	p	file:	signature:(const MARK_ID_POS *m, unsigned short n, int marksize)
mat4_close	.\libsndfile-1.0.17\src\mat4.c	/^mat4_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
mat4_close	.\libsndfile-1.0.17\src\mat4.c	/^static	int		mat4_close		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
mat4_format_to_encoding	.\libsndfile-1.0.17\src\mat4.c	/^mat4_format_to_encoding (int format, int endian)$/;"	f	file:	signature:(int format, int endian)
mat4_format_to_encoding	.\libsndfile-1.0.17\src\mat4.c	/^static	int 	mat4_format_to_encoding	(int format, int endian) ;$/;"	p	file:	signature:(int format, int endian)
mat4_marker_to_str	.\libsndfile-1.0.17\src\mat4.c	/^mat4_marker_to_str (int marker)$/;"	f	file:	signature:(int marker)
mat4_marker_to_str	.\libsndfile-1.0.17\src\mat4.c	/^static const char * mat4_marker_to_str (int marker) ;$/;"	p	file:	signature:(int marker)
mat4_open	.\libsndfile-1.0.17\src\common.h	/^int		mat4_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
mat4_open	.\libsndfile-1.0.17\src\mat4.c	/^mat4_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
mat4_read_header	.\libsndfile-1.0.17\src\mat4.c	/^mat4_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
mat4_read_header	.\libsndfile-1.0.17\src\mat4.c	/^static int		mat4_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
mat4_write_header	.\libsndfile-1.0.17\src\mat4.c	/^mat4_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
mat4_write_header	.\libsndfile-1.0.17\src\mat4.c	/^static int		mat4_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
mat5_close	.\libsndfile-1.0.17\src\mat5.c	/^mat5_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
mat5_close	.\libsndfile-1.0.17\src\mat5.c	/^static int		mat5_close		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
mat5_open	.\libsndfile-1.0.17\src\common.h	/^int		mat5_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
mat5_open	.\libsndfile-1.0.17\src\mat5.c	/^mat5_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
mat5_read_header	.\libsndfile-1.0.17\src\mat5.c	/^mat5_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
mat5_read_header	.\libsndfile-1.0.17\src\mat5.c	/^static int		mat5_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
mat5_write_header	.\libsndfile-1.0.17\src\mat5.c	/^mat5_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
mat5_write_header	.\libsndfile-1.0.17\src\mat5.c	/^static int		mat5_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
max_blocks	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
max_delta	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
maxval	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned short srate, maxval ;$/;"	m	struct:__anon33	file:	access:public
metadata	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_meta_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), const FLAC__StreamMetadata *metadata, void *client_data)$/;"	v	file:
midi	.\libsndfile-1.0.17\src\avr.c	/^	short	midi ;		\/* 0xffff = no MIDI note assigned,  *\/$/;"	m	struct:__anon21	file:	access:public
midi_MARKER	.\libsndfile-1.0.17\src\caf.c	50;"	d	file:
min	.\libsndfile-1.0.17\src\wav_w64.h	/^	MIN_WAV_FMT			min ;$/;"	m	union:__anon74	access:public
minor	.\libsndfile-1.0.17\src\dwd.c	/^{	unsigned char major, minor, compression, channels, bitwidth ;$/;"	m	struct:__anon33	file:	access:public
missing_snprintf	.\libsndfile-1.0.17\src\common.h	/^int missing_snprintf (char *str, size_t n, char const *fmt, ...) ;$/;"	p	signature:(char *str, size_t n, char const *fmt, ...)
missing_vsnprintf	.\libsndfile-1.0.17\src\common.h	/^int missing_vsnprintf (char *str, size_t n, const char *fmt, ...) ;$/;"	p	signature:(char *str, size_t n, const char *fmt, ...)
mode	.\libsndfile-1.0.17\src\common.h	/^	int				mode ;			\/* Open mode : SFM_READ, SFM_WRITE or SFM_RDWR. *\/$/;"	m	struct:sf_private_tag	access:public
mode	.\sndfile.h	/^	{	int mode ;$/;"	m	struct:__anon96::__anon97	access:public
mono	.\libsndfile-1.0.17\src\avr.c	/^	short	mono ;		\/* 0 = mono, 0xffff = stereo *\/$/;"	m	struct:__anon21	file:	access:public
mono_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_24bit_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_24bit_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_char_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_char_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_double_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_double_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_float_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_float_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_int_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_int_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_rdwr_24bit_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_rdwr_24bit_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_rdwr_char_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_rdwr_char_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_rdwr_double_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_rdwr_double_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_rdwr_float_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_rdwr_float_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_rdwr_int_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_rdwr_int_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_rdwr_short_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_rdwr_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_rdwr_short_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^mono_short_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mono_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void mono_short_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
mp	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	int				mp;			\/*                  Preemphasis	*\/$/;"	m	struct:gsm_state	access:public
mp1_MARKER	.\libsndfile-1.0.17\src\caf.c	51;"	d	file:
mp2_MARKER	.\libsndfile-1.0.17\src\caf.c	52;"	d	file:
mp3_MARKER	.\libsndfile-1.0.17\src\caf.c	53;"	d	file:
mpeg_open	.\libsndfile-1.0.17\src\common.h	/^int		mpeg_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
msadpcm	.\libsndfile-1.0.17\src\wav_w64.h	/^	MS_ADPCM_WAV_FMT	msadpcm ;$/;"	m	union:__anon74	access:public
msadpcm_close	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
msadpcm_close	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static	int	msadpcm_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
msadpcm_decode_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_decode_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)$/;"	f	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)
msadpcm_decode_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static	int	msadpcm_decode_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)
msadpcm_encode_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_encode_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)$/;"	f	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)
msadpcm_encode_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static	int	msadpcm_encode_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms)
msadpcm_read_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_read_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, short *ptr, int len)
msadpcm_read_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t msadpcm_read_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, short *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, short *ptr, int len)
msadpcm_read_d	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
msadpcm_read_d	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
msadpcm_read_f	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
msadpcm_read_f	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
msadpcm_read_i	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
msadpcm_read_i	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
msadpcm_read_s	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_read_s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
msadpcm_read_s	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_read_s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
msadpcm_seek	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
msadpcm_seek	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t msadpcm_seek	(SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
msadpcm_write_adapt_coeffs	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_write_adapt_coeffs	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
msadpcm_write_adapt_coeffs	.\libsndfile-1.0.17\src\wav_w64.h	/^void	msadpcm_write_adapt_coeffs (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
msadpcm_write_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_write_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, const short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, const short *ptr, int len)
msadpcm_write_block	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t msadpcm_write_block	(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, const short *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, MSADPCM_PRIVATE *pms, const short *ptr, int len)
msadpcm_write_d	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
msadpcm_write_d	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
msadpcm_write_f	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
msadpcm_write_f	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
msadpcm_write_i	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
msadpcm_write_i	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
msadpcm_write_s	.\libsndfile-1.0.17\src\ms_adpcm.c	/^msadpcm_write_s	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
msadpcm_write_s	.\libsndfile-1.0.17\src\ms_adpcm.c	/^static sf_count_t	msadpcm_write_s	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
msr	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			msr;			\/* decoder.c,	Postprocessing	*\/$/;"	m	struct:gsm_state	access:public
multi_file_test	.\libsndfile-1.0.17\tests\multi_file_test.c	/^multi_file_test (const char *filename, int *formats, int format_count)$/;"	f	file:	signature:(const char *filename, int *formats, int format_count)
multi_file_test	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static void multi_file_test (const char *filename, int *formats, int format_count) ;$/;"	p	file:	signature:(const char *filename, int *formats, int format_count)
mutex	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	CRITICAL_SECTION	mutex ;		\/* to control access to BuffersInUSe *\/$/;"	m	struct:__anon5	file:	access:public
name	.\libsndfile-1.0.17\src\avr.c	/^	char	name [8] ;	\/* null-padded sample name *\/$/;"	m	struct:__anon21	file:	access:public
name	.\libsndfile-1.0.17\src\mat5.c	/^	char		name [32] ;$/;"	m	struct:__anon44	file:	access:public
name	.\libsndfile-1.0.17\src\sd2.c	/^	char name [32] ;$/;"	m	struct:__anon52	file:	access:public
name	.\libsndfile-1.0.17\src\wav_w64.c	/^	const char	*name ;$/;"	m	struct:__anon63	file:	access:public
name	.\sndfile.h	/^	const char	*name ;$/;"	m	struct:__anon91	access:public
name	.\sndfile.h	/^	const char	*name ;$/;"	m	struct:__anon93	access:public
new_rdwr_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^new_rdwr_24bit_test (const char *filename, int format, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void new_rdwr_24bit_test (const char *filename, int format, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^new_rdwr_char_test (const char *filename, int format, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void new_rdwr_char_test (const char *filename, int format, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^new_rdwr_double_test (const char *filename, int format, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void new_rdwr_double_test (const char *filename, int format, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^new_rdwr_float_test (const char *filename, int format, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void new_rdwr_float_test (const char *filename, int format, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^new_rdwr_int_test (const char *filename, int format, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void new_rdwr_int_test (const char *filename, int format, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^new_rdwr_short_test (const char *filename, int format, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int allow_fd)
new_rdwr_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void new_rdwr_short_test (const char *filename, int format, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int allow_fd)
ni32_MARKER	.\libsndfile-1.0.17\src\aiff.c	62;"	d	file:
nist_close	.\libsndfile-1.0.17\src\nist.c	/^nist_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
nist_close	.\libsndfile-1.0.17\src\nist.c	/^static	int	nist_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
nist_open	.\libsndfile-1.0.17\src\common.h	/^int		nist_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
nist_open	.\libsndfile-1.0.17\src\nist.c	/^nist_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
nist_read_header	.\libsndfile-1.0.17\src\nist.c	/^nist_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
nist_read_header	.\libsndfile-1.0.17\src\nist.c	/^static	int nist_read_header	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
nist_write_header	.\libsndfile-1.0.17\src\nist.c	/^nist_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
nist_write_header	.\libsndfile-1.0.17\src\nist.c	/^static	int nist_write_header	(SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
no_symbols	.\libsndfile-1.0.17\src\create_symbols_file.py	/^def no_symbols (os_name):$/;"	f	access:public
norm_double	.\libsndfile-1.0.17\src\common.h	/^	int				norm_double ;$/;"	m	struct:sf_private_tag	access:public
norm_float	.\libsndfile-1.0.17\src\common.h	/^	int				norm_float ;$/;"	m	struct:sf_private_tag	access:public
note1	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="note1"><\/A>$/;"	a
note1	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="note1"><\/A>$/;"	a
note2	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="note2"><\/A>$/;"	a
note2	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="note2"><\/A>$/;"	a
note_MARKER	.\libsndfile-1.0.17\src\wav.c	54;"	d	file:
nrp	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			nrp; 			\/* 40 *\/	\/* long_term.c, synthesis	*\/$/;"	m	struct:gsm_state	access:public
numBeats	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	numBeats ;$/;"	m	struct:__anon16	file:	access:public
numChannels	.\libsndfile-1.0.17\src\aiff.c	/^	short			numChannels ;$/;"	m	struct:__anon10	file:	access:public
numSampleFrames	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	numSampleFrames ;$/;"	m	struct:__anon10	file:	access:public
num_beats	.\sndfile.h	/^	int		num_beats ;		\/* this is NOT the amount of quarter notes !!!*\/$/;"	m	struct:__anon98	access:public
numcoeffs	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	numcoeffs ;$/;"	m	struct:__anon67	access:public
oct_save_double	.\libsndfile-1.0.17\tests\utils.c	/^oct_save_double	(double *a, double *b, int len)$/;"	f	signature:(double *a, double *b, int len)
oct_save_double	.\libsndfile-1.0.17\tests\utils.h	/^int	oct_save_double	(double *a, double *b, int len) ;$/;"	p	signature:(double *a, double *b, int len)
oct_save_float	.\libsndfile-1.0.17\tests\utils.c	/^oct_save_float	(float *a, float *b, int len)$/;"	f	signature:(float *a, float *b, int len)
oct_save_float	.\libsndfile-1.0.17\tests\utils.h	/^int	oct_save_float	(float *a, float *b, int len) ;$/;"	p	signature:(float *a, float *b, int len)
oct_save_int	.\libsndfile-1.0.17\tests\utils.c	/^oct_save_int	(int *a, int *b, int len)$/;"	f	signature:(int *a, int *b, int len)
oct_save_int	.\libsndfile-1.0.17\tests\utils.h	/^int	oct_save_int	(int *a, int *b, int len) ;$/;"	p	signature:(int *a, int *b, int len)
oct_save_short	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^oct_save_short	(short *a, short *b, int len)$/;"	f	file:	signature:(short *a, short *b, int len)
oct_save_short	.\libsndfile-1.0.17\src\G72x\g72x_test.c	/^static int	oct_save_short	(short *a, short *b, int len) ;$/;"	p	file:	signature:(short *a, short *b, int len)
oct_save_short	.\libsndfile-1.0.17\tests\utils.c	/^oct_save_short	(short *a, short *b, int len)$/;"	f	signature:(short *a, short *b, int len)
oct_save_short	.\libsndfile-1.0.17\tests\utils.h	/^int	oct_save_short	(short *a, short *b, int len) ;$/;"	p	signature:(short *a, short *b, int len)
octave	.\libsndfile-1.0.17\src\svx.c	/^	unsigned char	octave, compression ;$/;"	m	struct:__anon54	file:	access:public
octfilename	.\libsndfile-1.0.17\tests\utils.c	/^static char octfilename [] = "error.dat" ;$/;"	v	file:
offset	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned int	offset ;$/;"	m	struct:__anon11	file:	access:public
offset	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned int id, datalen, frames, offset ;$/;"	m	struct:__anon33	file:	access:public
offset	.\libsndfile-1.0.17\src\voc.c	/^	int		offset ;	\/* Offset of zero => silence. *\/$/;"	m	struct:__anon58	file:	access:public
offset	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^{	sf_count_t offset, length ;$/;"	m	struct:__anon84	file:	access:public
offset	.\sndfile.h	/^{	sf_count_t	offset ;$/;"	m	struct:__anon94	access:public
ogg_open	.\libsndfile-1.0.17\src\common.h	/^int		ogg_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
ogg_open	.\libsndfile-1.0.17\src\ogg.c	/^ogg_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
old_test	.\libsndfile-1.0.17\tests\headerless_test.c	/^old_test (void)$/;"	f	file:	signature:(void)
old_test	.\libsndfile-1.0.17\tests\headerless_test.c	/^static void old_test (void) ;$/;"	p	file:	signature:(void)
oneShotHiSamples	.\libsndfile-1.0.17\src\svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon54	file:	access:public
open	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="open"><\/A>$/;"	a
open	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="open"><\/A>$/;"	a
open_fd	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="open_fd"><\/A>$/;"	a
open_fd	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="open_fd"><\/A>$/;"	a
operator =	.\libsndfile-1.0.17\src\sndfile.hh	/^			SndfileHandle & operator = (const SndfileHandle &rhs) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs)
operator =	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::operator = (const SndfileHandle &rhs)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &rhs)
operator =	.\sndfile.hh	/^			SndfileHandle & operator = (const SndfileHandle &rhs) ;$/;"	p	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs)
operator =	.\sndfile.hh	/^SndfileHandle::operator = (const SndfileHandle &rhs)$/;"	f	class:SndfileHandle	signature:(const SndfileHandle &rhs)
operator ==	.\libsndfile-1.0.17\src\sndfile.hh	/^		bool operator == (const SndfileHandle &rhs) const { return (p == rhs.p) ; }$/;"	f	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs) const
operator ==	.\sndfile.hh	/^		bool operator == (const SndfileHandle &rhs) const { return (p == rhs.p) ; }$/;"	f	class:SndfileHandle	access:public	signature:(const SndfileHandle &rhs) const
operator bool	.\libsndfile-1.0.17\src\sndfile.hh	/^		operator bool () const { return (p != NULL) ; }$/;"	f	class:SndfileHandle	access:public	signature:() const
operator bool	.\sndfile.hh	/^		operator bool () const { return (p != NULL) ; }$/;"	f	class:SndfileHandle	access:public	signature:() const
orig_buffer	.\libsndfile-1.0.17\tests\fix_this.c	/^static	BUFFER	orig_buffer ;$/;"	v	file:
orig_buffer	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	BUFFER	orig_buffer ;$/;"	v	file:
orig_data	.\libsndfile-1.0.17\tests\write_read_test.c	/^static	BUFFER	orig_data ;$/;"	v	file:
origination_date	.\sndfile.h	/^	char			origination_date [10] ;$/;"	m	struct:__anon99	access:public
origination_time	.\sndfile.h	/^	char			origination_time [8] ;$/;"	m	struct:__anon99	access:public
originator	.\sndfile.h	/^	char			originator [32] ;$/;"	m	struct:__anon99	access:public
originator_reference	.\sndfile.h	/^	char			originator_reference [32] ;$/;"	m	struct:__anon99	access:public
outfileinfo	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^	SF_INFO	infileinfo, outfileinfo ;$/;"	m	struct:__anon2	file:	access:public
outfilename	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^{	char	*infilename, *outfilename ;$/;"	m	struct:__anon2	file:	access:public
ovvw_MARKER	.\libsndfile-1.0.17\src\caf.c	54;"	d	file:
p	.\libsndfile-1.0.17\src\sndfile.hh	/^		SNDFILE_ref *p ;$/;"	m	class:SndfileHandle	access:private
p	.\sndfile.hh	/^		SNDFILE_ref *p ;$/;"	m	class:SndfileHandle	access:private
pack_bytes	.\libsndfile-1.0.17\src\G72x\g72x.c	/^pack_bytes (int bits, const short * samples, unsigned char * block)$/;"	f	file:	signature:(int bits, const short * samples, unsigned char * block)
pack_bytes	.\libsndfile-1.0.17\src\G72x\g72x.c	/^static int pack_bytes (int bits, const short * samples, unsigned char * block) ;$/;"	p	file:	signature:(int bits, const short * samples, unsigned char * block)
padding	.\libsndfile-1.0.17\src\wav_w64.h	/^	char				padding [512] ;$/;"	m	union:__anon74	access:public
paf24_close	.\libsndfile-1.0.17\src\paf.c	/^paf24_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
paf24_close	.\libsndfile-1.0.17\src\paf.c	/^static int paf24_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
paf24_init	.\libsndfile-1.0.17\src\paf.c	/^paf24_init (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
paf24_init	.\libsndfile-1.0.17\src\paf.c	/^static int paf24_init (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
paf24_read	.\libsndfile-1.0.17\src\paf.c	/^paf24_read (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24, int *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24, int *ptr, int len)
paf24_read_block	.\libsndfile-1.0.17\src\paf.c	/^paf24_read_block (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)$/;"	f	file:	signature:(SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)
paf24_read_block	.\libsndfile-1.0.17\src\paf.c	/^static int paf24_read_block (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)
paf24_read_d	.\libsndfile-1.0.17\src\paf.c	/^paf24_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
paf24_read_d	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
paf24_read_f	.\libsndfile-1.0.17\src\paf.c	/^paf24_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
paf24_read_f	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
paf24_read_i	.\libsndfile-1.0.17\src\paf.c	/^paf24_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
paf24_read_i	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
paf24_read_s	.\libsndfile-1.0.17\src\paf.c	/^paf24_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
paf24_read_s	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
paf24_seek	.\libsndfile-1.0.17\src\paf.c	/^paf24_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
paf24_seek	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_seek (SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
paf24_write	.\libsndfile-1.0.17\src\paf.c	/^paf24_write (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24, const int *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24, const int *ptr, int len)
paf24_write_block	.\libsndfile-1.0.17\src\paf.c	/^paf24_write_block (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)$/;"	f	file:	signature:(SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)
paf24_write_block	.\libsndfile-1.0.17\src\paf.c	/^static int paf24_write_block (SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, PAF24_PRIVATE *ppaf24)
paf24_write_d	.\libsndfile-1.0.17\src\paf.c	/^paf24_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
paf24_write_d	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
paf24_write_f	.\libsndfile-1.0.17\src\paf.c	/^paf24_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
paf24_write_f	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
paf24_write_i	.\libsndfile-1.0.17\src\paf.c	/^paf24_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
paf24_write_i	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
paf24_write_s	.\libsndfile-1.0.17\src\paf.c	/^paf24_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
paf24_write_s	.\libsndfile-1.0.17\src\paf.c	/^static sf_count_t paf24_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
paf_open	.\libsndfile-1.0.17\src\common.h	/^int		paf_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
paf_open	.\libsndfile-1.0.17\src\paf.c	/^paf_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
paf_read_header	.\libsndfile-1.0.17\src\paf.c	/^paf_read_header	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
paf_read_header	.\libsndfile-1.0.17\src\paf.c	/^static int	paf_read_header	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
paf_write_header	.\libsndfile-1.0.17\src\paf.c	/^paf_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
paf_write_header	.\libsndfile-1.0.17\src\paf.c	/^static int	paf_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
pakt_MARKER	.\libsndfile-1.0.17\src\caf.c	55;"	d	file:
parse_str_rsrc	.\libsndfile-1.0.17\src\sd2.c	/^parse_str_rsrc (SF_PRIVATE *psf, SD2_RSRC * rsrc)$/;"	f	file:	signature:(SF_PRIVATE *psf, SD2_RSRC * rsrc)
parse_str_rsrc	.\libsndfile-1.0.17\src\sd2.c	/^static int parse_str_rsrc (SF_PRIVATE *psf, SD2_RSRC * rsrc) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SD2_RSRC * rsrc)
pathname	.\libsndfile-1.0.17\regtest\database.c	/^	char pathname [512] ;$/;"	m	struct:__anon7	file:	access:public
pcm_data	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	short 			pcm_data [PCM_DATA_LEN] ;$/;"	m	struct:__anon60	file:	access:public
pcm_init	.\libsndfile-1.0.17\src\common.h	/^int		pcm_init		(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
pcm_init	.\libsndfile-1.0.17\src\pcm.c	/^pcm_init (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
pcm_read_bei2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bei2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_bei2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bei2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_bei2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bei2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_bei2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bei2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_bei2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bei2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_bei2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bei2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_bei2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bei2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_bei2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bei2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_bes2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bes2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_bes2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bes2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_bes2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bes2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_bes2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bes2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_bes2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bes2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_bes2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bes2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_bes2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bes2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_bes2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bes2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_bet2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bet2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_bet2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bet2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_bet2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bet2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_bet2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bet2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_bet2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bet2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_bet2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bet2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_bet2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_bet2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_bet2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_bet2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_lei2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_lei2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_lei2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_lei2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_lei2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_lei2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_lei2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_lei2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_lei2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_lei2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_lei2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_lei2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_lei2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_lei2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_lei2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_lei2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_les2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_les2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_les2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_les2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_les2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_les2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_les2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_les2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_les2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_les2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_les2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_les2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_les2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_les2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_les2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_les2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_let2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_let2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_let2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_let2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_let2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_let2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_let2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_let2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_let2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_let2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_let2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_let2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_let2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_let2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_let2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_let2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_sc2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_sc2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_sc2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_sc2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_sc2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_sc2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_sc2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_sc2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_sc2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_sc2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_sc2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_sc2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_sc2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_sc2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_sc2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_sc2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_uc2d	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_uc2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_uc2d	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_uc2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
pcm_read_uc2f	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_uc2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_uc2f	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_uc2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
pcm_read_uc2i	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_uc2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_uc2i	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_uc2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
pcm_read_uc2s	.\libsndfile-1.0.17\src\pcm.c	/^pcm_read_uc2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_read_uc2s	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_read_uc2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
pcm_samples	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	int		vox_bytes, pcm_samples ;$/;"	m	struct:__anon60	file:	access:public
pcm_test_24bit	.\libsndfile-1.0.17\tests\write_read_test.c	/^pcm_test_24bit (const char *filename, int format, int long_file_ok)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok)
pcm_test_24bit	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void	pcm_test_24bit (const char *str, int format, int long_file_okz) ;$/;"	p	file:	signature:(const char *str, int format, int long_file_okz)
pcm_test_bits_16	.\libsndfile-1.0.17\tests\pcm_test.c	/^pcm_test_bits_16 (const char *filename, int filetype, int hash)$/;"	f	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_bits_16	.\libsndfile-1.0.17\tests\pcm_test.c	/^static void	pcm_test_bits_16	(const char *filename, int filetype, int hash) ;$/;"	p	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_bits_24	.\libsndfile-1.0.17\tests\pcm_test.c	/^pcm_test_bits_24 (const char *filename, int filetype, int hash)$/;"	f	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_bits_24	.\libsndfile-1.0.17\tests\pcm_test.c	/^static void	pcm_test_bits_24	(const char *filename, int filetype, int hash) ;$/;"	p	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_bits_32	.\libsndfile-1.0.17\tests\pcm_test.c	/^pcm_test_bits_32 (const char *filename, int filetype, int hash)$/;"	f	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_bits_32	.\libsndfile-1.0.17\tests\pcm_test.c	/^static void	pcm_test_bits_32	(const char *filename, int filetype, int hash) ;$/;"	p	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_bits_8	.\libsndfile-1.0.17\tests\pcm_test.c	/^pcm_test_bits_8 (const char *filename, int filetype, int hash)$/;"	f	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_bits_8	.\libsndfile-1.0.17\tests\pcm_test.c	/^static void	pcm_test_bits_8	(const char *filename, int filetype, int hash) ;$/;"	p	file:	signature:(const char *filename, int filetype, int hash)
pcm_test_char	.\libsndfile-1.0.17\tests\write_read_test.c	/^pcm_test_char (const char *filename, int format, int long_file_ok)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok)
pcm_test_char	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void	pcm_test_char (const char *str, int format, int long_file_okz) ;$/;"	p	file:	signature:(const char *str, int format, int long_file_okz)
pcm_test_double	.\libsndfile-1.0.17\tests\pcm_test.c	/^pcm_test_double (const char *filename, int	filetype, int hash, int replace_float)$/;"	f	file:	signature:(const char *filename, int filetype, int hash, int replace_float)
pcm_test_double	.\libsndfile-1.0.17\tests\pcm_test.c	/^static void pcm_test_double	(const char *filename, int filetype, int hash, int replace_float) ;$/;"	p	file:	signature:(const char *filename, int filetype, int hash, int replace_float)
pcm_test_double	.\libsndfile-1.0.17\tests\write_read_test.c	/^pcm_test_double (const char *filename, int format, int long_file_ok)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok)
pcm_test_double	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void	pcm_test_double (const char *str, int format, int long_file_okz) ;$/;"	p	file:	signature:(const char *str, int format, int long_file_okz)
pcm_test_float	.\libsndfile-1.0.17\tests\pcm_test.c	/^pcm_test_float (const char *filename, int filetype, int hash, int replace_float)$/;"	f	file:	signature:(const char *filename, int filetype, int hash, int replace_float)
pcm_test_float	.\libsndfile-1.0.17\tests\pcm_test.c	/^static void pcm_test_float	(const char *filename, int filetype, int hash, int replace_float) ;$/;"	p	file:	signature:(const char *filename, int filetype, int hash, int replace_float)
pcm_test_float	.\libsndfile-1.0.17\tests\write_read_test.c	/^pcm_test_float (const char *filename, int format, int long_file_ok)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok)
pcm_test_float	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void	pcm_test_float (const char *str, int format, int long_file_okz) ;$/;"	p	file:	signature:(const char *str, int format, int long_file_okz)
pcm_test_int	.\libsndfile-1.0.17\tests\write_read_test.c	/^pcm_test_int (const char *filename, int format, int long_file_ok)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok)
pcm_test_int	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void	pcm_test_int (const char *str, int format, int long_file_okz) ;$/;"	p	file:	signature:(const char *str, int format, int long_file_okz)
pcm_test_short	.\libsndfile-1.0.17\tests\write_read_test.c	/^pcm_test_short (const char *filename, int format, int long_file_ok)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok)
pcm_test_short	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void	pcm_test_short (const char *str, int format, int long_file_okz) ;$/;"	p	file:	signature:(const char *str, int format, int long_file_okz)
pcm_write_d2bei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2bei	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2bei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2bei (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2bes	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2bes	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2bes	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2bes (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2bet	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2bet	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2bet	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2bet (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2lei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2lei	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2lei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2lei (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2les	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2les	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2les	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2les (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2let	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2let	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2let	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2let (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2sc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2sc	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2sc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2sc	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2uc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_d2uc	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_d2uc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_d2uc	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
pcm_write_f2bei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2bei	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2bei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2bei (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2bes	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2bes	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2bes	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2bes (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2bet	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2bet	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2bet	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2bet (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2lei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2lei	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2lei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2lei (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2les	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2les	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2les	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2les (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2let	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2let	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2let	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2let (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2sc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2sc	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2sc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2sc	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2uc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_f2uc	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_f2uc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_f2uc	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
pcm_write_i2bei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2bei	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2bei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2bei (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2bes	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2bes	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2bes	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2bes (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2bet	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2bet	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2bet	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2bet (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2lei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2lei	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2lei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2lei (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2les	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2les	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2les	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2les (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2let	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2let	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2let	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2let (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2sc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2sc	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2sc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2sc	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2uc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_i2uc	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_i2uc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_i2uc	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
pcm_write_s2bei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2bei	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2bei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2bei (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2bes	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2bes	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2bes	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2bes (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2bet	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2bet	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2bet	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2bet (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2lei	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2lei	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2lei	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2lei (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2les	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2les	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2les	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2les (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2let	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2let	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2let	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2let (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2sc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2sc	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2sc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2sc	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2uc	.\libsndfile-1.0.17\src\pcm.c	/^pcm_write_s2uc	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcm_write_s2uc	.\libsndfile-1.0.17\src\pcm.c	/^static sf_count_t	pcm_write_s2uc	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
pcmtype	.\libsndfile-1.0.17\src\flac.c	/^	PFLAC_PCM pcmtype ;$/;"	m	struct:__anon37	file:	access:public
peak_MARKER	.\libsndfile-1.0.17\src\caf.c	56;"	d	file:
peak_info	.\libsndfile-1.0.17\src\common.h	/^	PEAK_INFO		*peak_info ;$/;"	m	struct:sf_private_tag	access:public
peak_info_calloc	.\libsndfile-1.0.17\src\common.h	/^peak_info_calloc (int channels)$/;"	f	signature:(int channels)
peak_loc	.\libsndfile-1.0.17\src\common.h	/^	int				peak_loc ;$/;"	m	struct:__anon26	access:public
peak_update_double	.\libsndfile-1.0.17\src\common.h	/^void	peak_update_double	(SF_PRIVATE *psf, double *ptr, size_t items) ;$/;"	p	signature:(SF_PRIVATE *psf, double *ptr, size_t items)
peak_update_int	.\libsndfile-1.0.17\src\common.h	/^void	peak_update_int		(SF_PRIVATE *psf, int *ptr, size_t items) ;$/;"	p	signature:(SF_PRIVATE *psf, int *ptr, size_t items)
peak_update_short	.\libsndfile-1.0.17\src\common.h	/^void	peak_update_short	(SF_PRIVATE *psf, short *ptr, size_t items) ;$/;"	p	signature:(SF_PRIVATE *psf, short *ptr, size_t items)
peaks	.\libsndfile-1.0.17\src\common.h	/^	PEAK_POS		peaks [0] ;$/;"	m	struct:__anon26	access:public
peaks	.\libsndfile-1.0.17\src\common.h	/^	PEAK_POS		peaks [] ;$/;"	m	struct:__anon26	access:public
permission_test	.\libsndfile-1.0.17\tests\misc_test.c	/^permission_test (const char *filename, int typemajor)$/;"	f	file:	signature:(const char *filename, int typemajor)
permission_test	.\libsndfile-1.0.17\tests\misc_test.c	/^static void	permission_test (const char *filename, int typemajor) ;$/;"	p	file:	signature:(const char *filename, int typemajor)
pipe_read_test	.\libsndfile-1.0.17\tests\pipe_test.c	/^pipe_read_test (int filetype, const char *ext)$/;"	f	file:	signature:(int filetype, const char *ext)
pipe_read_test	.\libsndfile-1.0.17\tests\pipe_test.c	/^static void		pipe_read_test (int filetype, const char *ext) ;$/;"	p	file:	signature:(int filetype, const char *ext)
pipe_test_others	.\libsndfile-1.0.17\tests\pipe_test.c	/^pipe_test_others (FILETYPE* list1, FILETYPE* list2)$/;"	f	file:	signature:(FILETYPE* list1, FILETYPE* list2)
pipe_test_others	.\libsndfile-1.0.17\tests\pipe_test.c	/^static void		pipe_test_others (FILETYPE*, FILETYPE*) ;$/;"	p	file:	signature:(FILETYPE*, FILETYPE*)
pipe_write_test	.\libsndfile-1.0.17\tests\pipe_test.c	/^pipe_write_test (const char *ext)$/;"	f	file:	signature:(const char *ext)
pipe_write_test	.\libsndfile-1.0.17\tests\pipe_test.c	/^static void		pipe_write_test (const char *ext) ;$/;"	p	file:	signature:(const char *ext)
pipeoffset	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		pipeoffset ;	\/* Number of bytes read from a pipe. *\/$/;"	m	struct:sf_private_tag	access:public
pk	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short pk[2];	\/*$/;"	m	struct:g72x_state	access:public
pkt_bytes	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int pkt_bytes ;$/;"	m	struct:__anon22	file:	access:public
pkt_frames	.\libsndfile-1.0.17\src\caf.c	/^	unsigned int pkt_frames ;$/;"	m	struct:__anon22	file:	access:public
playMode	.\libsndfile-1.0.17\src\aiff.c	/^{	short			playMode ;$/;"	m	struct:__anon12	file:	access:public
player	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	BSoundPlayer *player;$/;"	m	struct:shared_data	file:	access:public
plst_MARKER	.\libsndfile-1.0.17\src\wav.c	50;"	d	file:
pos	.\libsndfile-1.0.17\src\flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon37	file:	access:public
position	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned int	position ;$/;"	m	struct:__anon17	file:	access:public
position	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t	position ;	\/* the sample frame for the peak *\/$/;"	m	struct:__anon25	access:public
power2	.\libsndfile-1.0.17\src\G72x\g72x.c	/^short power2 [15] =$/;"	v	file:
predictor_pole	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int  predictor_pole(G72x_STATE *state_ptr)$/;"	f	signature:(G72x_STATE *state_ptr)
predictor_pole	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int	predictor_pole (G72x_STATE *state_ptr);$/;"	p	signature:(G72x_STATE *state_ptr)
predictor_zero	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int  predictor_zero (G72x_STATE *state_ptr)$/;"	f	signature:(G72x_STATE *state_ptr)
predictor_zero	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int	predictor_zero (G72x_STATE *state_ptr);$/;"	p	signature:(G72x_STATE *state_ptr)
previous	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				previous [2] ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
print_libsndfile_version	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^print_libsndfile_version (void)$/;"	f	file:	signature:(void)
print_libsndfile_version	.\libsndfile-1.0.17\regtest\sndfile-regtest.c	/^static void print_libsndfile_version (void) ;$/;"	p	file:	signature:(void)
print_test_name	.\libsndfile-1.0.17\tests\utils.c	/^print_test_name (const char *test, const char *filename)$/;"	f	signature:(const char *test, const char *filename)
print_test_name	.\libsndfile-1.0.17\tests\utils.h	/^void	print_test_name (const char *test, const char *filename) ;$/;"	p	signature:(const char *test, const char *filename)
print_usage	.\libsndfile-1.0.17\examples\sndfile-convert.c	/^print_usage (char *progname)$/;"	f	file:	signature:(char *progname)
print_usage	.\libsndfile-1.0.17\examples\sndfile-info.c	/^print_usage (const char *progname)$/;"	f	file:	signature:(const char *progname)
print_usage	.\libsndfile-1.0.17\examples\sndfile-info.c	/^static void print_usage (const char *progname) ;$/;"	p	file:	signature:(const char *progname)
print_version	.\libsndfile-1.0.17\examples\sndfile-info.c	/^print_version (void)$/;"	f	file:	signature:(void)
print_version	.\libsndfile-1.0.17\examples\sndfile-info.c	/^static void print_version (void) ;$/;"	p	file:	signature:(void)
private	.\libsndfile-1.0.17\src\g72x.c	/^	struct g72x_state * private ;$/;"	m	struct:__anon40	typeref:struct:__anon40::g72x_state	file:	access:public
private_init_state	.\libsndfile-1.0.17\src\G72x\g72x.c	/^void private_init_state (G72x_STATE *state_ptr)$/;"	f	signature:(G72x_STATE *state_ptr)
private_init_state	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^void private_init_state (G72x_STATE *state_ptr) ;$/;"	p	signature:(G72x_STATE *state_ptr)
process_data	.\libsndfile-1.0.17\examples\sfprocess.c	/^process_data (double *data, int count, int channels)$/;"	f	file:	signature:(double *data, int count, int channels)
process_data	.\libsndfile-1.0.17\examples\sfprocess.c	/^static void process_data (double *data, int count, int channels) ;$/;"	p	file:	signature:(double *data, int count, int channels)
psf_asciiheader_printf	.\libsndfile-1.0.17\src\common.c	/^psf_asciiheader_printf (SF_PRIVATE *psf, const char *format, ...)$/;"	f	signature:(SF_PRIVATE *psf, const char *format, ...)
psf_asciiheader_printf	.\libsndfile-1.0.17\src\common.h	/^void	psf_asciiheader_printf	(SF_PRIVATE *psf, const char *format, ...) ;$/;"	p	signature:(SF_PRIVATE *psf, const char *format, ...)
psf_binheader_readf	.\libsndfile-1.0.17\src\common.c	/^psf_binheader_readf (SF_PRIVATE *psf, char const *format, ...)$/;"	f	signature:(SF_PRIVATE *psf, char const *format, ...)
psf_binheader_readf	.\libsndfile-1.0.17\src\common.h	/^int		psf_binheader_readf	(SF_PRIVATE *psf, char const *format, ...) ;$/;"	p	signature:(SF_PRIVATE *psf, char const *format, ...)
psf_binheader_writef	.\libsndfile-1.0.17\src\common.c	/^psf_binheader_writef (SF_PRIVATE *psf, const char *format, ...)$/;"	f	signature:(SF_PRIVATE *psf, const char *format, ...)
psf_binheader_writef	.\libsndfile-1.0.17\src\common.h	/^int		psf_binheader_writef	(SF_PRIVATE *psf, const char *format, ...) ;$/;"	p	signature:(SF_PRIVATE *psf, const char *format, ...)
psf_calc_max_all_channels	.\libsndfile-1.0.17\src\command.c	/^psf_calc_max_all_channels (SF_PRIVATE *psf, double *peaks, int normalize)$/;"	f	signature:(SF_PRIVATE *psf, double *peaks, int normalize)
psf_calc_max_all_channels	.\libsndfile-1.0.17\src\common.h	/^int		psf_calc_max_all_channels	(SF_PRIVATE *psf, double *peaks, int normalize) ;$/;"	p	signature:(SF_PRIVATE *psf, double *peaks, int normalize)
psf_calc_signal_max	.\libsndfile-1.0.17\src\command.c	/^psf_calc_signal_max (SF_PRIVATE *psf, int normalize)$/;"	f	signature:(SF_PRIVATE *psf, int normalize)
psf_calc_signal_max	.\libsndfile-1.0.17\src\common.h	/^double	psf_calc_signal_max			(SF_PRIVATE *psf, int normalize) ;$/;"	p	signature:(SF_PRIVATE *psf, int normalize)
psf_close	.\libsndfile-1.0.17\src\sndfile.c	/^psf_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
psf_close	.\libsndfile-1.0.17\src\sndfile.c	/^static int	psf_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
psf_close_fd	.\libsndfile-1.0.17\src\file_io.c	/^psf_close_fd (int fd)$/;"	f	file:	signature:(int fd)
psf_close_fd	.\libsndfile-1.0.17\src\file_io.c	/^static int psf_close_fd (int fd) ;$/;"	p	file:	signature:(int fd)
psf_close_handle	.\libsndfile-1.0.17\src\file_io.c	/^psf_close_handle (HANDLE handle)$/;"	f	file:	signature:(HANDLE handle)
psf_close_handle	.\libsndfile-1.0.17\src\file_io.c	/^static int psf_close_handle (HANDLE handle) ;$/;"	p	file:	signature:(HANDLE handle)
psf_close_rsrc	.\libsndfile-1.0.17\src\common.h	/^int psf_close_rsrc (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_close_rsrc	.\libsndfile-1.0.17\src\file_io.c	/^psf_close_rsrc (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_default_seek	.\libsndfile-1.0.17\src\common.c	/^psf_default_seek (SF_PRIVATE *psf, int mode, sf_count_t samples_from_start)$/;"	f	signature:(SF_PRIVATE *psf, int mode, sf_count_t samples_from_start)
psf_default_seek	.\libsndfile-1.0.17\src\common.h	/^sf_count_t	psf_default_seek (SF_PRIVATE *psf, int mode, sf_count_t samples_from_start) ;$/;"	p	signature:(SF_PRIVATE *psf, int mode, sf_count_t samples_from_start)
psf_fclose	.\libsndfile-1.0.17\src\common.h	/^int psf_fclose (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_fclose	.\libsndfile-1.0.17\src\file_io.c	/^psf_fclose (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_fgets	.\libsndfile-1.0.17\src\common.h	/^sf_count_t psf_fgets (char *buffer, sf_count_t bufsize, SF_PRIVATE *psf) ;$/;"	p	signature:(char *buffer, sf_count_t bufsize, SF_PRIVATE *psf)
psf_fgets	.\libsndfile-1.0.17\src\file_io.c	/^psf_fgets (char *buffer, sf_count_t bufsize, SF_PRIVATE *psf)$/;"	f	signature:(char *buffer, sf_count_t bufsize, SF_PRIVATE *psf)
psf_file_valid	.\libsndfile-1.0.17\src\common.h	/^int psf_file_valid (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_file_valid	.\libsndfile-1.0.17\src\file_io.c	/^psf_file_valid (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_fopen	.\libsndfile-1.0.17\src\common.h	/^int psf_fopen (SF_PRIVATE *psf, const char *pathname, int flags) ;$/;"	p	signature:(SF_PRIVATE *psf, const char *pathname, int flags)
psf_fopen	.\libsndfile-1.0.17\src\file_io.c	/^psf_fopen (SF_PRIVATE *psf, const char *pathname, int open_mode)$/;"	f	signature:(SF_PRIVATE *psf, const char *pathname, int open_mode)
psf_fread	.\libsndfile-1.0.17\src\common.h	/^sf_count_t psf_fread (void *ptr, sf_count_t bytes, sf_count_t count, SF_PRIVATE *psf) ;$/;"	p	signature:(void *ptr, sf_count_t bytes, sf_count_t count, SF_PRIVATE *psf)
psf_fread	.\libsndfile-1.0.17\src\file_io.c	/^psf_fread (void *ptr, sf_count_t bytes, sf_count_t items, SF_PRIVATE *psf)$/;"	f	signature:(void *ptr, sf_count_t bytes, sf_count_t items, SF_PRIVATE *psf)
psf_fseek	.\libsndfile-1.0.17\src\common.h	/^sf_count_t psf_fseek (SF_PRIVATE *psf, sf_count_t offset, int whence) ;$/;"	p	signature:(SF_PRIVATE *psf, sf_count_t offset, int whence)
psf_fseek	.\libsndfile-1.0.17\src\file_io.c	/^psf_fseek (SF_PRIVATE *psf, sf_count_t offset, int whence)$/;"	f	signature:(SF_PRIVATE *psf, sf_count_t offset, int whence)
psf_fsync	.\libsndfile-1.0.17\src\common.h	/^void psf_fsync (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_fsync	.\libsndfile-1.0.17\src\file_io.c	/^psf_fsync (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_ftell	.\libsndfile-1.0.17\src\common.h	/^sf_count_t psf_ftell (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_ftell	.\libsndfile-1.0.17\src\file_io.c	/^psf_ftell (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_ftruncate	.\libsndfile-1.0.17\src\common.h	/^int psf_ftruncate (SF_PRIVATE *psf, sf_count_t len) ;$/;"	p	signature:(SF_PRIVATE *psf, sf_count_t len)
psf_ftruncate	.\libsndfile-1.0.17\src\file_io.c	/^psf_ftruncate (SF_PRIVATE *psf, sf_count_t len)$/;"	f	signature:(SF_PRIVATE *psf, sf_count_t len)
psf_fwrite	.\libsndfile-1.0.17\src\common.h	/^sf_count_t psf_fwrite (const void *ptr, sf_count_t bytes, sf_count_t count, SF_PRIVATE *psf) ;$/;"	p	signature:(const void *ptr, sf_count_t bytes, sf_count_t count, SF_PRIVATE *psf)
psf_fwrite	.\libsndfile-1.0.17\src\file_io.c	/^psf_fwrite (const void *ptr, sf_count_t bytes, sf_count_t items, SF_PRIVATE *psf)$/;"	f	signature:(const void *ptr, sf_count_t bytes, sf_count_t items, SF_PRIVATE *psf)
psf_g72x_decode_block	.\libsndfile-1.0.17\src\g72x.c	/^psf_g72x_decode_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x)$/;"	f	file:	signature:(SF_PRIVATE *psf, G72x_PRIVATE *pg72x)
psf_g72x_decode_block	.\libsndfile-1.0.17\src\g72x.c	/^static	int	psf_g72x_decode_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, G72x_PRIVATE *pg72x)
psf_g72x_encode_block	.\libsndfile-1.0.17\src\g72x.c	/^psf_g72x_encode_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x)$/;"	f	file:	signature:(SF_PRIVATE *psf, G72x_PRIVATE *pg72x)
psf_g72x_encode_block	.\libsndfile-1.0.17\src\g72x.c	/^static	int	psf_g72x_encode_block (SF_PRIVATE *psf, G72x_PRIVATE *pg72x) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, G72x_PRIVATE *pg72x)
psf_generate_format_desc	.\libsndfile-1.0.17\src\common.h	/^void	psf_generate_format_desc (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_get_date_str	.\libsndfile-1.0.17\src\common.c	/^void psf_get_date_str (char *str, int maxlen)$/;"	f	signature:(char *str, int maxlen)
psf_get_date_str	.\libsndfile-1.0.17\src\common.h	/^void	psf_get_date_str (char *str, int maxlen) ;$/;"	p	signature:(char *str, int maxlen)
psf_get_filelen	.\libsndfile-1.0.17\src\common.h	/^sf_count_t psf_get_filelen (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_get_filelen	.\libsndfile-1.0.17\src\file_io.c	/^psf_get_filelen (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_get_filelen_fd	.\libsndfile-1.0.17\src\file_io.c	/^psf_get_filelen_fd (int fd)$/;"	f	file:	signature:(int fd)
psf_get_filelen_fd	.\libsndfile-1.0.17\src\file_io.c	/^static sf_count_t psf_get_filelen_fd (int fd) ;$/;"	p	file:	signature:(int fd)
psf_get_filelen_handle	.\libsndfile-1.0.17\src\file_io.c	/^psf_get_filelen_handle (HANDLE handle)$/;"	f	signature:(HANDLE handle)
psf_get_filelen_handle	.\libsndfile-1.0.17\src\file_io.c	/^static sf_count_t psf_get_filelen_handle (HANDLE handle) ;$/;"	p	file:	signature:(HANDLE handle)
psf_get_format_info	.\libsndfile-1.0.17\src\command.c	/^psf_get_format_info (SF_FORMAT_INFO *data)$/;"	f	signature:(SF_FORMAT_INFO *data)
psf_get_format_info	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_format_info			(SF_FORMAT_INFO *data) ;$/;"	p	signature:(SF_FORMAT_INFO *data)
psf_get_format_major	.\libsndfile-1.0.17\src\command.c	/^psf_get_format_major (SF_FORMAT_INFO *data)$/;"	f	signature:(SF_FORMAT_INFO *data)
psf_get_format_major	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_format_major		(SF_FORMAT_INFO *data) ;$/;"	p	signature:(SF_FORMAT_INFO *data)
psf_get_format_major_count	.\libsndfile-1.0.17\src\command.c	/^psf_get_format_major_count	(void)$/;"	f	signature:(void)
psf_get_format_major_count	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_format_major_count	(void) ;$/;"	p	signature:(void)
psf_get_format_simple	.\libsndfile-1.0.17\src\command.c	/^psf_get_format_simple (SF_FORMAT_INFO *data)$/;"	f	signature:(SF_FORMAT_INFO *data)
psf_get_format_simple	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_format_simple		(SF_FORMAT_INFO *data) ;$/;"	p	signature:(SF_FORMAT_INFO *data)
psf_get_format_simple_count	.\libsndfile-1.0.17\src\command.c	/^psf_get_format_simple_count	(void)$/;"	f	signature:(void)
psf_get_format_simple_count	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_format_simple_count	(void) ;$/;"	p	signature:(void)
psf_get_format_subtype	.\libsndfile-1.0.17\src\command.c	/^psf_get_format_subtype (SF_FORMAT_INFO *data)$/;"	f	signature:(SF_FORMAT_INFO *data)
psf_get_format_subtype	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_format_subtype		(SF_FORMAT_INFO *data) ;$/;"	p	signature:(SF_FORMAT_INFO *data)
psf_get_format_subtype_count	.\libsndfile-1.0.17\src\command.c	/^psf_get_format_subtype_count	(void)$/;"	f	signature:(void)
psf_get_format_subtype_count	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_format_subtype_count	(void) ;$/;"	p	signature:(void)
psf_get_max_all_channels	.\libsndfile-1.0.17\src\command.c	/^psf_get_max_all_channels (SF_PRIVATE *psf, double *peaks)$/;"	f	signature:(SF_PRIVATE *psf, double *peaks)
psf_get_max_all_channels	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_max_all_channels	(SF_PRIVATE *psf, double *peaks) ;$/;"	p	signature:(SF_PRIVATE *psf, double *peaks)
psf_get_signal_max	.\libsndfile-1.0.17\src\command.c	/^psf_get_signal_max (SF_PRIVATE *psf, double *peak)$/;"	f	signature:(SF_PRIVATE *psf, double *peak)
psf_get_signal_max	.\libsndfile-1.0.17\src\common.h	/^int		psf_get_signal_max			(SF_PRIVATE *psf, double *peak) ;$/;"	p	signature:(SF_PRIVATE *psf, double *peak)
psf_get_string	.\libsndfile-1.0.17\src\common.h	/^const char* psf_get_string (SF_PRIVATE *psf, int str_type) ;$/;"	p	signature:(SF_PRIVATE *psf, int str_type)
psf_get_string	.\libsndfile-1.0.17\src\strings.c	/^psf_get_string (SF_PRIVATE *psf, int str_type)$/;"	f	signature:(SF_PRIVATE *psf, int str_type)
psf_hexdump	.\libsndfile-1.0.17\src\common.c	/^psf_hexdump (void *ptr, int len)$/;"	f	signature:(void *ptr, int len)
psf_hexdump	.\libsndfile-1.0.17\src\common.h	/^void	psf_hexdump (void *ptr, int len) ;$/;"	p	signature:(void *ptr, int len)
psf_init_files	.\libsndfile-1.0.17\src\common.h	/^void psf_init_files (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_init_files	.\libsndfile-1.0.17\src\file_io.c	/^psf_init_files (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_instrument_alloc	.\libsndfile-1.0.17\src\common.c	/^psf_instrument_alloc (void)$/;"	f	signature:(void)
psf_instrument_alloc	.\libsndfile-1.0.17\src\common.h	/^SF_INSTRUMENT * psf_instrument_alloc (void) ;$/;"	p	signature:(void)
psf_is_pipe	.\libsndfile-1.0.17\src\common.h	/^int psf_is_pipe (SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_is_pipe	.\libsndfile-1.0.17\src\file_io.c	/^psf_is_pipe (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_log_SF_INFO	.\libsndfile-1.0.17\src\common.c	/^psf_log_SF_INFO (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
psf_log_SF_INFO	.\libsndfile-1.0.17\src\common.h	/^void	psf_log_SF_INFO 	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
psf_log_printf	.\libsndfile-1.0.17\src\common.c	/^psf_log_printf (SF_PRIVATE *psf, const char *format, ...)$/;"	f	signature:(SF_PRIVATE *psf, const char *format, ...)
psf_log_printf	.\libsndfile-1.0.17\src\common.h	/^void	psf_log_printf		(SF_PRIVATE *psf, const char *format, ...) ;$/;"	p	signature:(SF_PRIVATE *psf, const char *format, ...)
psf_log_syserr	.\libsndfile-1.0.17\src\file_io.c	/^psf_log_syserr (SF_PRIVATE *psf, int error)$/;"	f	file:	signature:(SF_PRIVATE *psf, int error)
psf_log_syserr	.\libsndfile-1.0.17\src\file_io.c	/^static void psf_log_syserr (SF_PRIVATE *psf, int error) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int error)
psf_memset	.\libsndfile-1.0.17\src\common.c	/^psf_memset (void *s, int c, sf_count_t len)$/;"	f	signature:(void *s, int c, sf_count_t len)
psf_memset	.\libsndfile-1.0.17\src\common.h	/^void	*psf_memset (void *s, int c, sf_count_t n) ;$/;"	p	signature:(void *s, int c, sf_count_t n)
psf_open_fd	.\libsndfile-1.0.17\src\file_io.c	/^psf_open_fd (const char * pathname, int open_mode)$/;"	f	file:	signature:(const char * pathname, int open_mode)
psf_open_fd	.\libsndfile-1.0.17\src\file_io.c	/^static int psf_open_fd (const char * path, int mode) ;$/;"	p	file:	signature:(const char * path, int mode)
psf_open_file	.\libsndfile-1.0.17\src\sndfile.c	/^psf_open_file (SF_PRIVATE *psf, int mode, SF_INFO *sfinfo)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, SF_INFO *sfinfo)
psf_open_file	.\libsndfile-1.0.17\src\sndfile.c	/^static int	psf_open_file (SF_PRIVATE *psf, int mode, SF_INFO *sfinfo) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, SF_INFO *sfinfo)
psf_open_handle	.\libsndfile-1.0.17\src\file_io.c	/^psf_open_handle (const char * pathname, int open_mode)$/;"	f	file:	signature:(const char * pathname, int open_mode)
psf_open_handle	.\libsndfile-1.0.17\src\file_io.c	/^static HANDLE psf_open_handle (const char * path, int mode) ;$/;"	p	file:	signature:(const char * path, int mode)
psf_open_rsrc	.\libsndfile-1.0.17\src\common.h	/^int psf_open_rsrc (SF_PRIVATE *psf, int mode) ;$/;"	p	signature:(SF_PRIVATE *psf, int mode)
psf_open_rsrc	.\libsndfile-1.0.17\src\file_io.c	/^psf_open_rsrc (SF_PRIVATE *psf, int open_mode)$/;"	f	signature:(SF_PRIVATE *psf, int open_mode)
psf_set_file	.\libsndfile-1.0.17\src\common.h	/^void psf_set_file (SF_PRIVATE *psf, int fd) ;$/;"	p	signature:(SF_PRIVATE *psf, int fd)
psf_set_file	.\libsndfile-1.0.17\src\file_io.c	/^psf_set_file (SF_PRIVATE *psf, int fd)$/;"	f	signature:(SF_PRIVATE *psf, int fd)
psf_set_stdio	.\libsndfile-1.0.17\src\common.h	/^int psf_set_stdio (SF_PRIVATE *psf, int mode) ;$/;"	p	signature:(SF_PRIVATE *psf, int mode)
psf_set_stdio	.\libsndfile-1.0.17\src\file_io.c	/^psf_set_stdio (SF_PRIVATE *psf, int mode)$/;"	f	signature:(SF_PRIVATE *psf, int mode)
psf_set_string	.\libsndfile-1.0.17\src\common.h	/^int psf_set_string (SF_PRIVATE *psf, int str_type, const char *str) ;$/;"	p	signature:(SF_PRIVATE *psf, int str_type, const char *str)
psf_set_string	.\libsndfile-1.0.17\src\strings.c	/^psf_set_string (SF_PRIVATE *psf, int str_type, const char *str)$/;"	f	signature:(SF_PRIVATE *psf, int str_type, const char *str)
psf_store_string	.\libsndfile-1.0.17\src\common.h	/^int psf_store_string (SF_PRIVATE *psf, int str_type, const char *str) ;$/;"	p	signature:(SF_PRIVATE *psf, int str_type, const char *str)
psf_store_string	.\libsndfile-1.0.17\src\strings.c	/^psf_store_string (SF_PRIVATE *psf, int str_type, const char *str)$/;"	f	signature:(SF_PRIVATE *psf, int str_type, const char *str)
psf_use_rsrc	.\libsndfile-1.0.17\src\common.h	/^void psf_use_rsrc (SF_PRIVATE *psf, int on_off) ;$/;"	p	signature:(SF_PRIVATE *psf, int on_off)
psf_use_rsrc	.\libsndfile-1.0.17\src\file_io.c	/^psf_use_rsrc (SF_PRIVATE *psf, int on_off)$/;"	f	signature:(SF_PRIVATE *psf, int on_off)
ptr	.\libsndfile-1.0.17\src\flac.c	/^	void* ptr ;$/;"	m	struct:__anon37	file:	access:public
pvf_close	.\libsndfile-1.0.17\src\pvf.c	/^pvf_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
pvf_close	.\libsndfile-1.0.17\src\pvf.c	/^static	int		pvf_close		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
pvf_open	.\libsndfile-1.0.17\src\common.h	/^int		pvf_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
pvf_open	.\libsndfile-1.0.17\src\pvf.c	/^pvf_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
pvf_read_header	.\libsndfile-1.0.17\src\pvf.c	/^pvf_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
pvf_read_header	.\libsndfile-1.0.17\src\pvf.c	/^static int		pvf_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
pvf_write_header	.\libsndfile-1.0.17\src\pvf.c	/^pvf_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
pvf_write_header	.\libsndfile-1.0.17\src\pvf.c	/^static int		pvf_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
qtab_721	.\libsndfile-1.0.17\src\G72x\g721.c	/^static short qtab_721[7] = {-124, 80, 178, 246, 300, 349, 400};$/;"	v	file:
qtab_723_16	.\libsndfile-1.0.17\src\G72x\g723_16.c	/^static short qtab_723_16[1] = {261};$/;"	v	file:
qtab_723_24	.\libsndfile-1.0.17\src\G72x\g723_24.c	/^static short qtab_723_24[3] = {8, 218, 331};$/;"	v	file:
qtab_723_40	.\libsndfile-1.0.17\src\G72x\g723_40.c	/^static short qtab_723_40[15] = {-122, -16, 68, 139, 198, 250, 298, 339,$/;"	v	file:
quan	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int quan (int val, short *table, int size)$/;"	f	file:	signature:(int val, short *table, int size)
quantize	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int quantize($/;"	f	signature:( int d, int y, short *table, int size)
quantize	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int	quantize (int d, int	y, short *table, int size);$/;"	p	signature:(int d, int y, short *table, int size)
raw	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="raw"><\/A>$/;"	a
raw	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="raw"><\/A>$/;"	a
raw_MARKER	.\libsndfile-1.0.17\src\aiff.c	60;"	d	file:
raw_offset_test	.\libsndfile-1.0.17\tests\raw_test.c	/^raw_offset_test (const char *filename, int typeminor)$/;"	f	file:	signature:(const char *filename, int typeminor)
raw_offset_test	.\libsndfile-1.0.17\tests\raw_test.c	/^static	void	raw_offset_test (const char *filename, int typeminor) ;$/;"	p	file:	signature:(const char *filename, int typeminor)
raw_open	.\libsndfile-1.0.17\src\common.h	/^int		raw_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
raw_open	.\libsndfile-1.0.17\src\raw.c	/^raw_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
rbuffer	.\libsndfile-1.0.17\src\flac.c	/^	FLAC__int32 * rbuffer [FLAC__MAX_CHANNELS] ;$/;"	m	struct:__anon37	file:	access:public
read	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="read"><\/A>$/;"	a
read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t items)
read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t items)
read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t items)
read	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t read (short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t items)
read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t items)
read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t items)
read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t items)
read	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::read (short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t items)
read	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="read"><\/A>$/;"	a
read	.\sndfile.h	/^	sf_vio_read			read ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
read	.\sndfile.hh	/^		sf_count_t read (double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t items)
read	.\sndfile.hh	/^		sf_count_t read (float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t items)
read	.\sndfile.hh	/^		sf_count_t read (int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t items)
read	.\sndfile.hh	/^		sf_count_t read (short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t items)
read	.\sndfile.hh	/^SndfileHandle::read (double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t items)
read	.\sndfile.hh	/^SndfileHandle::read (float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t items)
read	.\sndfile.hh	/^SndfileHandle::read (int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t items)
read	.\sndfile.hh	/^SndfileHandle::read (short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t items)
read-text	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="read-text"><\/A>$/;"	a
read-text	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="read-text"><\/A>$/;"	a
readRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	readRaw		(void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(void *ptr, sf_count_t bytes)
readRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readRaw (void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(void *ptr, sf_count_t bytes)
readRaw	.\sndfile.hh	/^		sf_count_t	readRaw		(void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(void *ptr, sf_count_t bytes)
readRaw	.\sndfile.hh	/^SndfileHandle::readRaw (void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(void *ptr, sf_count_t bytes)
read_block	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
read_block	.\libsndfile-1.0.17\src\sds.c	/^	int read_block, read_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
read_char	.\libsndfile-1.0.17\src\sd2.c	/^read_char (const unsigned char * data, int offset)$/;"	f	file:	signature:(const unsigned char * data, int offset)
read_count	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
read_count	.\libsndfile-1.0.17\src\sds.c	/^	int read_block, read_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
read_current	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		read_current ;$/;"	m	struct:sf_private_tag	access:public
read_data	.\libsndfile-1.0.17\src\sds.c	/^	unsigned char read_data [SDS_BLOCK_SIZE] ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
read_dither	.\libsndfile-1.0.17\src\common.h	/^	SF_DITHER_INFO	read_dither ;$/;"	m	struct:sf_private_tag	access:public
read_double	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_double)	(struct sf_private_tag*, double *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
read_double	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_double)	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
read_double	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_double)	(SF_PRIVATE*, double *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
read_double_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	double		read_float_dither_scale, read_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
read_file	.\libsndfile-1.0.17\tests\cpp_test.cc	/^read_file (const char * filename, int format)$/;"	f	file:	signature:(const char * filename, int format)
read_float	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_float)	(struct sf_private_tag*, float *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
read_float	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_float)	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
read_float	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_float)	(SF_PRIVATE*, float *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
read_float_dither_scale	.\libsndfile-1.0.17\src\dither.c	/^	double		read_float_dither_scale, read_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
read_int	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_int)		(struct sf_private_tag*, int *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
read_int	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_int)		(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
read_int	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_int)	(SF_PRIVATE*, int *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
read_int	.\libsndfile-1.0.17\src\sd2.c	/^read_int (const unsigned char * data, int offset)$/;"	f	file:	signature:(const unsigned char * data, int offset)
read_int_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^{	int			read_short_dither_bits, read_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
read_marker	.\libsndfile-1.0.17\src\sd2.c	/^read_marker (const unsigned char * data, int offset)$/;"	f	file:	signature:(const unsigned char * data, int offset)
read_only_types	.\libsndfile-1.0.17\tests\pipe_test.c	/^static FILETYPE read_only_types [] =$/;"	v	file:
read_rate	.\libsndfile-1.0.17\tests\benchmark.c	/^	double	read_rate ;$/;"	m	struct:__anon77	file:	access:public
read_samples	.\libsndfile-1.0.17\src\sds.c	/^	int	read_samples [SDS_BLOCK_SIZE \/ 2] ; \/* Maximum samples per block *\/$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
read_short	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_short)	(struct sf_private_tag*, short *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
read_short	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*read_short)	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
read_short	.\libsndfile-1.0.17\src\interleave.c	/^	sf_count_t		(*read_short)	(SF_PRIVATE*, short *ptr, sf_count_t len) ;$/;"	m	struct:__anon41	file:	access:public
read_short	.\libsndfile-1.0.17\src\sd2.c	/^read_short (const unsigned char * data, int offset)$/;"	f	file:	signature:(const unsigned char * data, int offset)
read_short_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^{	int			read_short_dither_bits, read_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
read_str	.\libsndfile-1.0.17\src\sd2.c	/^read_str (const unsigned char * data, int offset, char * buffer, int buffer_len)$/;"	f	file:	signature:(const unsigned char * data, int offset, char * buffer, int buffer_len)
read_write_types	.\libsndfile-1.0.17\tests\pipe_test.c	/^static FILETYPE read_write_types [] =$/;"	v	file:
reader	.\libsndfile-1.0.17\src\sds.c	/^	int (*reader) (SF_PRIVATE *psf, struct tag_SDS_PRIVATE *psds) ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
readf	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="readf"><\/A>$/;"	a
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t frames)
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t frames)
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t frames)
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t readf (short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t frames)
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t frame_count)
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t frame_count)
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t frame_count)
readf	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::readf (short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t frame_count)
readf	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="readf"><\/A>$/;"	a
readf	.\sndfile.hh	/^		sf_count_t readf (double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(double *ptr, sf_count_t frames)
readf	.\sndfile.hh	/^		sf_count_t readf (float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(float *ptr, sf_count_t frames)
readf	.\sndfile.hh	/^		sf_count_t readf (int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(int *ptr, sf_count_t frames)
readf	.\sndfile.hh	/^		sf_count_t readf (short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(short *ptr, sf_count_t frames)
readf	.\sndfile.hh	/^SndfileHandle::readf (double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(double *ptr, sf_count_t frame_count)
readf	.\sndfile.hh	/^SndfileHandle::readf (float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(float *ptr, sf_count_t frame_count)
readf	.\sndfile.hh	/^SndfileHandle::readf (int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(int *ptr, sf_count_t frame_count)
readf	.\sndfile.hh	/^SndfileHandle::readf (short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(short *ptr, sf_count_t frame_count)
reconstruct	.\libsndfile-1.0.17\src\G72x\g72x.c	/^reconstruct($/;"	f	signature:( int sign, int dqln, int y)
reconstruct	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int	reconstruct (int sign, int dqln,	int y);$/;"	p	signature:(int sign, int dqln, int y)
ref	.\libsndfile-1.0.17\src\sndfile.hh	/^			int ref ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
ref	.\sndfile.hh	/^			int ref ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
refCount	.\libsndfile-1.0.17\src\sndfile.hh	/^		int refCount (void) const { return (p == NULL) ? 0 : p->ref ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
refCount	.\sndfile.hh	/^		int refCount (void) const { return (p == NULL) ? 0 : p->ref ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
regn_MARKER	.\libsndfile-1.0.17\src\caf.c	57;"	d	file:
release_loop	.\libsndfile-1.0.17\src\aiff.c	/^	INST_LOOP	release_loop ;$/;"	m	struct:__anon13	file:	access:public
remain	.\libsndfile-1.0.17\src\flac.c	/^	unsigned pos, len, remain ;$/;"	m	struct:__anon37	file:	access:public
remaining	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	sf_count_t	remaining ;$/;"	m	struct:__anon5	file:	access:public
repeatHiSamples	.\libsndfile-1.0.17\src\svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon54	file:	access:public
repeatlen	.\libsndfile-1.0.17\src\txw.c	/^	unsigned int	attacklen, repeatlen ;$/;"	m	struct:__anon56	file:	access:public
replace_read_d	.\libsndfile-1.0.17\src\double64.c	/^replace_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
replace_read_d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_read_d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
replace_read_d2f	.\libsndfile-1.0.17\src\double64.c	/^replace_read_d2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
replace_read_d2f	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_read_d2f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
replace_read_d2i	.\libsndfile-1.0.17\src\double64.c	/^replace_read_d2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
replace_read_d2i	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_read_d2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
replace_read_d2s	.\libsndfile-1.0.17\src\double64.c	/^replace_read_d2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
replace_read_d2s	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_read_d2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
replace_read_f	.\libsndfile-1.0.17\src\float32.c	/^replace_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
replace_read_f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_read_f	(SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
replace_read_f2d	.\libsndfile-1.0.17\src\float32.c	/^replace_read_f2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
replace_read_f2d	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_read_f2d	(SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
replace_read_f2i	.\libsndfile-1.0.17\src\float32.c	/^replace_read_f2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
replace_read_f2i	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_read_f2i	(SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
replace_read_f2s	.\libsndfile-1.0.17\src\float32.c	/^replace_read_f2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
replace_read_f2s	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_read_f2s	(SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
replace_write_d	.\libsndfile-1.0.17\src\double64.c	/^replace_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
replace_write_d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
replace_write_d2f	.\libsndfile-1.0.17\src\float32.c	/^replace_write_d2f	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
replace_write_d2f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_write_d2f	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
replace_write_f	.\libsndfile-1.0.17\src\float32.c	/^replace_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
replace_write_f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_write_f	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
replace_write_f2d	.\libsndfile-1.0.17\src\double64.c	/^replace_write_f2d	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
replace_write_f2d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_write_f2d	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
replace_write_i2d	.\libsndfile-1.0.17\src\double64.c	/^replace_write_i2d	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
replace_write_i2d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_write_i2d	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
replace_write_i2f	.\libsndfile-1.0.17\src\float32.c	/^replace_write_i2f	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
replace_write_i2f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_write_i2f	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
replace_write_s2d	.\libsndfile-1.0.17\src\double64.c	/^replace_write_s2d	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
replace_write_s2d	.\libsndfile-1.0.17\src\double64.c	/^static sf_count_t	replace_write_s2d	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
replace_write_s2f	.\libsndfile-1.0.17\src\float32.c	/^replace_write_s2f	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
replace_write_s2f	.\libsndfile-1.0.17\src\float32.c	/^static sf_count_t	replace_write_s2f	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
res1	.\libsndfile-1.0.17\src\avr.c	/^	short	res1 ;		\/* Reserved, MIDI keyboard split *\/$/;"	m	struct:__anon21	file:	access:public
res2	.\libsndfile-1.0.17\src\avr.c	/^	short	res2 ;		\/* Reserved, sample compression *\/$/;"	m	struct:__anon21	file:	access:public
res3	.\libsndfile-1.0.17\src\avr.c	/^	short	res3 ;		\/* Reserved *\/$/;"	m	struct:__anon21	file:	access:public
reserved	.\sndfile.h	/^	char			reserved [190] ;$/;"	m	struct:__anon99	access:public
rez	.\libsndfile-1.0.17\src\avr.c	/^	short	rez ;		\/* 8 = 8 bit, 16 = 16 bit *\/$/;"	m	struct:__anon21	file:	access:public
riff_HASH16	.\libsndfile-1.0.17\src\w64.c	50;"	d	file:
rootNote	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	rootNote ;$/;"	m	struct:__anon16	file:	access:public
root_key	.\sndfile.h	/^	int	root_key ;			\/* MIDI note, or -1 for None *\/$/;"	m	struct:__anon98	access:public
rows	.\libsndfile-1.0.17\src\mat5.c	/^	int			rows, cols ;$/;"	m	struct:__anon44	file:	access:public
rsrc_data	.\libsndfile-1.0.17\src\sd2.c	/^{	unsigned char * rsrc_data ;$/;"	m	struct:__anon51	file:	access:public
rsrc_len	.\libsndfile-1.0.17\src\sd2.c	/^	int rsrc_len ;$/;"	m	struct:__anon51	file:	access:public
rsrcdes	.\libsndfile-1.0.17\src\common.h	/^	int 			filedes, rsrcdes, savedes ;$/;"	m	struct:sf_private_tag	access:public
rsrclength	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		rsrclength ;	\/* Length of the resource fork (if it exists). *\/$/;"	m	struct:sf_private_tag	access:public
rsrcpath	.\libsndfile-1.0.17\src\common.h	/^	char			rsrcpath	[SF_FILENAME_LEN] ;$/;"	m	struct:sf_private_tag	access:public
rw_test	.\libsndfile-1.0.17\tests\aiff_rw_test.c	/^rw_test (const char *filename)$/;"	f	file:	signature:(const char *filename)
rw_test	.\libsndfile-1.0.17\tests\aiff_rw_test.c	/^static void rw_test (const char *filename) ;$/;"	p	file:	signature:(const char *filename)
rwf_endian	.\libsndfile-1.0.17\src\common.h	/^	int				rwf_endian ;	\/* Header endian-ness flag. *\/$/;"	m	struct:sf_private_tag	access:public
rx2_close	.\libsndfile-1.0.17\src\rx2.c	/^rx2_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
rx2_close	.\libsndfile-1.0.17\src\rx2.c	/^static int	rx2_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
rx2_open	.\libsndfile-1.0.17\src\common.h	/^int		rx2_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
rx2_open	.\libsndfile-1.0.17\src\rx2.c	/^rx2_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
s	.\libsndfile-1.0.17\regtest\checksum.c	/^{	short	s [1 << 16] ;$/;"	m	union:__anon6	file:	access:public
s	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^	short s [BUFFER_SIZE + 1] ;$/;"	m	union:__anon80	file:	access:public
s	.\libsndfile-1.0.17\tests\pcm_test.c	/^	short	s [BUFFER_SIZE + 1];$/;"	m	union:__anon81	file:	access:public
s	.\libsndfile-1.0.17\tests\write_read_test.c	/^	short s [DATA_LENGTH] ;$/;"	m	union:__anon85	file:	access:public
s2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^s2alaw_array (const short *ptr, int count, unsigned char *buffer)$/;"	f	file:	signature:(const short *ptr, int count, unsigned char *buffer)
s2alaw_array	.\libsndfile-1.0.17\src\alaw.c	/^static void s2alaw_array (const short *buffer, int count, unsigned char *ptr) ;$/;"	p	file:	signature:(const short *buffer, int count, unsigned char *ptr)
s2bei_array	.\libsndfile-1.0.17\src\pcm.c	/^s2bei_array (const short *src, int *dest, int count)$/;"	f	file:	signature:(const short *src, int *dest, int count)
s2bet_array	.\libsndfile-1.0.17\src\pcm.c	/^s2bet_array (const short *src, tribyte *dest, int count)$/;"	f	file:	signature:(const short *src, tribyte *dest, int count)
s2d_array	.\libsndfile-1.0.17\src\double64.c	/^s2d_array (const short *src, double *dest, int count)$/;"	f	file:	signature:(const short *src, double *dest, int count)
s2dles_array	.\libsndfile-1.0.17\src\xi.c	/^s2dles_array (XI_PRIVATE *pxi, const short *src, short *dest, int count)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const short *src, short *dest, int count)
s2dles_array	.\libsndfile-1.0.17\src\xi.c	/^static void	s2dles_array (XI_PRIVATE *pxi, const short *src, short *dest, int count) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const short *src, short *dest, int count)
s2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^s2dsc_array (XI_PRIVATE *pxi, const short *src, signed char *dest, int count)$/;"	f	file:	signature:(XI_PRIVATE *pxi, const short *src, signed char *dest, int count)
s2dsc_array	.\libsndfile-1.0.17\src\xi.c	/^static void s2dsc_array (XI_PRIVATE *pxi, const short *src, signed char *dest, int count) ;$/;"	p	file:	signature:(XI_PRIVATE *pxi, const short *src, signed char *dest, int count)
s2f_array	.\libsndfile-1.0.17\src\float32.c	/^s2f_array (const short *src, float *dest, int count)$/;"	f	file:	signature:(const short *src, float *dest, int count)
s2flac16_array	.\libsndfile-1.0.17\src\flac.c	/^s2flac16_array (const short *src, FLAC__int32 *dest, int count)$/;"	f	file:	signature:(const short *src, FLAC__int32 *dest, int count)
s2flac24_array	.\libsndfile-1.0.17\src\flac.c	/^s2flac24_array (const short *src, FLAC__int32 *dest, int count)$/;"	f	file:	signature:(const short *src, FLAC__int32 *dest, int count)
s2flac8_array	.\libsndfile-1.0.17\src\flac.c	/^s2flac8_array (const short *src, FLAC__int32 *dest, int count)$/;"	f	file:	signature:(const short *src, FLAC__int32 *dest, int count)
s2lei_array	.\libsndfile-1.0.17\src\pcm.c	/^s2lei_array (const short *src, int *dest, int count)$/;"	f	file:	signature:(const short *src, int *dest, int count)
s2let_array	.\libsndfile-1.0.17\src\pcm.c	/^s2let_array (const short *src, tribyte *dest, int count)$/;"	f	file:	signature:(const short *src, tribyte *dest, int count)
s2sc_array	.\libsndfile-1.0.17\src\pcm.c	/^s2sc_array	(const short *src, signed char *dest, int count)$/;"	f	file:	signature:(const short *src, signed char *dest, int count)
s2uc_array	.\libsndfile-1.0.17\src\pcm.c	/^s2uc_array	(const short *src, unsigned char *dest, int count)$/;"	f	file:	signature:(const short *src, unsigned char *dest, int count)
s2ulaw_array	.\libsndfile-1.0.17\src\ulaw.c	/^s2ulaw_array (const short *ptr, int count, unsigned char *buffer)$/;"	f	file:	signature:(const short *ptr, int count, unsigned char *buffer)
s_bitwidth_to_subformat	.\libsndfile-1.0.17\src\common.c	/^s_bitwidth_to_subformat (int bits)$/;"	f	signature:(int bits)
s_bitwidth_to_subformat	.\libsndfile-1.0.17\src\common.h	/^int s_bitwidth_to_subformat (int bits) ;$/;"	p	signature:(int bits)
sampleRate	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned char	sampleRate [10] ;$/;"	m	struct:__anon10	file:	access:public
sampleSize	.\libsndfile-1.0.17\src\aiff.c	/^	short			sampleSize ;$/;"	m	struct:__anon10	file:	access:public
sample_count	.\libsndfile-1.0.17\src\paf.c	/^	sf_count_t		sample_count ;$/;"	m	struct:__anon47	file:	access:public
sample_curr	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocks_total, block_curr, sample_curr ;$/;"	m	struct:__anon40	file:	access:public
sample_flags	.\libsndfile-1.0.17\src\xi.c	/^	int		sample_flags ;$/;"	m	struct:__anon76	file:	access:public
sample_name	.\libsndfile-1.0.17\src\xi.c	/^	char	sample_name [22] ;$/;"	m	struct:__anon76	file:	access:public
sample_rate	.\libsndfile-1.0.17\src\sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon51	file:	access:public
sample_size	.\libsndfile-1.0.17\src\sd2.c	/^	int sample_size, sample_rate, channels ;$/;"	m	struct:__anon51	file:	access:public
samplecount	.\libsndfile-1.0.17\src\dwvw.c	/^	int		samplecount ;$/;"	m	struct:__anon34	file:	access:public
samplecount	.\libsndfile-1.0.17\src\gsm610.c	/^	int				blockcount, samplecount ;$/;"	m	struct:gsm610_tag	file:	access:public
samplecount	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				blockcount, samplecount ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
samplecount	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	sf_count_t		samplecount ;$/;"	m	struct:__anon45	file:	access:public
samplerate	.\libsndfile-1.0.17\src\au.c	/^    int		samplerate ;$/;"	m	struct:__anon20	file:	access:public
samplerate	.\libsndfile-1.0.17\src\paf.c	/^    int	samplerate ;$/;"	m	struct:__anon46	file:	access:public
samplerate	.\libsndfile-1.0.17\src\sndfile.hh	/^		int			samplerate (void) const { return p ? p->sfinfo.samplerate : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
samplerate	.\libsndfile-1.0.17\src\voc.c	/^	int				samplerate, channels, bitwidth ;$/;"	m	struct:__anon59	file:	access:public
samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon65	access:public
samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon66	access:public
samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon67	access:public
samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon69	access:public
samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon70	access:public
samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon71	access:public
samplerate	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned int	samplerate ;$/;"	m	struct:__anon73	access:public
samplerate	.\sndfile.h	/^	int			samplerate ;$/;"	m	struct:SF_INFO	access:public
samplerate	.\sndfile.hh	/^		int			samplerate (void) const { return p ? p->sfinfo.samplerate : 0 ; }$/;"	f	class:SndfileHandle	access:public	signature:(void) const
samples	.\libsndfile-1.0.17\src\g72x.c	/^	short			samples	[G72x_BLOCK_SIZE] ;$/;"	m	struct:__anon40	file:	access:public
samples	.\libsndfile-1.0.17\src\gsm610.c	/^	short			samples [WAV_W64_GSM610_SAMPLES] ;$/;"	m	struct:gsm610_tag	file:	access:public
samples	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	short			*samples ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
samples	.\libsndfile-1.0.17\src\ms_adpcm.c	/^	short			*samples ;$/;"	m	struct:__anon45	file:	access:public
samples	.\libsndfile-1.0.17\src\paf.c	/^	int				*samples ;$/;"	m	struct:__anon47	file:	access:public
samples	.\libsndfile-1.0.17\src\voc.c	/^{	int 	samples ;$/;"	m	struct:__anon58	file:	access:public
samplesPerHiCycle	.\libsndfile-1.0.17\src\svx.c	/^{	unsigned int	oneShotHiSamples, repeatHiSamples, samplesPerHiCycle ;$/;"	m	struct:__anon54	file:	access:public
samplesPerSec	.\libsndfile-1.0.17\src\svx.c	/^	unsigned short	samplesPerSec ;$/;"	m	struct:__anon54	file:	access:public
samplesperblock	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	int		codec_bits, blocksize, samplesperblock ;$/;"	m	struct:g72x_state	access:public
samplesperblock	.\libsndfile-1.0.17\src\g72x.c	/^	int				blocksize, samplesperblock, bytesperblock ;$/;"	m	struct:__anon40	file:	access:public
samplesperblock	.\libsndfile-1.0.17\src\gsm610.c	/^	int				samplesperblock, blocksize ;$/;"	m	struct:gsm610_tag	file:	access:public
samplesperblock	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				channels, blocksize, samplesperblock, blocks ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
samplesperblock	.\libsndfile-1.0.17\src\ms_adpcm.c	/^{	int				channels, blocksize, samplesperblock, blocks, dataremaining ;$/;"	m	struct:__anon45	file:	access:public
samplesperblock	.\libsndfile-1.0.17\src\paf.c	/^{	int				max_blocks, channels, samplesperblock, blocksize ;$/;"	m	struct:__anon47	file:	access:public
samplesperblock	.\libsndfile-1.0.17\src\sds.c	/^	int	samplesperblock, total_blocks ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
samplesperblock	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon67	access:public
samplesperblock	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon69	access:public
samplesperblock	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	samplesperblock ;$/;"	m	struct:__anon71	access:public
saturate	.\libsndfile-1.0.17\src\GSM610\add.c	17;"	d	file:
save_header_info	.\libsndfile-1.0.17\src\sndfile.c	/^save_header_info (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
save_header_info	.\libsndfile-1.0.17\src\sndfile.c	/^static void	save_header_info (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
savedes	.\libsndfile-1.0.17\src\common.h	/^	int 			filedes, rsrcdes, savedes ;$/;"	m	struct:sf_private_tag	access:public
sbuf	.\libsndfile-1.0.17\src\common.h	/^		short			sbuf	[SF_BUFFER_LEN \/ sizeof (short)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sbuffer	.\libsndfile-1.0.17\tests\cpp_test.cc	/^static short	sbuffer [100] ;$/;"	v	file:
sc2d_array	.\libsndfile-1.0.17\src\pcm.c	/^sc2d_array	(signed char *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(signed char *src, int count, double *dest, double normfact)
sc2f_array	.\libsndfile-1.0.17\src\pcm.c	/^sc2f_array	(signed char *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(signed char *src, int count, float *dest, float normfact)
sc2i_array	.\libsndfile-1.0.17\src\pcm.c	/^sc2i_array	(signed char *src, int count, int *dest)$/;"	f	file:	signature:(signed char *src, int count, int *dest)
sc2s_array	.\libsndfile-1.0.17\src\pcm.c	/^sc2s_array	(signed char *src, int count, short *dest)$/;"	f	file:	signature:(signed char *src, int count, short *dest)
scaleType	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	scaleType ;$/;"	m	struct:__anon16	file:	access:public
scbuf	.\libsndfile-1.0.17\src\common.h	/^		signed char		scbuf	[SF_BUFFER_LEN \/ sizeof (signed char)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sd2_close	.\libsndfile-1.0.17\src\sd2.c	/^sd2_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
sd2_close	.\libsndfile-1.0.17\src\sd2.c	/^static int sd2_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
sd2_open	.\libsndfile-1.0.17\src\common.h	/^int		sd2_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
sd2_open	.\libsndfile-1.0.17\src\sd2.c	/^sd2_open (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
sd2_parse_rsrc_fork	.\libsndfile-1.0.17\src\sd2.c	/^sd2_parse_rsrc_fork (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
sd2_parse_rsrc_fork	.\libsndfile-1.0.17\src\sd2.c	/^static int sd2_parse_rsrc_fork (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
sd2_write_rsrc_fork	.\libsndfile-1.0.17\src\sd2.c	/^sd2_write_rsrc_fork (SF_PRIVATE *psf, int UNUSED (calc_length))$/;"	f	file:	signature:(SF_PRIVATE *psf, int UNUSED (calc_length))
sd2_write_rsrc_fork	.\libsndfile-1.0.17\src\sd2.c	/^static int sd2_write_rsrc_fork (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
sdML_MARKER	.\libsndfile-1.0.17\src\sd2.c	51;"	d	file:
sdlcomp_test_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^sdlcomp_test_double	(const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
sdlcomp_test_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	sdlcomp_test_double	(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
sdlcomp_test_float	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^sdlcomp_test_float	(const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
sdlcomp_test_float	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	sdlcomp_test_float	(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
sdlcomp_test_int	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^sdlcomp_test_int	(const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
sdlcomp_test_int	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	sdlcomp_test_int	(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
sdlcomp_test_short	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^sdlcomp_test_short	(const char *filename, int filetype, int channels, double margin)$/;"	f	file:	signature:(const char *filename, int filetype, int channels, double margin)
sdlcomp_test_short	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	sdlcomp_test_short	(const char *filename, int filetype, int chan, double margin) ;$/;"	p	file:	signature:(const char *filename, int filetype, int chan, double margin)
sds_2byte_read	.\libsndfile-1.0.17\src\sds.c	/^sds_2byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_2byte_read	.\libsndfile-1.0.17\src\sds.c	/^static int sds_2byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_2byte_write	.\libsndfile-1.0.17\src\sds.c	/^sds_2byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_2byte_write	.\libsndfile-1.0.17\src\sds.c	/^static int sds_2byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_3byte_read	.\libsndfile-1.0.17\src\sds.c	/^sds_3byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_3byte_read	.\libsndfile-1.0.17\src\sds.c	/^static int sds_3byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_3byte_write	.\libsndfile-1.0.17\src\sds.c	/^sds_3byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_3byte_write	.\libsndfile-1.0.17\src\sds.c	/^static int sds_3byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_4byte_read	.\libsndfile-1.0.17\src\sds.c	/^sds_4byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_4byte_read	.\libsndfile-1.0.17\src\sds.c	/^static int sds_4byte_read (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_4byte_write	.\libsndfile-1.0.17\src\sds.c	/^sds_4byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_4byte_write	.\libsndfile-1.0.17\src\sds.c	/^static int sds_4byte_write (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_close	.\libsndfile-1.0.17\src\sds.c	/^sds_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
sds_close	.\libsndfile-1.0.17\src\sds.c	/^static int	sds_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
sds_init	.\libsndfile-1.0.17\src\sds.c	/^sds_init (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_init	.\libsndfile-1.0.17\src\sds.c	/^static int	sds_init (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_open	.\libsndfile-1.0.17\src\common.h	/^int		sds_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
sds_open	.\libsndfile-1.0.17\src\sds.c	/^sds_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
sds_read	.\libsndfile-1.0.17\src\sds.c	/^sds_read (SF_PRIVATE *psf, SDS_PRIVATE *psds, int *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds, int *ptr, int len)
sds_read	.\libsndfile-1.0.17\src\sds.c	/^static int sds_read (SF_PRIVATE *psf, SDS_PRIVATE *psds, int *iptr, int readcount) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds, int *iptr, int readcount)
sds_read_d	.\libsndfile-1.0.17\src\sds.c	/^sds_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
sds_read_d	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
sds_read_f	.\libsndfile-1.0.17\src\sds.c	/^sds_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
sds_read_f	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
sds_read_header	.\libsndfile-1.0.17\src\sds.c	/^sds_read_header (SF_PRIVATE *psf, SDS_PRIVATE *psds)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_read_header	.\libsndfile-1.0.17\src\sds.c	/^static int	sds_read_header (SF_PRIVATE *psf, SDS_PRIVATE *psds) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds)
sds_read_i	.\libsndfile-1.0.17\src\sds.c	/^sds_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
sds_read_i	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
sds_read_s	.\libsndfile-1.0.17\src\sds.c	/^sds_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
sds_read_s	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
sds_seek	.\libsndfile-1.0.17\src\sds.c	/^sds_seek (SF_PRIVATE *psf, int mode, sf_count_t seek_from_start)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t seek_from_start)
sds_seek	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_seek (SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
sds_write	.\libsndfile-1.0.17\src\sds.c	/^sds_write (SF_PRIVATE *psf, SDS_PRIVATE *psds, const int *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds, const int *ptr, int len)
sds_write	.\libsndfile-1.0.17\src\sds.c	/^static int sds_write (SF_PRIVATE *psf, SDS_PRIVATE *psds, const int *iptr, int writecount) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, SDS_PRIVATE *psds, const int *iptr, int writecount)
sds_write_d	.\libsndfile-1.0.17\src\sds.c	/^sds_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
sds_write_d	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
sds_write_f	.\libsndfile-1.0.17\src\sds.c	/^sds_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
sds_write_f	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
sds_write_header	.\libsndfile-1.0.17\src\sds.c	/^sds_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
sds_write_header	.\libsndfile-1.0.17\src\sds.c	/^static int	sds_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
sds_write_i	.\libsndfile-1.0.17\src\sds.c	/^sds_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
sds_write_i	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
sds_write_s	.\libsndfile-1.0.17\src\sds.c	/^sds_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
sds_write_s	.\libsndfile-1.0.17\src\sds.c	/^static sf_count_t sds_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
section_types	.\libsndfile-1.0.17\src\voc.c	/^{	unsigned int 	sections, section_types ;$/;"	m	struct:__anon59	file:	access:public
sections	.\libsndfile-1.0.17\src\voc.c	/^{	unsigned int 	sections, section_types ;$/;"	m	struct:__anon59	file:	access:public
sections	.\sndfile.h	/^	int			sections ;$/;"	m	struct:SF_INFO	access:public
seek	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="seek"><\/A>$/;"	a
seek	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*seek) 		(struct sf_private_tag*, int mode, sf_count_t samples_from_start) ;$/;"	m	struct:sf_private_tag	access:public
seek	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	seek (sf_count_t frames, int whence) ;$/;"	p	class:SndfileHandle	access:public	signature:(sf_count_t frames, int whence)
seek	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::seek (sf_count_t frame_count, int whence)$/;"	f	class:SndfileHandle	signature:(sf_count_t frame_count, int whence)
seek	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="seek"><\/A>$/;"	a
seek	.\sndfile.h	/^	sf_vio_seek			seek ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
seek	.\sndfile.hh	/^		sf_count_t	seek (sf_count_t frames, int whence) ;$/;"	p	class:SndfileHandle	access:public	signature:(sf_count_t frames, int whence)
seek	.\sndfile.hh	/^SndfileHandle::seek (sf_count_t frame_count, int whence)$/;"	f	class:SndfileHandle	signature:(sf_count_t frame_count, int whence)
seekable	.\sndfile.h	/^	int			seekable ;$/;"	m	struct:SF_INFO	access:public
setString	.\libsndfile-1.0.17\src\sndfile.hh	/^		int setString (int str_type, const char* str) ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type, const char* str)
setString	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::setString (int str_type, const char* str)$/;"	f	class:SndfileHandle	signature:(int str_type, const char* str)
setString	.\sndfile.hh	/^		int setString (int str_type, const char* str) ;$/;"	p	class:SndfileHandle	access:public	signature:(int str_type, const char* str)
setString	.\sndfile.hh	/^SndfileHandle::setString (int str_type, const char* str)$/;"	f	class:SndfileHandle	signature:(int str_type, const char* str)
sf	.\libsndfile-1.0.17\src\common.h	/^	SF_INFO			sf ;$/;"	m	struct:sf_private_tag	access:public
sf	.\libsndfile-1.0.17\src\sndfile.hh	/^			SNDFILE *sf ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
sf	.\sndfile.hh	/^			SNDFILE *sf ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
sf_close	.\libsndfile-1.0.17\src\sndfile.c	/^sf_close	(SNDFILE *sndfile)$/;"	f	signature:(SNDFILE *sndfile)
sf_close	.\sndfile.h	/^int		sf_close		(SNDFILE *sndfile) ;$/;"	p	signature:(SNDFILE *sndfile)
sf_command	.\libsndfile-1.0.17\src\sndfile.c	/^sf_command	(SNDFILE *sndfile, int command, void *data, int datasize)$/;"	f	signature:(SNDFILE *sndfile, int command, void *data, int datasize)
sf_command	.\sndfile.h	/^int		sf_command	(SNDFILE *sndfile, int command, void *data, int datasize) ;$/;"	p	signature:(SNDFILE *sndfile, int command, void *data, int datasize)
sf_count_t	.\sndfile.h	/^typedef __int64	sf_count_t ;$/;"	t
sf_errno	.\libsndfile-1.0.17\src\sndfile.c	/^static int	sf_errno = 0 ;$/;"	v	file:
sf_error	.\libsndfile-1.0.17\src\sndfile.c	/^sf_error (SNDFILE *sndfile)$/;"	f	signature:(SNDFILE *sndfile)
sf_error	.\sndfile.h	/^int		sf_error		(SNDFILE *sndfile) ;$/;"	p	signature:(SNDFILE *sndfile)
sf_error_number	.\libsndfile-1.0.17\src\sndfile.c	/^sf_error_number	(int errnum)$/;"	f	signature:(int errnum)
sf_error_number	.\sndfile.h	/^const char*	sf_error_number	(int errnum) ;$/;"	p	signature:(int errnum)
sf_error_str	.\libsndfile-1.0.17\src\sndfile.c	/^sf_error_str (SNDFILE *sndfile, char *str, size_t maxlen)$/;"	f	signature:(SNDFILE *sndfile, char *str, size_t maxlen)
sf_error_str	.\sndfile.h	/^int		sf_error_str	(SNDFILE *sndfile, char* str, size_t len) ;$/;"	p	signature:(SNDFILE *sndfile, char* str, size_t len)
sf_flac_enc_seek_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__SeekableStreamEncoderSeekStatus sf_flac_enc_seek_callback (const FLAC__SeekableStreamEncoder *encoder, FLAC__uint64 absolute_byte_offset, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamEncoder *encoder, FLAC__uint64 absolute_byte_offset, void *client_data)
sf_flac_enc_tell_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__SeekableStreamEncoderTellStatus sf_flac_enc_tell_callback (const FLAC__SeekableStreamEncoder *encoder, FLAC__uint64 *absolute_byte_offset, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamEncoder *encoder, FLAC__uint64 *absolute_byte_offset, void *client_data)
sf_flac_enc_write_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__StreamEncoderWriteStatus sf_flac_enc_write_callback (const FLAC__SeekableStreamEncoder *encoder, const FLAC__byte buffer [], unsigned bytes, unsigned samples, unsigned current_frame, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamEncoder *encoder, const FLAC__byte buffer [], unsigned bytes, unsigned samples, unsigned current_frame, void *client_data)
sf_flac_eof_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__bool sf_flac_eof_callback (const FLAC__SeekableStreamDecoder *decoder, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, void *client_data)
sf_flac_error_callback	.\libsndfile-1.0.17\src\flac.c	/^static void sf_flac_error_callback (const FLAC__SeekableStreamDecoder *decoder, FLAC__StreamDecoderErrorStatus status, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, FLAC__StreamDecoderErrorStatus status, void *client_data)
sf_flac_length_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__SeekableStreamDecoderLengthStatus sf_flac_length_callback (const FLAC__SeekableStreamDecoder *decoder, FLAC__uint64 *stream_length, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, FLAC__uint64 *stream_length, void *client_data)
sf_flac_meta_callback	.\libsndfile-1.0.17\src\flac.c	/^static void sf_flac_meta_callback (const FLAC__SeekableStreamDecoder *decoder, const FLAC__StreamMetadata *metadata, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, const FLAC__StreamMetadata *metadata, void *client_data)
sf_flac_read_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__SeekableStreamDecoderReadStatus sf_flac_read_callback (const FLAC__SeekableStreamDecoder *decoder, FLAC__byte buffer [], unsigned *bytes, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, FLAC__byte buffer [], unsigned *bytes, void *client_data)
sf_flac_seek_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__SeekableStreamDecoderSeekStatus sf_flac_seek_callback (const FLAC__SeekableStreamDecoder *decoder, FLAC__uint64 absolute_byte_offset, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, FLAC__uint64 absolute_byte_offset, void *client_data)
sf_flac_tell_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__SeekableStreamDecoderTellStatus sf_flac_tell_callback (const FLAC__SeekableStreamDecoder *decoder, FLAC__uint64 *absolute_byte_offset, void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, FLAC__uint64 *absolute_byte_offset, void *client_data)
sf_flac_write_callback	.\libsndfile-1.0.17\src\flac.c	/^static FLAC__StreamDecoderWriteStatus sf_flac_write_callback (const FLAC__SeekableStreamDecoder *decoder, const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data) ;$/;"	p	file:	signature:(const FLAC__SeekableStreamDecoder *decoder, const FLAC__Frame *frame, const FLAC__int32 * const buffer [], void *client_data)
sf_format_check	.\libsndfile-1.0.17\src\sndfile.c	/^sf_format_check	(const SF_INFO *info)$/;"	f	signature:(const SF_INFO *info)
sf_format_check	.\sndfile.h	/^int		sf_format_check	(const SF_INFO *info) ;$/;"	p	signature:(const SF_INFO *info)
sf_get_string	.\libsndfile-1.0.17\src\sndfile.c	/^sf_get_string (SNDFILE *sndfile, int str_type)$/;"	f	signature:(SNDFILE *sndfile, int str_type)
sf_get_string	.\sndfile.h	/^const char* sf_get_string (SNDFILE *sndfile, int str_type) ;$/;"	p	signature:(SNDFILE *sndfile, int str_type)
sf_logbuffer	.\libsndfile-1.0.17\src\sndfile.c	/^static char	sf_logbuffer [SF_BUFFER_LEN] = { 0 } ;$/;"	v	file:
sf_open	.\libsndfile-1.0.17\src\sndfile.c	/^sf_open	(const char *path, int mode, SF_INFO *sfinfo)$/;"	f	signature:(const char *path, int mode, SF_INFO *sfinfo)
sf_open	.\sndfile.h	/^SNDFILE* 	sf_open		(const char *path, int mode, SF_INFO *sfinfo) ;$/;"	p	signature:(const char *path, int mode, SF_INFO *sfinfo)
sf_open_fd	.\libsndfile-1.0.17\src\sndfile.c	/^sf_open_fd	(int fd, int mode, SF_INFO *sfinfo, int close_desc)$/;"	f	signature:(int fd, int mode, SF_INFO *sfinfo, int close_desc)
sf_open_fd	.\sndfile.h	/^SNDFILE* 	sf_open_fd	(int fd, int mode, SF_INFO *sfinfo, int close_desc) ;$/;"	p	signature:(int fd, int mode, SF_INFO *sfinfo, int close_desc)
sf_open_virtual	.\libsndfile-1.0.17\src\sndfile.c	/^sf_open_virtual	(SF_VIRTUAL_IO *sfvirtual, int mode, SF_INFO *sfinfo, void *user_data)$/;"	f	signature:(SF_VIRTUAL_IO *sfvirtual, int mode, SF_INFO *sfinfo, void *user_data)
sf_open_virtual	.\sndfile.h	/^SNDFILE* 	sf_open_virtual	(SF_VIRTUAL_IO *sfvirtual, int mode, SF_INFO *sfinfo, void *user_data) ;$/;"	p	signature:(SF_VIRTUAL_IO *sfvirtual, int mode, SF_INFO *sfinfo, void *user_data)
sf_perror	.\libsndfile-1.0.17\src\sndfile.c	/^sf_perror (SNDFILE *sndfile)$/;"	f	signature:(SNDFILE *sndfile)
sf_perror	.\sndfile.h	/^int		sf_perror		(SNDFILE *sndfile) ;$/;"	p	signature:(SNDFILE *sndfile)
sf_private_tag	.\libsndfile-1.0.17\src\common.h	/^typedef struct sf_private_tag$/;"	s
sf_private_tag::Magick	.\libsndfile-1.0.17\src\common.h	/^	int				Magick ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::__anon28::cbuf	.\libsndfile-1.0.17\src\common.h	/^		char			cbuf	[SF_BUFFER_LEN \/ sizeof (char)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::dbuf	.\libsndfile-1.0.17\src\common.h	/^	{	double			dbuf	[SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::fbuf	.\libsndfile-1.0.17\src\common.h	/^		float			fbuf	[SF_BUFFER_LEN \/ sizeof (float)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::ibuf	.\libsndfile-1.0.17\src\common.h	/^		int				ibuf	[SF_BUFFER_LEN \/ sizeof (int)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::lbuf	.\libsndfile-1.0.17\src\common.h	/^		int64_t			lbuf	[SF_BUFFER_LEN \/ sizeof (int64_t)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::lbuf	.\libsndfile-1.0.17\src\common.h	/^		long			lbuf	[SF_BUFFER_LEN \/ sizeof (double)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::sbuf	.\libsndfile-1.0.17\src\common.h	/^		short			sbuf	[SF_BUFFER_LEN \/ sizeof (short)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::scbuf	.\libsndfile-1.0.17\src\common.h	/^		signed char		scbuf	[SF_BUFFER_LEN \/ sizeof (signed char)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::__anon28::ucbuf	.\libsndfile-1.0.17\src\common.h	/^		unsigned char	ucbuf	[SF_BUFFER_LEN \/ sizeof (signed char)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
sf_private_tag::add_clipping	.\libsndfile-1.0.17\src\common.h	/^	int				add_clipping ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::auto_header	.\libsndfile-1.0.17\src\common.h	/^	int				auto_header ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::blockwidth	.\libsndfile-1.0.17\src\common.h	/^	int				blockwidth ;	\/* Size in bytes of one set of interleaved samples. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::broadcast_info	.\libsndfile-1.0.17\src\common.h	/^	SF_BROADCAST_INFO *broadcast_info ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::bytewidth	.\libsndfile-1.0.17\src\common.h	/^	int				bytewidth ;		\/* Size in bytes of one sample (one channel). *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::channel_map	.\libsndfile-1.0.17\src\common.h	/^	int				*channel_map ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::codec_close	.\libsndfile-1.0.17\src\common.h	/^	int				(*codec_close)		(struct sf_private_tag*) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::codec_data	.\libsndfile-1.0.17\src\common.h	/^	void			*codec_data ;		\/*	This is a pointer to dynamically allocated file$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::command	.\libsndfile-1.0.17\src\common.h	/^	int				(*command)		(struct sf_private_tag*, int command, void *data, int datasize) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::container_close	.\libsndfile-1.0.17\src\common.h	/^	int				(*container_close)	(struct sf_private_tag*) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::container_data	.\libsndfile-1.0.17\src\common.h	/^	void			*container_data ;	\/*	This is a pointer to dynamically allocated file$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::dataend	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		dataend ;		\/* Offset to file tailer. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::datalength	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		datalength ;	\/* Length in bytes of the audio data. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::dataoffset	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		dataoffset ;	\/* Offset in number of bytes from beginning of file. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::directory	.\libsndfile-1.0.17\src\common.h	/^	char			directory	[SF_FILENAME_LEN] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::dither	.\libsndfile-1.0.17\src\common.h	/^	void			*dither ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::do_not_close_descriptor	.\libsndfile-1.0.17\src\common.h	/^	int				do_not_close_descriptor ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::endian	.\libsndfile-1.0.17\src\common.h	/^	int				endian ;		\/* File endianness : SF_ENDIAN_LITTLE or SF_ENDIAN_BIG. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::error	.\libsndfile-1.0.17\src\common.h	/^	int				error ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::filedes	.\libsndfile-1.0.17\src\common.h	/^	int 			filedes, rsrcdes, savedes ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::filelength	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		filelength ;	\/* Overall length of (embedded) file. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::filename	.\libsndfile-1.0.17\src\common.h	/^	char			filename	[SF_FILENAME_LEN \/ 4] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::fileoffset	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		fileoffset ;	\/* Offset in number of bytes from beginning of file. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::filepath	.\libsndfile-1.0.17\src\common.h	/^	char			filepath	[SF_FILENAME_LEN] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::float_endswap	.\libsndfile-1.0.17\src\common.h	/^	int				float_endswap ;	\/* Need to endswap float32s? *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::float_int_mult	.\libsndfile-1.0.17\src\common.h	/^	int				float_int_mult ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::float_max	.\libsndfile-1.0.17\src\common.h	/^	float			float_max ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::format_desc	.\libsndfile-1.0.17\src\common.h	/^	char			*format_desc ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::has_text	.\libsndfile-1.0.17\src\common.h	/^	int				has_text ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::have_written	.\libsndfile-1.0.17\src\common.h	/^	int				have_written ;	\/* Has a single write been done to the file? *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::headend	.\libsndfile-1.0.17\src\common.h	/^	int				headindex, headend ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::header	.\libsndfile-1.0.17\src\common.h	/^	unsigned char	header		[SF_HEADER_LEN] ; \/* Must be unsigned *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::headindex	.\libsndfile-1.0.17\src\common.h	/^	int				headindex, headend ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::hfile	.\libsndfile-1.0.17\src\common.h	/^	void 			*hfile, *hrsrc, *hsaved ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::hrsrc	.\libsndfile-1.0.17\src\common.h	/^	void 			*hfile, *hrsrc, *hsaved ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::hsaved	.\libsndfile-1.0.17\src\common.h	/^	void 			*hfile, *hrsrc, *hsaved ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::ieee_replace	.\libsndfile-1.0.17\src\common.h	/^	int				ieee_replace ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::instrument	.\libsndfile-1.0.17\src\common.h	/^	SF_INSTRUMENT	*instrument ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::interleave	.\libsndfile-1.0.17\src\common.h	/^	void			*interleave ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::is_pipe	.\libsndfile-1.0.17\src\common.h	/^	int				is_pipe ;		\/* True if file is a pipe. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::last_op	.\libsndfile-1.0.17\src\common.h	/^	int				last_op ;		\/* Last operation; either SFM_READ or SFM_WRITE *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::logbuffer	.\libsndfile-1.0.17\src\common.h	/^	char			logbuffer	[SF_BUFFER_LEN] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::logindex	.\libsndfile-1.0.17\src\common.h	/^	int				logindex ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::loop_info	.\libsndfile-1.0.17\src\common.h	/^	SF_LOOP_INFO	*loop_info ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::mode	.\libsndfile-1.0.17\src\common.h	/^	int				mode ;			\/* Open mode : SFM_READ, SFM_WRITE or SFM_RDWR. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::norm_double	.\libsndfile-1.0.17\src\common.h	/^	int				norm_double ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::norm_float	.\libsndfile-1.0.17\src\common.h	/^	int				norm_float ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::peak_info	.\libsndfile-1.0.17\src\common.h	/^	PEAK_INFO		*peak_info ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::pipeoffset	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		pipeoffset ;	\/* Number of bytes read from a pipe. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::read_current	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		read_current ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::read_dither	.\libsndfile-1.0.17\src\common.h	/^	SF_DITHER_INFO	read_dither ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::read_double	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_double)	(struct sf_private_tag*, double *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::read_float	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_float)	(struct sf_private_tag*, float *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::read_int	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_int)		(struct sf_private_tag*, int *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::read_short	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*read_short)	(struct sf_private_tag*, short *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::rsrcdes	.\libsndfile-1.0.17\src\common.h	/^	int 			filedes, rsrcdes, savedes ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::rsrclength	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		rsrclength ;	\/* Length of the resource fork (if it exists). *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::rsrcpath	.\libsndfile-1.0.17\src\common.h	/^	char			rsrcpath	[SF_FILENAME_LEN] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::rwf_endian	.\libsndfile-1.0.17\src\common.h	/^	int				rwf_endian ;	\/* Header endian-ness flag. *\/$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::savedes	.\libsndfile-1.0.17\src\common.h	/^	int 			filedes, rsrcdes, savedes ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::seek	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*seek) 		(struct sf_private_tag*, int mode, sf_count_t samples_from_start) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::sf	.\libsndfile-1.0.17\src\common.h	/^	SF_INFO			sf ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::str_end	.\libsndfile-1.0.17\src\common.h	/^	char			*str_end ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::str_flags	.\libsndfile-1.0.17\src\common.h	/^	int				str_flags ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::str_storage	.\libsndfile-1.0.17\src\common.h	/^	char			str_storage [SF_STR_BUFFER_LEN] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::strings	.\libsndfile-1.0.17\src\common.h	/^	STR_DATA		strings [SF_MAX_STRINGS] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::syserr	.\libsndfile-1.0.17\src\common.h	/^	char			syserr		[SF_SYSERR_LEN] ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::u	.\libsndfile-1.0.17\src\common.h	/^		} u ;$/;"	m	struct:sf_private_tag	typeref:union:sf_private_tag::__anon28	access:public
sf_private_tag::vio	.\libsndfile-1.0.17\src\common.h	/^	SF_VIRTUAL_IO		vio ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::vio_user_data	.\libsndfile-1.0.17\src\common.h	/^	void				*vio_user_data ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::virtual_io	.\libsndfile-1.0.17\src\common.h	/^	int					virtual_io ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::write_current	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		write_current ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::write_dither	.\libsndfile-1.0.17\src\common.h	/^	SF_DITHER_INFO	write_dither ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::write_double	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_double)	(struct sf_private_tag*, const double *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::write_float	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_float)	(struct sf_private_tag*, const float *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::write_header	.\libsndfile-1.0.17\src\common.h	/^	int				(*write_header)	(struct sf_private_tag*, int calc_length) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::write_int	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_int)	(struct sf_private_tag*, const int *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_private_tag::write_short	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_short)	(struct sf_private_tag*, const short *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
sf_read_double	.\libsndfile-1.0.17\src\sndfile.c	/^sf_read_double	(SNDFILE *sndfile, double *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, double *ptr, sf_count_t len)
sf_read_double	.\sndfile.h	/^sf_count_t	sf_read_double	(SNDFILE *sndfile, double *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, double *ptr, sf_count_t items)
sf_read_float	.\libsndfile-1.0.17\src\sndfile.c	/^sf_read_float	(SNDFILE *sndfile, float *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, float *ptr, sf_count_t len)
sf_read_float	.\sndfile.h	/^sf_count_t	sf_read_float	(SNDFILE *sndfile, float *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, float *ptr, sf_count_t items)
sf_read_int	.\libsndfile-1.0.17\src\sndfile.c	/^sf_read_int		(SNDFILE *sndfile, int *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, int *ptr, sf_count_t len)
sf_read_int	.\sndfile.h	/^sf_count_t	sf_read_int		(SNDFILE *sndfile, int *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, int *ptr, sf_count_t items)
sf_read_raw	.\libsndfile-1.0.17\src\sndfile.c	/^sf_read_raw		(SNDFILE *sndfile, void *ptr, sf_count_t bytes)$/;"	f	signature:(SNDFILE *sndfile, void *ptr, sf_count_t bytes)
sf_read_raw	.\sndfile.h	/^sf_count_t	sf_read_raw		(SNDFILE *sndfile, void *ptr, sf_count_t bytes) ;$/;"	p	signature:(SNDFILE *sndfile, void *ptr, sf_count_t bytes)
sf_read_short	.\libsndfile-1.0.17\src\sndfile.c	/^sf_read_short	(SNDFILE *sndfile, short *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, short *ptr, sf_count_t len)
sf_read_short	.\sndfile.h	/^sf_count_t	sf_read_short	(SNDFILE *sndfile, short *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, short *ptr, sf_count_t items)
sf_readf_double	.\libsndfile-1.0.17\src\sndfile.c	/^sf_readf_double	(SNDFILE *sndfile, double *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, double *ptr, sf_count_t frames)
sf_readf_double	.\sndfile.h	/^sf_count_t	sf_readf_double		(SNDFILE *sndfile, double *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, double *ptr, sf_count_t frames)
sf_readf_float	.\libsndfile-1.0.17\src\sndfile.c	/^sf_readf_float	(SNDFILE *sndfile, float *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, float *ptr, sf_count_t frames)
sf_readf_float	.\sndfile.h	/^sf_count_t	sf_readf_float	(SNDFILE *sndfile, float *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, float *ptr, sf_count_t frames)
sf_readf_int	.\libsndfile-1.0.17\src\sndfile.c	/^sf_readf_int	(SNDFILE *sndfile, int *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, int *ptr, sf_count_t frames)
sf_readf_int	.\sndfile.h	/^sf_count_t	sf_readf_int	(SNDFILE *sndfile, int *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, int *ptr, sf_count_t frames)
sf_readf_short	.\libsndfile-1.0.17\src\sndfile.c	/^sf_readf_short		(SNDFILE *sndfile, short *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, short *ptr, sf_count_t frames)
sf_readf_short	.\sndfile.h	/^sf_count_t	sf_readf_short	(SNDFILE *sndfile, short *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, short *ptr, sf_count_t frames)
sf_seek	.\libsndfile-1.0.17\src\sndfile.c	/^sf_seek	(SNDFILE *sndfile, sf_count_t offset, int whence)$/;"	f	signature:(SNDFILE *sndfile, sf_count_t offset, int whence)
sf_seek	.\sndfile.h	/^sf_count_t	sf_seek 		(SNDFILE *sndfile, sf_count_t frames, int whence) ;$/;"	p	signature:(SNDFILE *sndfile, sf_count_t frames, int whence)
sf_set_string	.\libsndfile-1.0.17\src\sndfile.c	/^sf_set_string (SNDFILE *sndfile, int str_type, const char* str)$/;"	f	signature:(SNDFILE *sndfile, int str_type, const char* str)
sf_set_string	.\sndfile.h	/^int sf_set_string (SNDFILE *sndfile, int str_type, const char* str) ;$/;"	p	signature:(SNDFILE *sndfile, int str_type, const char* str)
sf_strerror	.\libsndfile-1.0.17\src\sndfile.c	/^sf_strerror (SNDFILE *sndfile)$/;"	f	signature:(SNDFILE *sndfile)
sf_strerror	.\sndfile.h	/^const char* sf_strerror (SNDFILE *sndfile) ;$/;"	p	signature:(SNDFILE *sndfile)
sf_syserr	.\libsndfile-1.0.17\src\sndfile.c	/^static char	sf_syserr [SF_SYSERR_LEN] = { 0 } ;$/;"	v	file:
sf_vio_get_filelen	.\sndfile.h	/^typedef sf_count_t		(*sf_vio_get_filelen)	(void *user_data) ;$/;"	t
sf_vio_read	.\sndfile.h	/^typedef sf_count_t		(*sf_vio_read)		(void *ptr, sf_count_t count, void *user_data) ;$/;"	t
sf_vio_seek	.\sndfile.h	/^typedef sf_count_t		(*sf_vio_seek)		(sf_count_t offset, int whence, void *user_data) ;$/;"	t
sf_vio_tell	.\sndfile.h	/^typedef sf_count_t		(*sf_vio_tell)		(void *user_data) ;$/;"	t
sf_vio_write	.\sndfile.h	/^typedef sf_count_t		(*sf_vio_write)		(const void *ptr, sf_count_t count, void *user_data) ;$/;"	t
sf_write_double	.\libsndfile-1.0.17\src\sndfile.c	/^sf_write_double	(SNDFILE *sndfile, const double *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, const double *ptr, sf_count_t len)
sf_write_double	.\sndfile.h	/^sf_count_t	sf_write_double	(SNDFILE *sndfile, const double *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, const double *ptr, sf_count_t items)
sf_write_float	.\libsndfile-1.0.17\src\sndfile.c	/^sf_write_float	(SNDFILE *sndfile, const float *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, const float *ptr, sf_count_t len)
sf_write_float	.\sndfile.h	/^sf_count_t	sf_write_float	(SNDFILE *sndfile, const float *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, const float *ptr, sf_count_t items)
sf_write_int	.\libsndfile-1.0.17\src\sndfile.c	/^sf_write_int	(SNDFILE *sndfile, const int *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, const int *ptr, sf_count_t len)
sf_write_int	.\sndfile.h	/^sf_count_t	sf_write_int 	(SNDFILE *sndfile, const int *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, const int *ptr, sf_count_t items)
sf_write_raw	.\libsndfile-1.0.17\src\sndfile.c	/^sf_write_raw	(SNDFILE *sndfile, const void *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, const void *ptr, sf_count_t len)
sf_write_raw	.\sndfile.h	/^sf_count_t	sf_write_raw 	(SNDFILE *sndfile, const void *ptr, sf_count_t bytes) ;$/;"	p	signature:(SNDFILE *sndfile, const void *ptr, sf_count_t bytes)
sf_write_short	.\libsndfile-1.0.17\src\sndfile.c	/^sf_write_short	(SNDFILE *sndfile, const short *ptr, sf_count_t len)$/;"	f	signature:(SNDFILE *sndfile, const short *ptr, sf_count_t len)
sf_write_short	.\sndfile.h	/^sf_count_t	sf_write_short	(SNDFILE *sndfile, const short *ptr, sf_count_t items) ;$/;"	p	signature:(SNDFILE *sndfile, const short *ptr, sf_count_t items)
sf_write_sync	.\libsndfile-1.0.17\src\sndfile.c	/^sf_write_sync	(SNDFILE *sndfile)$/;"	f	signature:(SNDFILE *sndfile)
sf_write_sync	.\sndfile.h	/^void	sf_write_sync	(SNDFILE *sndfile) ;$/;"	p	signature:(SNDFILE *sndfile)
sf_writef_double	.\libsndfile-1.0.17\src\sndfile.c	/^sf_writef_double	(SNDFILE *sndfile, const double *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, const double *ptr, sf_count_t frames)
sf_writef_double	.\sndfile.h	/^sf_count_t	sf_writef_double	(SNDFILE *sndfile, const double *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, const double *ptr, sf_count_t frames)
sf_writef_float	.\libsndfile-1.0.17\src\sndfile.c	/^sf_writef_float	(SNDFILE *sndfile, const float *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, const float *ptr, sf_count_t frames)
sf_writef_float	.\sndfile.h	/^sf_count_t	sf_writef_float	(SNDFILE *sndfile, const float *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, const float *ptr, sf_count_t frames)
sf_writef_int	.\libsndfile-1.0.17\src\sndfile.c	/^sf_writef_int	(SNDFILE *sndfile, const int *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, const int *ptr, sf_count_t frames)
sf_writef_int	.\sndfile.h	/^sf_count_t	sf_writef_int 	(SNDFILE *sndfile, const int *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, const int *ptr, sf_count_t frames)
sf_writef_short	.\libsndfile-1.0.17\src\sndfile.c	/^sf_writef_short	(SNDFILE *sndfile, const short *ptr, sf_count_t frames)$/;"	f	signature:(SNDFILE *sndfile, const short *ptr, sf_count_t frames)
sf_writef_short	.\sndfile.h	/^sf_count_t	sf_writef_short	(SNDFILE *sndfile, const short *ptr, sf_count_t frames) ;$/;"	p	signature:(SNDFILE *sndfile, const short *ptr, sf_count_t frames)
sfinfo	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	SF_INFO sfinfo;	$/;"	m	struct:shared_data	file:	access:public
sfinfo	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SF_INFO 		sfinfo ;$/;"	m	struct:__anon4	file:	access:public
sfinfo	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SF_INFO 	sfinfo ;$/;"	m	struct:__anon5	file:	access:public
sfinfo	.\libsndfile-1.0.17\src\sndfile.hh	/^			SF_INFO sfinfo ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
sfinfo	.\sndfile.hh	/^			SF_INFO sfinfo ;$/;"	m	struct:SndfileHandle::SNDFILE_ref	access:public
shared_data	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^struct shared_data$/;"	s	file:
shared_data::finished	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	sem_id finished;$/;"	m	struct:shared_data	file:	access:public
shared_data::player	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	BSoundPlayer *player;$/;"	m	struct:shared_data	file:	access:public
shared_data::sfinfo	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	SF_INFO sfinfo;	$/;"	m	struct:shared_data	file:	access:public
shared_data::sndfile	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	SNDFILE *sndfile;$/;"	m	struct:shared_data	file:	access:public
short_buffer	.\libsndfile-1.0.17\tests\alaw_test.c	/^static	short			short_buffer [BUFFER_SIZE] ;$/;"	v	file:
short_buffer	.\libsndfile-1.0.17\tests\ulaw_test.c	/^static	short			short_buffer [BUFFER_SIZE] ;$/;"	v	file:
short_checksum	.\libsndfile-1.0.17\regtest\checksum.c	/^short_checksum (SNDFILE * file, int start)$/;"	f	file:	signature:(SNDFILE * file, int start)
short_checksum	.\libsndfile-1.0.17\regtest\checksum.c	/^static int short_checksum (SNDFILE * file, int start) ;$/;"	p	file:	signature:(SNDFILE * file, int start)
short_data	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static short	short_data [DFT_DATA_LENGTH] ;$/;"	v	file:
show_fstat_error	.\libsndfile-1.0.17\tests\win32_test.c	/^show_fstat_error (void)$/;"	f	file:	signature:(void)
show_fstat_error	.\libsndfile-1.0.17\tests\win32_test.c	/^static void show_fstat_error (void) ;$/;"	p	file:	signature:(void)
show_lseek_error	.\libsndfile-1.0.17\tests\win32_test.c	/^show_lseek_error (void)$/;"	f	file:	signature:(void)
show_lseek_error	.\libsndfile-1.0.17\tests\win32_test.c	/^static void show_lseek_error (void) ;$/;"	p	file:	signature:(void)
sigDenominator	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	sigDenominator ;$/;"	m	struct:__anon16	file:	access:public
sigNumerator	.\libsndfile-1.0.17\src\aiff.c	/^	unsigned short	sigNumerator ;$/;"	m	struct:__anon16	file:	access:public
sign	.\libsndfile-1.0.17\src\avr.c	/^	short	sign ;		\/* 0 = unsigned, 0xffff = signed *\/$/;"	m	struct:__anon21	file:	access:public
simple_formats	.\libsndfile-1.0.17\src\command.c	/^static SF_FORMAT_INFO const simple_formats [] =$/;"	v	file:
single_quote_replace	.\libsndfile-1.0.17\regtest\database.c	/^single_quote_replace (char * buf)$/;"	f	file:	signature:(char * buf)
single_quote_replace	.\libsndfile-1.0.17\regtest\database.c	/^static void single_quote_replace (char * buf) ;$/;"	p	file:	signature:(char * buf)
size	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned int	size ;$/;"	m	struct:__anon10	file:	access:public
size	.\libsndfile-1.0.17\src\mat5.c	/^{	sf_count_t	size ;$/;"	m	struct:__anon44	file:	access:public
size20	.\libsndfile-1.0.17\src\wav_w64.h	/^	WAV_FMT_SIZE20		size20 ;$/;"	m	union:__anon74	access:public
slnt_MARKER	.\libsndfile-1.0.17\src\wav.c	47;"	d	file:
smooth_buffer	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	BUFFER	smooth_buffer ;$/;"	v	file:
smoothed_diff_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^smoothed_diff_double (double *data, unsigned int datalen)$/;"	f	file:	signature:(double *data, unsigned int datalen)
smoothed_diff_double	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	smoothed_diff_double (double *data, unsigned int datalen) ;$/;"	p	file:	signature:(double *data, unsigned int datalen)
smoothed_diff_float	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^smoothed_diff_float (float *data, unsigned int datalen)$/;"	f	file:	signature:(float *data, unsigned int datalen)
smoothed_diff_float	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	smoothed_diff_float (float *data, unsigned int datalen) ;$/;"	p	file:	signature:(float *data, unsigned int datalen)
smoothed_diff_int	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^smoothed_diff_int (int *data, unsigned int datalen)$/;"	f	file:	signature:(int *data, unsigned int datalen)
smoothed_diff_int	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	smoothed_diff_int (int *data, unsigned int datalen) ;$/;"	p	file:	signature:(int *data, unsigned int datalen)
smoothed_diff_short	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^smoothed_diff_short (short *data, unsigned int datalen)$/;"	f	file:	signature:(short *data, unsigned int datalen)
smoothed_diff_short	.\libsndfile-1.0.17\tests\lossy_comp_test.c	/^static	void	smoothed_diff_short (short *data, unsigned int datalen) ;$/;"	p	file:	signature:(short *data, unsigned int datalen)
smpl_MARKER	.\libsndfile-1.0.17\src\wav.c	55;"	d	file:
sndfile	.\libsndfile-1.0.17\examples\sndfile-play-beos.cpp	/^	SNDFILE *sndfile;$/;"	m	struct:shared_data	file:	access:public
sndfile	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SNDFILE 		*sndfile ;$/;"	m	struct:__anon4	file:	access:public
sndfile	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	SNDFILE 	*sndfile ;$/;"	m	struct:__anon5	file:	access:public
snprintf	.\libsndfile-1.0.17\examples\sndfile-info.c	30;"	d	file:
snprintf	.\libsndfile-1.0.17\tests\utils.h	42;"	d
software	.\libsndfile-1.0.17\src\xi.c	/^	char	software [20] ;$/;"	m	struct:__anon76	file:	access:public
software	.\libsndfile-1.0.17\tests\string_test.c	/^	software	[]	= "software (libsndfile-X.Y.Z)",$/;"	v	file:
solaris_play	.\libsndfile-1.0.17\examples\sndfile-play.c	/^solaris_play (int argc, char *argv [])$/;"	f	file:	signature:(int argc, char *argv [])
source	.\libsndfile-1.0.17\src\paf.c	/^	int	source ;$/;"	m	struct:__anon46	file:	access:public
sowt_MARKER	.\libsndfile-1.0.17\src\aiff.c	58;"	d	file:
span	.\libsndfile-1.0.17\src\dwvw.c	/^{	int		dwm_maxsize, bit_width, max_delta, span ;$/;"	m	struct:__anon34	file:	access:public
sql	.\libsndfile-1.0.17\regtest\database.c	/^{	sqlite3 *sql ;$/;"	m	struct:__anon7	file:	access:public
sr	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short sr[2];	\/*$/;"	m	struct:g72x_state	access:public
sr2	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
sr3	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
srate	.\libsndfile-1.0.17\src\avr.c	/^	int		srate ;		\/* sample frequency in hertz *\/$/;"	m	struct:__anon21	file:	access:public
srate	.\libsndfile-1.0.17\src\caf.c	/^{	unsigned char srate [8] ;$/;"	m	struct:__anon22	file:	access:public
srate	.\libsndfile-1.0.17\src\dwd.c	/^	unsigned short srate, maxval ;$/;"	m	struct:__anon33	file:	access:public
srate	.\libsndfile-1.0.17\src\txw.c	/^{	unsigned char	format, srate, sr2, sr3 ;$/;"	m	struct:__anon56	file:	access:public
srhash	.\libsndfile-1.0.17\src\txw.c	/^	unsigned short	srhash ;$/;"	m	struct:__anon56	file:	access:public
ssize_t	.\libsndfile-1.0.17\src\file_io.c	/^typedef long ssize_t ;$/;"	t	file:
ssnd_offset	.\libsndfile-1.0.17\src\aiff.c	/^	sf_count_t	ssnd_offset ;$/;"	m	struct:__anon18	file:	access:public
start	.\sndfile.h	/^		unsigned int start ;$/;"	m	struct:__anon96::__anon97	access:public
status	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_error_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__StreamDecoderErrorStatus status, void *client_data)$/;"	v	file:
stdin_test	.\libsndfile-1.0.17\tests\stdin_test.c	/^static	void	stdin_test	(int typemajor, int count) ;$/;"	p	file:	signature:(int typemajor, int count)
stdin_test	.\libsndfile-1.0.17\tests\stdin_test.c	/^stdin_test	(int typemajor, int count)$/;"	f	file:	signature:(int typemajor, int count)
stdio_test	.\libsndfile-1.0.17\tests\stdio_test.c	/^static void		stdio_test (const char *filetype) ;$/;"	p	file:	signature:(const char *filetype)
stdio_test	.\libsndfile-1.0.17\tests\stdio_test.c	/^stdio_test (const char *filetype)$/;"	f	file:	signature:(const char *filetype)
stdout_test	.\libsndfile-1.0.17\tests\stdout_test.c	/^static	void	stdout_test	(int typemajor, int count) ;$/;"	p	file:	signature:(int typemajor, int count)
stdout_test	.\libsndfile-1.0.17\tests\stdout_test.c	/^stdout_test	(int typemajor, int count)$/;"	f	file:	signature:(int typemajor, int count)
step_adjust_table	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static short step_adjust_table [8] =$/;"	v	file:
step_index	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	short step_index ;$/;"	m	struct:__anon60	file:	access:public
step_size	.\libsndfile-1.0.17\src\G72x\g72x.c	/^int  step_size (G72x_STATE *state_ptr)$/;"	f	signature:(G72x_STATE *state_ptr)
step_size	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^int	step_size (G72x_STATE *state_ptr);$/;"	p	signature:(G72x_STATE *state_ptr)
step_size_table	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static short step_size_table [49] =$/;"	v	file:
stepindx	.\libsndfile-1.0.17\src\ima_adpcm.c	/^	int				stepindx [2] ;$/;"	m	struct:IMA_ADPCM_PRIVATE_tag	file:	access:public
stereo_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void stereo_24bit_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_24bit_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^stereo_24bit_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void stereo_char_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_char_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^stereo_char_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void stereo_double_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_double_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^stereo_double_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void stereo_float_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_float_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^stereo_float_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void stereo_int_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_int_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^stereo_int_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^static void stereo_short_test (const char *filename, int format, int long_file_ok, int allow_fd) ;$/;"	p	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
stereo_short_test	.\libsndfile-1.0.17\tests\write_read_test.c	/^stereo_short_test (const char *filename, int format, int long_file_ok, int allow_fd)$/;"	f	file:	signature:(const char *filename, int format, int long_file_ok, int allow_fd)
str	.\libsndfile-1.0.17\src\common.h	/^	char 	*str ;$/;"	m	struct:__anon27	access:public
str	.\libsndfile-1.0.17\src\sndfile.c	/^	const char	*str ;$/;"	m	struct:__anon53	file:	access:public
strError	.\libsndfile-1.0.17\src\sndfile.hh	/^		const char * strError (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
strError	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::strError (void) const$/;"	f	class:SndfileHandle	signature:(void) const
strError	.\sndfile.hh	/^		const char * strError (void) const ;$/;"	p	class:SndfileHandle	access:public	signature:(void) const
strError	.\sndfile.hh	/^SndfileHandle::strError (void) const$/;"	f	class:SndfileHandle	signature:(void) const
str_count	.\libsndfile-1.0.17\src\sd2.c	/^	int str_index, str_count ;$/;"	m	struct:__anon51	file:	access:public
str_end	.\libsndfile-1.0.17\src\common.h	/^	char			*str_end ;$/;"	m	struct:sf_private_tag	access:public
str_flags	.\libsndfile-1.0.17\src\common.h	/^	int				str_flags ;$/;"	m	struct:sf_private_tag	access:public
str_index	.\libsndfile-1.0.17\src\sd2.c	/^	int str_index, str_count ;$/;"	m	struct:__anon51	file:	access:public
str_of_type	.\libsndfile-1.0.17\examples\sndfile-info.c	/^str_of_type (int mode)$/;"	f	file:	signature:(int mode)
str_storage	.\libsndfile-1.0.17\src\common.h	/^	char			str_storage [SF_STR_BUFFER_LEN] ;$/;"	m	struct:sf_private_tag	access:public
strbuffer	.\libsndfile-1.0.17\tests\sfversion.c	/^static	char	strbuffer [BUFFER_SIZE] ;$/;"	v	file:
strc_MARKER	.\libsndfile-1.0.17\src\wav.c	61;"	d	file:
stream_length	.\libsndfile-1.0.17\src\flac.c	/^sf_flac_length_callback (const FLAC__SeekableStreamDecoder * UNUSED (decoder), FLAC__uint64 *stream_length, void *client_data)$/;"	v	file:
strg_MARKER	.\libsndfile-1.0.17\src\caf.c	58;"	d	file:
string	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="string"><\/A>$/;"	a
string	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="string"><\/A>$/;"	a
string_in_log_buffer	.\libsndfile-1.0.17\tests\utils.c	/^string_in_log_buffer (SNDFILE *file, const char *s)$/;"	f	signature:(SNDFILE *file, const char *s)
string_in_log_buffer	.\libsndfile-1.0.17\tests\utils.h	/^int 	string_in_log_buffer (SNDFILE *file, const char *s) ;$/;"	p	signature:(SNDFILE *file, const char *s)
string_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int string_offset ;$/;"	m	struct:__anon51	file:	access:public
string_test	.\libsndfile-1.0.17\tests\string_test.c	/^static void	string_test (const char *filename, int typemajor) ;$/;"	p	file:	signature:(const char *filename, int typemajor)
string_test	.\libsndfile-1.0.17\tests\string_test.c	/^string_test (const char *filename, int typemajor)$/;"	f	file:	signature:(const char *filename, int typemajor)
strings	.\libsndfile-1.0.17\src\common.h	/^	STR_DATA		strings [SF_MAX_STRINGS] ;$/;"	m	struct:sf_private_tag	access:public
subformat_to_bytewidth	.\libsndfile-1.0.17\src\common.c	/^subformat_to_bytewidth (int format)$/;"	f	signature:(int format)
subformat_to_bytewidth	.\libsndfile-1.0.17\src\common.h	/^int subformat_to_bytewidth (int format) ;$/;"	p	signature:(int format)
subtype_formats	.\libsndfile-1.0.17\src\command.c	/^static SF_FORMAT_INFO subtype_formats [] =$/;"	v	file:
sustain_loop	.\libsndfile-1.0.17\src\aiff.c	/^	INST_LOOP	sustain_loop ;$/;"	m	struct:__anon13	file:	access:public
svx_close	.\libsndfile-1.0.17\src\svx.c	/^static int	svx_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
svx_close	.\libsndfile-1.0.17\src\svx.c	/^svx_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
svx_open	.\libsndfile-1.0.17\src\common.h	/^int		svx_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
svx_open	.\libsndfile-1.0.17\src\svx.c	/^svx_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
svx_read_header	.\libsndfile-1.0.17\src\svx.c	/^static int 	svx_read_header	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
svx_read_header	.\libsndfile-1.0.17\src\svx.c	/^svx_read_header	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
svx_write_header	.\libsndfile-1.0.17\src\svx.c	/^static int	svx_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
svx_write_header	.\libsndfile-1.0.17\src\svx.c	/^svx_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
syserr	.\libsndfile-1.0.17\src\common.h	/^	char			syserr		[SF_SYSERR_LEN] ;$/;"	m	struct:sf_private_tag	access:public
tag_SDS_PRIVATE	.\libsndfile-1.0.17\src\sds.c	/^typedef struct tag_SDS_PRIVATE$/;"	s	file:
tag_SDS_PRIVATE::bitwidth	.\libsndfile-1.0.17\src\sds.c	/^{	int bitwidth, frames ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::frames	.\libsndfile-1.0.17\src\sds.c	/^{	int bitwidth, frames ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::read_block	.\libsndfile-1.0.17\src\sds.c	/^	int read_block, read_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::read_count	.\libsndfile-1.0.17\src\sds.c	/^	int read_block, read_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::read_data	.\libsndfile-1.0.17\src\sds.c	/^	unsigned char read_data [SDS_BLOCK_SIZE] ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::read_samples	.\libsndfile-1.0.17\src\sds.c	/^	int	read_samples [SDS_BLOCK_SIZE \/ 2] ; \/* Maximum samples per block *\/$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::reader	.\libsndfile-1.0.17\src\sds.c	/^	int (*reader) (SF_PRIVATE *psf, struct tag_SDS_PRIVATE *psds) ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::samplesperblock	.\libsndfile-1.0.17\src\sds.c	/^	int	samplesperblock, total_blocks ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::total_blocks	.\libsndfile-1.0.17\src\sds.c	/^	int	samplesperblock, total_blocks ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::write_block	.\libsndfile-1.0.17\src\sds.c	/^	int write_block, write_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::write_count	.\libsndfile-1.0.17\src\sds.c	/^	int write_block, write_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::write_data	.\libsndfile-1.0.17\src\sds.c	/^	unsigned char write_data [SDS_BLOCK_SIZE] ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::write_samples	.\libsndfile-1.0.17\src\sds.c	/^	int	write_samples [SDS_BLOCK_SIZE \/ 2] ; \/* Maximum samples per block *\/$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tag_SDS_PRIVATE::writer	.\libsndfile-1.0.17\src\sds.c	/^	int (*writer) (SF_PRIVATE *psf, struct tag_SDS_PRIVATE *psds) ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
td	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	char td;	\/* delayed tone detect, new in 1988 version *\/$/;"	m	struct:g72x_state	access:public
tell	.\sndfile.h	/^	sf_vio_tell			tell ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
tenbytefloat2int	.\libsndfile-1.0.17\src\aiff.c	/^static int	tenbytefloat2int (unsigned char *bytes) ;$/;"	p	file:	signature:(unsigned char *bytes)
tenbytefloat2int	.\libsndfile-1.0.17\src\aiff.c	/^tenbytefloat2int (unsigned char *bytes)$/;"	f	file:	signature:(unsigned char *bytes)
test_close_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^static void test_close_or_die (SF_PRIVATE *psf, int linenum) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int linenum)
test_close_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^test_close_or_die (SF_PRIVATE *psf, int linenum)$/;"	f	file:	signature:(SF_PRIVATE *psf, int linenum)
test_data	.\libsndfile-1.0.17\tests\floating_point_test.c	/^static	double	test_data [DFT_DATA_LENGTH] ;$/;"	v	file:
test_data	.\libsndfile-1.0.17\tests\write_read_test.c	/^static	BUFFER	test_data ;$/;"	v	file:
test_endswap_int	.\libsndfile-1.0.17\src\test_endswap.c	/^static void test_endswap_int (void) ;$/;"	p	file:	signature:(void)
test_endswap_int	.\libsndfile-1.0.17\src\test_endswap.c	/^test_endswap_int (void)$/;"	f	file:	signature:(void)
test_endswap_int64_t	.\libsndfile-1.0.17\src\test_endswap.c	/^static void test_endswap_int64_t (void) ;$/;"	p	file:	signature:(void)
test_endswap_int64_t	.\libsndfile-1.0.17\src\test_endswap.c	/^test_endswap_int64_t (void)$/;"	f	file:	signature:(void)
test_endswap_short	.\libsndfile-1.0.17\src\test_endswap.c	/^static void test_endswap_short (void) ;$/;"	p	file:	signature:(void)
test_endswap_short	.\libsndfile-1.0.17\src\test_endswap.c	/^test_endswap_short (void)$/;"	f	file:	signature:(void)
test_equal_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^static void test_equal_or_die	(int *array1, int *array2, int len, int linenum) ;$/;"	p	file:	signature:(int *array1, int *array2, int len, int linenum)
test_equal_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^test_equal_or_die	(int *array1, int *array2, int len, int linenum)$/;"	f	file:	signature:(int *array1, int *array2, int len, int linenum)
test_float_peak	.\libsndfile-1.0.17\tests\peak_chunk_test.c	/^static	void	test_float_peak	(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
test_float_peak	.\libsndfile-1.0.17\tests\peak_chunk_test.c	/^test_float_peak (const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
test_open_file_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_open_file_or_die (const char *filename, int mode, SF_INFO *sfinfo, int allow_fd, int line_num)$/;"	f	signature:(const char *filename, int mode, SF_INFO *sfinfo, int allow_fd, int line_num)
test_open_file_or_die	.\libsndfile-1.0.17\tests\utils.h	/^SNDFILE *test_open_file_or_die$/;"	p	signature:(const char *filename, int mode, SF_INFO *sfinfo, int allow_fd, int line_num)
test_open_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^static void test_open_or_die (SF_PRIVATE *psf, int linenum) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int linenum)
test_open_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^test_open_or_die (SF_PRIVATE *psf, int linenum)$/;"	f	file:	signature:(SF_PRIVATE *psf, int linenum)
test_ordinal	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	/^test_ordinal (HMODULE hmod, const char * func_name, int ordinal)$/;"	f	file:	signature:(HMODULE hmod, const char * func_name, int ordinal)
test_read_double_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_read_double_or_die (SNDFILE *file, int pass, double *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, double *test, sf_count_t items, int line_num)
test_read_double_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_read_double_or_die$/;"	p	signature:(SNDFILE *file, int pass, double *test, sf_count_t items, int line_num)
test_read_float_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_read_float_or_die (SNDFILE *file, int pass, float *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, float *test, sf_count_t items, int line_num)
test_read_float_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_read_float_or_die$/;"	p	signature:(SNDFILE *file, int pass, float *test, sf_count_t items, int line_num)
test_read_int_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_read_int_or_die (SNDFILE *file, int pass, int *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, int *test, sf_count_t items, int line_num)
test_read_int_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_read_int_or_die$/;"	p	signature:(SNDFILE *file, int pass, int *test, sf_count_t items, int line_num)
test_read_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^static void test_read_or_die	(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)
test_read_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^test_read_or_die (SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)$/;"	f	file:	signature:(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)
test_read_short_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_read_short_or_die (SNDFILE *file, int pass, short *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, short *test, sf_count_t items, int line_num)
test_read_short_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_read_short_or_die$/;"	p	signature:(SNDFILE *file, int pass, short *test, sf_count_t items, int line_num)
test_read_write_position_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_read_write_position_or_die (SNDFILE *file, int line_num, int pass, sf_count_t read_pos, sf_count_t write_pos)$/;"	f	signature:(SNDFILE *file, int line_num, int pass, sf_count_t read_pos, sf_count_t write_pos)
test_read_write_position_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_read_write_position_or_die$/;"	p	signature:(SNDFILE *file, int line_num, int pass, sf_count_t read_pos, sf_count_t write_pos)
test_readf_double_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_readf_double_or_die (SNDFILE *file, int pass, double *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, double *test, sf_count_t frames, int line_num)
test_readf_double_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_readf_double_or_die$/;"	p	signature:(SNDFILE *file, int pass, double *test, sf_count_t frames, int line_num)
test_readf_float_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_readf_float_or_die (SNDFILE *file, int pass, float *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, float *test, sf_count_t frames, int line_num)
test_readf_float_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_readf_float_or_die$/;"	p	signature:(SNDFILE *file, int pass, float *test, sf_count_t frames, int line_num)
test_readf_int_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_readf_int_or_die (SNDFILE *file, int pass, int *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, int *test, sf_count_t frames, int line_num)
test_readf_int_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_readf_int_or_die$/;"	p	signature:(SNDFILE *file, int pass, int *test, sf_count_t frames, int line_num)
test_readf_short_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_readf_short_or_die (SNDFILE *file, int pass, short *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, short *test, sf_count_t frames, int line_num)
test_readf_short_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_readf_short_or_die$/;"	p	signature:(SNDFILE *file, int pass, short *test, sf_count_t frames, int line_num)
test_seek_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^static void test_seek_or_die (SF_PRIVATE *psf, sf_count_t offset, int whence, sf_count_t new_position, int linenum) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, sf_count_t offset, int whence, sf_count_t new_position, int linenum)
test_seek_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^test_seek_or_die (SF_PRIVATE *psf, sf_count_t offset, int whence, sf_count_t new_position, int linenum)$/;"	f	file:	signature:(SF_PRIVATE *psf, sf_count_t offset, int whence, sf_count_t new_position, int linenum)
test_seek_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_seek_or_die (SNDFILE *file, sf_count_t offset, int whence, sf_count_t new_pos, int channels, int line_num)$/;"	f	signature:(SNDFILE *file, sf_count_t offset, int whence, sf_count_t new_pos, int channels, int line_num)
test_seek_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void	test_seek_or_die$/;"	p	signature:(SNDFILE *file, sf_count_t offset, int whence, sf_count_t new_pos, int channels, int line_num)
test_write_double_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_write_double_or_die (SNDFILE *file, int pass, const double *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const double *test, sf_count_t items, int line_num)
test_write_double_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_write_double_or_die$/;"	p	signature:(SNDFILE *file, int pass, const double *test, sf_count_t items, int line_num)
test_write_float_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_write_float_or_die (SNDFILE *file, int pass, const float *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const float *test, sf_count_t items, int line_num)
test_write_float_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_write_float_or_die$/;"	p	signature:(SNDFILE *file, int pass, const float *test, sf_count_t items, int line_num)
test_write_int_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_write_int_or_die (SNDFILE *file, int pass, const int *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const int *test, sf_count_t items, int line_num)
test_write_int_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_write_int_or_die$/;"	p	signature:(SNDFILE *file, int pass, const int *test, sf_count_t items, int line_num)
test_write_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^static void test_write_or_die	(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)
test_write_or_die	.\libsndfile-1.0.17\src\test_file_io.c	/^test_write_or_die (SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)$/;"	f	file:	signature:(SF_PRIVATE *psf, void *data, sf_count_t bytes, sf_count_t items, sf_count_t new_position, int linenum)
test_write_short_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_write_short_or_die (SNDFILE *file, int pass, const short *test, sf_count_t items, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const short *test, sf_count_t items, int line_num)
test_write_short_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_write_short_or_die$/;"	p	signature:(SNDFILE *file, int pass, const short *test, sf_count_t items, int line_num)
test_writef_double_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_writef_double_or_die (SNDFILE *file, int pass, const double *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const double *test, sf_count_t frames, int line_num)
test_writef_double_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_writef_double_or_die$/;"	p	signature:(SNDFILE *file, int pass, const double *test, sf_count_t frames, int line_num)
test_writef_float_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_writef_float_or_die (SNDFILE *file, int pass, const float *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const float *test, sf_count_t frames, int line_num)
test_writef_float_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_writef_float_or_die$/;"	p	signature:(SNDFILE *file, int pass, const float *test, sf_count_t frames, int line_num)
test_writef_int_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_writef_int_or_die (SNDFILE *file, int pass, const int *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const int *test, sf_count_t frames, int line_num)
test_writef_int_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_writef_int_or_die$/;"	p	signature:(SNDFILE *file, int pass, const int *test, sf_count_t frames, int line_num)
test_writef_short_or_die	.\libsndfile-1.0.17\tests\utils.c	/^test_writef_short_or_die (SNDFILE *file, int pass, const short *test, sf_count_t frames, int line_num)$/;"	f	signature:(SNDFILE *file, int pass, const short *test, sf_count_t frames, int line_num)
test_writef_short_or_die	.\libsndfile-1.0.17\tests\utils.h	/^void 	test_writef_short_or_die$/;"	p	signature:(SNDFILE *file, int pass, const short *test, sf_count_t frames, int line_num)
time_reference_high	.\sndfile.h	/^	int				time_reference_high ;$/;"	m	struct:__anon99	access:public
time_reference_low	.\sndfile.h	/^	int				time_reference_low ;$/;"	m	struct:__anon99	access:public
time_sig_den	.\sndfile.h	/^	short	time_sig_den ;	\/* any positive power of 2 > 0  *\/$/;"	m	struct:__anon98	access:public
time_sig_num	.\sndfile.h	/^	short	time_sig_num ;	\/* any positive integer    > 0  *\/$/;"	m	struct:__anon98	access:public
timestamp	.\libsndfile-1.0.17\src\common.h	/^	unsigned int	timestamp ;	\/* secs since 1\/1\/1970  *\/$/;"	m	struct:__anon26	access:public
total_blocks	.\libsndfile-1.0.17\src\sds.c	/^	int	samplesperblock, total_blocks ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
tribyte	.\libsndfile-1.0.17\src\pcm.c	/^typedef	void	tribyte ;$/;"	t	file:
truncate	.\libsndfile-1.0.17\tests\write_read_test.c	/^static int truncate (const char *filename, int ignored) ;$/;"	p	file:	signature:(const char *filename, int ignored)
truncate	.\libsndfile-1.0.17\tests\write_read_test.c	/^truncate (const char *filename, int ignored)$/;"	f	file:	signature:(const char *filename, int ignored)
truncate_test	.\libsndfile-1.0.17\tests\command_test.c	/^static	void	truncate_test		(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
truncate_test	.\libsndfile-1.0.17\tests\command_test.c	/^truncate_test (const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
try_resource_fork	.\libsndfile-1.0.17\src\sndfile.c	/^static int	try_resource_fork (SF_PRIVATE * psf, int mode) ;$/;"	p	file:	signature:(SF_PRIVATE * psf, int mode)
try_resource_fork	.\libsndfile-1.0.17\src\sndfile.c	/^try_resource_fork (SF_PRIVATE * psf, int mode)$/;"	f	file:	signature:(SF_PRIVATE * psf, int mode)
twos_MARKER	.\libsndfile-1.0.17\src\aiff.c	59;"	d	file:
txw_open	.\libsndfile-1.0.17\src\common.h	/^int		txw_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
txw_open	.\libsndfile-1.0.17\src\txw.c	/^txw_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
txw_read_d	.\libsndfile-1.0.17\src\txw.c	/^static sf_count_t txw_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
txw_read_d	.\libsndfile-1.0.17\src\txw.c	/^txw_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
txw_read_f	.\libsndfile-1.0.17\src\txw.c	/^static sf_count_t txw_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
txw_read_f	.\libsndfile-1.0.17\src\txw.c	/^txw_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
txw_read_header	.\libsndfile-1.0.17\src\txw.c	/^static int txw_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
txw_read_header	.\libsndfile-1.0.17\src\txw.c	/^txw_read_header	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
txw_read_i	.\libsndfile-1.0.17\src\txw.c	/^static sf_count_t txw_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
txw_read_i	.\libsndfile-1.0.17\src\txw.c	/^txw_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
txw_read_s	.\libsndfile-1.0.17\src\txw.c	/^static sf_count_t txw_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
txw_read_s	.\libsndfile-1.0.17\src\txw.c	/^txw_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
txw_seek	.\libsndfile-1.0.17\src\txw.c	/^static sf_count_t txw_seek (SF_PRIVATE *psf, int mode, sf_count_t offset) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
txw_seek	.\libsndfile-1.0.17\src\txw.c	/^txw_seek (SF_PRIVATE *psf, int mode, sf_count_t offset)$/;"	f	file:	signature:(SF_PRIVATE *psf, int mode, sf_count_t offset)
type	.\libsndfile-1.0.17\src\common.h	/^{	int		type ;$/;"	m	struct:__anon27	access:public
type	.\libsndfile-1.0.17\src\sd2.c	/^{	int type ;$/;"	m	struct:__anon52	file:	access:public
type	.\sndfile.h	/^{	int			type ;$/;"	m	struct:__anon93	access:public
type_count	.\libsndfile-1.0.17\src\sd2.c	/^	int type_count, type_offset ;$/;"	m	struct:__anon51	file:	access:public
type_offset	.\libsndfile-1.0.17\src\sd2.c	/^	int type_count, type_offset ;$/;"	m	struct:__anon51	file:	access:public
u	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			u[8] ;			\/* short_term_aly_filter.c	*\/$/;"	m	struct:gsm_state	access:public
u	.\libsndfile-1.0.17\src\common.h	/^		} u ;$/;"	m	struct:sf_private_tag	typeref:union:sf_private_tag::__anon28	access:public
uBIAS	.\libsndfile-1.0.17\tests\ulaw_test.c	180;"	d	file:
uCLIP	.\libsndfile-1.0.17\tests\ulaw_test.c	181;"	d	file:
u_bitwidth_to_subformat	.\libsndfile-1.0.17\src\common.c	/^u_bitwidth_to_subformat (int bits)$/;"	f	signature:(int bits)
u_bitwidth_to_subformat	.\libsndfile-1.0.17\src\common.h	/^int u_bitwidth_to_subformat (int bits) ;$/;"	p	signature:(int bits)
uc2d_array	.\libsndfile-1.0.17\src\pcm.c	/^uc2d_array	(unsigned char *src, int count, double *dest, double normfact)$/;"	f	file:	signature:(unsigned char *src, int count, double *dest, double normfact)
uc2f_array	.\libsndfile-1.0.17\src\pcm.c	/^uc2f_array	(unsigned char *src, int count, float *dest, float normfact)$/;"	f	file:	signature:(unsigned char *src, int count, float *dest, float normfact)
uc2i_array	.\libsndfile-1.0.17\src\pcm.c	/^uc2i_array	(unsigned char *src, int count, int *dest)$/;"	f	file:	signature:(unsigned char *src, int count, int *dest)
uc2s_array	.\libsndfile-1.0.17\src\pcm.c	/^uc2s_array	(unsigned char *src, int count, short *dest)$/;"	f	file:	signature:(unsigned char *src, int count, short *dest)
ucbuf	.\libsndfile-1.0.17\src\common.h	/^		unsigned char	ucbuf	[SF_BUFFER_LEN \/ sizeof (signed char)] ;$/;"	m	union:sf_private_tag::__anon28	access:public
uint2tenbytefloat	.\libsndfile-1.0.17\src\aiff.c	/^static void uint2tenbytefloat (unsigned int num, unsigned char *bytes) ;$/;"	p	file:	signature:(unsigned int num, unsigned char *bytes)
uint2tenbytefloat	.\libsndfile-1.0.17\src\aiff.c	/^uint2tenbytefloat (unsigned int num, unsigned char *bytes)$/;"	f	file:	signature:(unsigned int num, unsigned char *bytes)
ulaw2d_array	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw2d_array (const unsigned char *buffer, int count, double *ptr, double normfact)$/;"	f	file:	signature:(const unsigned char *buffer, int count, double *ptr, double normfact)
ulaw2f_array	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw2f_array (unsigned char *buffer, int count, float *ptr, float normfact)$/;"	f	file:	signature:(unsigned char *buffer, int count, float *ptr, float normfact)
ulaw2i_array	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw2i_array (unsigned char *buffer, int count, int *ptr)$/;"	f	file:	signature:(unsigned char *buffer, int count, int *ptr)
ulaw2s_array	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw2s_array (unsigned char *buffer, int count, short *ptr)$/;"	f	file:	signature:(unsigned char *buffer, int count, short *ptr)
ulaw_MARKER	.\libsndfile-1.0.17\src\aiff.c	69;"	d	file:
ulaw_MARKER	.\libsndfile-1.0.17\src\caf.c	61;"	d	file:
ulaw_buffer	.\libsndfile-1.0.17\tests\ulaw_test.c	/^static	unsigned char	ulaw_buffer [BUFFER_SIZE] ;$/;"	v	file:
ulaw_decode	.\libsndfile-1.0.17\src\ulaw.c	/^static short ulaw_decode [256] =$/;"	v	file:
ulaw_decode	.\libsndfile-1.0.17\tests\ulaw_test.c	/^int ulaw_decode (unsigned int ulawbyte)$/;"	f	file:	signature:(unsigned int ulawbyte)
ulaw_decode	.\libsndfile-1.0.17\tests\ulaw_test.c	/^static int				ulaw_decode (unsigned int ulawbyte) ;$/;"	p	file:	signature:(unsigned int ulawbyte)
ulaw_encode	.\libsndfile-1.0.17\src\ulaw.c	/^unsigned char ulaw_encode [8193] =$/;"	v	file:
ulaw_encode	.\libsndfile-1.0.17\tests\ulaw_test.c	/^static unsigned char	ulaw_encode (int sample) ;$/;"	p	file:	signature:(int sample)
ulaw_encode	.\libsndfile-1.0.17\tests\ulaw_test.c	/^unsigned char ulaw_encode (int sample)$/;"	f	file:	signature:(int sample)
ulaw_init	.\libsndfile-1.0.17\src\common.h	/^int		ulaw_init		(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
ulaw_init	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_init (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
ulaw_read_ulaw2d	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_read_ulaw2d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
ulaw_read_ulaw2d	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_read_ulaw2d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
ulaw_read_ulaw2f	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_read_ulaw2f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
ulaw_read_ulaw2f	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_read_ulaw2f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
ulaw_read_ulaw2i	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_read_ulaw2i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
ulaw_read_ulaw2i	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_read_ulaw2i (SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
ulaw_read_ulaw2s	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_read_ulaw2s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
ulaw_read_ulaw2s	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_read_ulaw2s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
ulaw_write_d2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_write_d2ulaw (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
ulaw_write_d2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_write_d2ulaw	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
ulaw_write_f2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_write_f2ulaw (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
ulaw_write_f2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_write_f2ulaw	(SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
ulaw_write_i2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_write_i2ulaw (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
ulaw_write_i2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_write_i2ulaw	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
ulaw_write_s2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^static sf_count_t ulaw_write_s2ulaw (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
ulaw_write_s2ulaw	.\libsndfile-1.0.17\src\ulaw.c	/^ulaw_write_s2ulaw	(SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
ulongword	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^typedef unsigned int		ulongword;	\/* unsigned longword	*\/$/;"	t
umid	.\sndfile.h	/^	char			umid [64] ;$/;"	m	struct:__anon99	access:public
umid_MARKER	.\libsndfile-1.0.17\src\caf.c	59;"	d	file:
unix_to_dos	.\libsndfile-1.0.17\Mingw-make-dist.sh	/^function unix_to_dos {$/;"	f
unpack_bytes	.\libsndfile-1.0.17\src\G72x\g72x.c	/^static int unpack_bytes (int bits, int blocksize, const unsigned char * block, short * samples) ;$/;"	p	file:	signature:(int bits, int blocksize, const unsigned char * block, short * samples)
unpack_bytes	.\libsndfile-1.0.17\src\G72x\g72x.c	/^unpack_bytes (int bits, int blocksize, const unsigned char * block, short * samples)$/;"	f	file:	signature:(int bits, int blocksize, const unsigned char * block, short * samples)
update	.\libsndfile-1.0.17\src\G72x\g72x.c	/^update($/;"	f	signature:( int code_size, int y, int wi, int fi, int dq, int sr, int dqsez, G72x_STATE *state_ptr)
update	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^void update (int code_size, int y, int wi, int fi, int dq, int sr, int dqsez, G72x_STATE *state_ptr);$/;"	p	signature:(int code_size, int y, int wi, int fi, int dq, int sr, int dqsez, G72x_STATE *state_ptr)
update_header_sub	.\libsndfile-1.0.17\tests\header_test.c	/^update_header_sub (const char *filename, int typemajor, int write_mode)$/;"	f	file:	signature:(const char *filename, int typemajor, int write_mode)
update_header_test	.\libsndfile-1.0.17\tests\header_test.c	/^static void	update_header_test (const char *filename, int typemajor) ;$/;"	p	file:	signature:(const char *filename, int typemajor)
update_header_test	.\libsndfile-1.0.17\tests\header_test.c	/^update_header_test (const char *filename, int typemajor)$/;"	f	file:	signature:(const char *filename, int typemajor)
update_seek_double_test	.\libsndfile-1.0.17\tests\header_test.c	/^static void	update_seek_double_test	(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
update_seek_double_test	.\libsndfile-1.0.17\tests\header_test.c	/^update_seek_double_test	(const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
update_seek_float_test	.\libsndfile-1.0.17\tests\header_test.c	/^static void	update_seek_float_test	(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
update_seek_float_test	.\libsndfile-1.0.17\tests\header_test.c	/^update_seek_float_test	(const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
update_seek_int_test	.\libsndfile-1.0.17\tests\header_test.c	/^static void	update_seek_int_test	(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
update_seek_int_test	.\libsndfile-1.0.17\tests\header_test.c	/^update_seek_int_test	(const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
update_seek_short_test	.\libsndfile-1.0.17\tests\header_test.c	/^static void	update_seek_short_test	(const char *filename, int filetype) ;$/;"	p	file:	signature:(const char *filename, int filetype)
update_seek_short_test	.\libsndfile-1.0.17\tests\header_test.c	/^update_seek_short_test	(const char *filename, int filetype)$/;"	f	file:	signature:(const char *filename, int filetype)
usage_exit	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^static void usage_exit (char *progname) ;$/;"	p	file:	signature:(char *progname)
usage_exit	.\libsndfile-1.0.17\examples\cooledit-fixer.c	/^usage_exit (char *progname)$/;"	f	file:	signature:(char *progname)
useek_pipe_rw_double	.\libsndfile-1.0.17\tests\pipe_test.c	/^useek_pipe_rw_double (const char * ext, SF_INFO * psfinfo_write, SF_INFO * psfinfo_read)$/;"	f	file:	signature:(const char * ext, SF_INFO * psfinfo_write, SF_INFO * psfinfo_read)
useek_pipe_rw_float	.\libsndfile-1.0.17\tests\pipe_test.c	/^useek_pipe_rw_float (const char * ext, SF_INFO * psfinfo_write, SF_INFO * psfinfo_read)$/;"	f	file:	signature:(const char * ext, SF_INFO * psfinfo_write, SF_INFO * psfinfo_read)
useek_pipe_rw_short	.\libsndfile-1.0.17\tests\pipe_test.c	/^useek_pipe_rw_short (const char * ext, SF_INFO * psfinfo_write, SF_INFO * psfinfo_read)$/;"	f	file:	signature:(const char * ext, SF_INFO * psfinfo_write, SF_INFO * psfinfo_read)
useek_pipe_rw_test	.\libsndfile-1.0.17\tests\pipe_test.c	/^static void		useek_pipe_rw_test (int filetype, const char *ext) ;$/;"	p	file:	signature:(int filetype, const char *ext)
useek_pipe_rw_test	.\libsndfile-1.0.17\tests\pipe_test.c	/^useek_pipe_rw_test (int filetype, const char *ext)$/;"	f	file:	signature:(int filetype, const char *ext)
user	.\libsndfile-1.0.17\src\avr.c	/^	char	user [64] ; \/* User defined. Typically ASCII message *\/$/;"	m	struct:__anon21	file:	access:public
uuid_MARKER	.\libsndfile-1.0.17\src\caf.c	60;"	d	file:
uword	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^typedef unsigned short		uword;		\/* unsigned word	*\/$/;"	t
v	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			v[9] ;			\/* short_term.c, synthesis	*\/$/;"	m	struct:gsm_state	access:public
validate_psf	.\libsndfile-1.0.17\src\sndfile.c	/^static int	validate_psf (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
validate_psf	.\libsndfile-1.0.17\src\sndfile.c	/^validate_psf (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
validate_sfinfo	.\libsndfile-1.0.17\src\sndfile.c	/^static int	validate_sfinfo (SF_INFO *sfinfo) ;$/;"	p	file:	signature:(SF_INFO *sfinfo)
validate_sfinfo	.\libsndfile-1.0.17\src\sndfile.c	/^validate_sfinfo (SF_INFO *sfinfo)$/;"	f	file:	signature:(SF_INFO *sfinfo)
validbits	.\libsndfile-1.0.17\src\wav_w64.h	/^	unsigned short	validbits ;$/;"	m	struct:__anon73	access:public
value	.\libsndfile-1.0.17\src\common.h	/^{	double		value ;		\/* signed value of peak *\/$/;"	m	struct:__anon25	access:public
value	.\libsndfile-1.0.17\src\sd2.c	/^	char value [32] ;$/;"	m	struct:__anon52	file:	access:public
value_len	.\libsndfile-1.0.17\src\sd2.c	/^	int value_len ;$/;"	m	struct:__anon52	file:	access:public
velocity_hi	.\sndfile.h	/^	char velocity_lo, velocity_hi ;$/;"	m	struct:__anon96	access:public
velocity_lo	.\sndfile.h	/^	char velocity_lo, velocity_hi ;$/;"	m	struct:__anon96	access:public
verbose	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	char			verbose;		\/* only used if !NDEBUG		*\/$/;"	m	struct:gsm_state	access:public
verbose	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static int verbose = SF_FALSE ;$/;"	v	file:
version	.\libsndfile-1.0.17\src\aiff.c	/^{	unsigned int	version ;$/;"	m	struct:__anon16	file:	access:public
version	.\libsndfile-1.0.17\src\common.h	/^	unsigned int	version ;	\/* version of the PEAK chunk *\/$/;"	m	struct:__anon26	access:public
version	.\libsndfile-1.0.17\src\paf.c	/^{	int	version ;$/;"	m	struct:__anon46	file:	access:public
version	.\sndfile.h	/^	short			version ;$/;"	m	struct:__anon99	access:public
vfget_filelen	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^vfget_filelen (void *user_data)$/;"	f	file:	signature:(void *user_data)
vfread	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^vfread (void *ptr, sf_count_t count, void *user_data)$/;"	f	file:	signature:(void *ptr, sf_count_t count, void *user_data)
vfseek	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^vfseek (sf_count_t offset, int whence, void *user_data)$/;"	f	file:	signature:(sf_count_t offset, int whence, void *user_data)
vftell	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^vftell (void *user_data)$/;"	f	file:	signature:(void *user_data)
vfwrite	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^vfwrite (const void *ptr, sf_count_t count, void *user_data)$/;"	f	file:	signature:(const void *ptr, sf_count_t count, void *user_data)
vio	.\libsndfile-1.0.17\src\common.h	/^	SF_VIRTUAL_IO		vio ;$/;"	m	struct:sf_private_tag	access:public
vio_test	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^static void vio_test (const char *fname, int format) ;$/;"	p	file:	signature:(const char *fname, int format)
vio_test	.\libsndfile-1.0.17\tests\virtual_io_test.c	/^vio_test (const char *fname, int format)$/;"	f	file:	signature:(const char *fname, int format)
vio_user_data	.\libsndfile-1.0.17\src\common.h	/^	void				*vio_user_data ;$/;"	m	struct:sf_private_tag	access:public
virtual_io	.\libsndfile-1.0.17\src\common.h	/^	int					virtual_io ;$/;"	m	struct:sf_private_tag	access:public
voc_close	.\libsndfile-1.0.17\src\voc.c	/^static	int	voc_close	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
voc_close	.\libsndfile-1.0.17\src\voc.c	/^voc_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
voc_encoding2str	.\libsndfile-1.0.17\src\voc.c	/^static const char* voc_encoding2str (int encoding) ;$/;"	p	file:	signature:(int encoding)
voc_encoding2str	.\libsndfile-1.0.17\src\voc.c	/^voc_encoding2str (int encoding)$/;"	f	file:	signature:(int encoding)
voc_open	.\libsndfile-1.0.17\src\common.h	/^int		voc_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
voc_open	.\libsndfile-1.0.17\src\voc.c	/^voc_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
voc_read_header	.\libsndfile-1.0.17\src\voc.c	/^static	int voc_read_header	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
voc_read_header	.\libsndfile-1.0.17\src\voc.c	/^voc_read_header	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
voc_write_header	.\libsndfile-1.0.17\src\voc.c	/^static	int voc_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
voc_write_header	.\libsndfile-1.0.17\src\voc.c	/^voc_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
volume	.\libsndfile-1.0.17\src\svx.c	/^	unsigned int	volume ;$/;"	m	struct:__anon54	file:	access:public
vox_adpcm_decode	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static short vox_adpcm_decode (char code, VOX_ADPCM_PRIVATE *pvox) ;$/;"	p	file:	signature:(char code, VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_decode	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_adpcm_decode (char code, VOX_ADPCM_PRIVATE *pvox)$/;"	f	file:	signature:(char code, VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_decode_block	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static int vox_adpcm_decode_block (VOX_ADPCM_PRIVATE *pvox) ;$/;"	p	file:	signature:(VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_decode_block	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_adpcm_decode_block (VOX_ADPCM_PRIVATE *pvox)$/;"	f	file:	signature:(VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_encode	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static char vox_adpcm_encode (short samp, VOX_ADPCM_PRIVATE *pvox) ;$/;"	p	file:	signature:(short samp, VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_encode	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_adpcm_encode (short samp, VOX_ADPCM_PRIVATE *pvox)$/;"	f	file:	signature:(short samp, VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_encode_block	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static int vox_adpcm_encode_block (VOX_ADPCM_PRIVATE *pvox) ;$/;"	p	file:	signature:(VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_encode_block	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_adpcm_encode_block (VOX_ADPCM_PRIVATE *pvox)$/;"	f	file:	signature:(VOX_ADPCM_PRIVATE *pvox)
vox_adpcm_init	.\libsndfile-1.0.17\src\common.h	/^int		vox_adpcm_init	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
vox_adpcm_init	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_adpcm_init (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
vox_bytes	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	int		vox_bytes, pcm_samples ;$/;"	m	struct:__anon60	file:	access:public
vox_data	.\libsndfile-1.0.17\src\vox_adpcm.c	/^	unsigned char	vox_data [VOX_DATA_LEN] ;$/;"	m	struct:__anon60	file:	access:public
vox_read_block	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static int vox_read_block (SF_PRIVATE *psf, VOX_ADPCM_PRIVATE *pvox, short *ptr, int len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, VOX_ADPCM_PRIVATE *pvox, short *ptr, int len)
vox_read_block	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_read_block (SF_PRIVATE *psf, VOX_ADPCM_PRIVATE *pvox, short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, VOX_ADPCM_PRIVATE *pvox, short *ptr, int len)
vox_read_d	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
vox_read_d	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_read_d (SF_PRIVATE *psf, double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, double *ptr, sf_count_t len)
vox_read_f	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
vox_read_f	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_read_f (SF_PRIVATE *psf, float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, float *ptr, sf_count_t len)
vox_read_i	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_read_i (SF_PRIVATE *psf, int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
vox_read_i	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_read_i	(SF_PRIVATE *psf, int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *ptr, sf_count_t len)
vox_read_s	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
vox_read_s	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_read_s (SF_PRIVATE *psf, short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, short *ptr, sf_count_t len)
vox_write_block	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_write_block (SF_PRIVATE *psf, VOX_ADPCM_PRIVATE *pvox, const short *ptr, int len)$/;"	f	file:	signature:(SF_PRIVATE *psf, VOX_ADPCM_PRIVATE *pvox, const short *ptr, int len)
vox_write_d	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_write_d (SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
vox_write_d	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_write_d	(SF_PRIVATE *psf, const double *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const double *ptr, sf_count_t len)
vox_write_f	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
vox_write_f	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_write_f (SF_PRIVATE *psf, const float *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const float *ptr, sf_count_t len)
vox_write_i	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_write_i (SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
vox_write_i	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_write_i	(SF_PRIVATE *psf, const int *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const int *ptr, sf_count_t len)
vox_write_s	.\libsndfile-1.0.17\src\vox_adpcm.c	/^static sf_count_t vox_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
vox_write_s	.\libsndfile-1.0.17\src\vox_adpcm.c	/^vox_write_s (SF_PRIVATE *psf, const short *ptr, sf_count_t len)$/;"	f	file:	signature:(SF_PRIVATE *psf, const short *ptr, sf_count_t len)
w64_close	.\libsndfile-1.0.17\src\w64.c	/^static int	w64_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
w64_close	.\libsndfile-1.0.17\src\w64.c	/^w64_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
w64_open	.\libsndfile-1.0.17\src\common.h	/^int		w64_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
w64_open	.\libsndfile-1.0.17\src\w64.c	/^w64_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
w64_read_header	.\libsndfile-1.0.17\src\w64.c	/^static int	w64_read_header	(SF_PRIVATE *psf, int *blockalign, int *framesperblock) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *blockalign, int *framesperblock)
w64_read_header	.\libsndfile-1.0.17\src\w64.c	/^w64_read_header	(SF_PRIVATE *psf, int *blockalign, int *framesperblock)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *blockalign, int *framesperblock)
w64_write_header	.\libsndfile-1.0.17\src\w64.c	/^static int	w64_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
w64_write_header	.\libsndfile-1.0.17\src\w64.c	/^w64_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
wav_close	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_close (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
wav_close	.\libsndfile-1.0.17\src\wav.c	/^wav_close (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
wav_command	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_command (SF_PRIVATE *psf, int command, void *data, int datasize) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int command, void *data, int datasize)
wav_command	.\libsndfile-1.0.17\src\wav.c	/^wav_command (SF_PRIVATE *psf, int command, void *data, int datasize)$/;"	f	file:	signature:(SF_PRIVATE *psf, int command, void *data, int datasize)
wav_fmt	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	char			wav_fmt;		\/* only used if WAV49 defined	*\/$/;"	m	struct:gsm_state	access:public
wav_formats	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static int 	wav_formats [] =$/;"	v	file:
wav_open	.\libsndfile-1.0.17\src\common.h	/^int		wav_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
wav_open	.\libsndfile-1.0.17\src\wav.c	/^wav_open	 (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
wav_read_acid_chunk	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_read_acid_chunk (SF_PRIVATE *psf, unsigned int chunklen) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, unsigned int chunklen)
wav_read_acid_chunk	.\libsndfile-1.0.17\src\wav.c	/^wav_read_acid_chunk (SF_PRIVATE *psf, unsigned int chunklen)$/;"	f	file:	signature:(SF_PRIVATE *psf, unsigned int chunklen)
wav_read_bext_chunk	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_read_bext_chunk (SF_PRIVATE *psf, unsigned int chunklen) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, unsigned int chunklen)
wav_read_bext_chunk	.\libsndfile-1.0.17\src\wav.c	/^wav_read_bext_chunk (SF_PRIVATE *psf, unsigned int chunksize)$/;"	f	signature:(SF_PRIVATE *psf, unsigned int chunksize)
wav_read_header	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_read_header	 (SF_PRIVATE *psf, int *blockalign, int *framesperblock) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int *blockalign, int *framesperblock)
wav_read_header	.\libsndfile-1.0.17\src\wav.c	/^wav_read_header	 (SF_PRIVATE *psf, int *blockalign, int *framesperblock)$/;"	f	file:	signature:(SF_PRIVATE *psf, int *blockalign, int *framesperblock)
wav_read_smpl_chunk	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_read_smpl_chunk (SF_PRIVATE *psf, unsigned int chunklen) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, unsigned int chunklen)
wav_read_smpl_chunk	.\libsndfile-1.0.17\src\wav.c	/^wav_read_smpl_chunk (SF_PRIVATE *psf, unsigned int chunklen)$/;"	f	file:	signature:(SF_PRIVATE *psf, unsigned int chunklen)
wav_subchunk_parse	.\libsndfile-1.0.17\src\wav.c	/^static int 	wav_subchunk_parse	 (SF_PRIVATE *psf, int chunk) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int chunk)
wav_subchunk_parse	.\libsndfile-1.0.17\src\wav.c	/^wav_subchunk_parse (SF_PRIVATE *psf, int chunk)$/;"	f	file:	signature:(SF_PRIVATE *psf, int chunk)
wav_w64_format_str	.\libsndfile-1.0.17\src\wav_w64.c	/^wav_w64_format_str (int k)$/;"	f	signature:(int k)
wav_w64_format_str	.\libsndfile-1.0.17\src\wav_w64.h	/^char const* wav_w64_format_str (int k) ;$/;"	p	signature:(int k)
wav_w64_ima_decode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int wav_w64_ima_decode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
wav_w64_ima_decode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^wav_w64_ima_decode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
wav_w64_ima_encode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^static int wav_w64_ima_encode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
wav_w64_ima_encode_block	.\libsndfile-1.0.17\src\ima_adpcm.c	/^wav_w64_ima_encode_block (SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)$/;"	f	file:	signature:(SF_PRIVATE *psf, IMA_ADPCM_PRIVATE *pima)
wav_w64_ima_init	.\libsndfile-1.0.17\src\common.h	/^int		wav_w64_ima_init (SF_PRIVATE *psf, int blockalign, int samplesperblock) ;$/;"	p	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
wav_w64_ima_init	.\libsndfile-1.0.17\src\ima_adpcm.c	/^wav_w64_ima_init (SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
wav_w64_msadpcm_init	.\libsndfile-1.0.17\src\common.h	/^int		wav_w64_msadpcm_init (SF_PRIVATE *psf, int blockalign, int samplesperblock) ;$/;"	p	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
wav_w64_msadpcm_init	.\libsndfile-1.0.17\src\ms_adpcm.c	/^wav_w64_msadpcm_init	(SF_PRIVATE *psf, int blockalign, int samplesperblock)$/;"	f	signature:(SF_PRIVATE *psf, int blockalign, int samplesperblock)
wav_w64_read_fmt_chunk	.\libsndfile-1.0.17\src\wav_w64.c	/^wav_w64_read_fmt_chunk (SF_PRIVATE *psf, WAV_FMT *wav_fmt, int structsize)$/;"	f	signature:(SF_PRIVATE *psf, WAV_FMT *wav_fmt, int structsize)
wav_w64_read_fmt_chunk	.\libsndfile-1.0.17\src\wav_w64.h	/^int		wav_w64_read_fmt_chunk (SF_PRIVATE *psf, WAV_FMT *wav_fmt, int structsize) ;$/;"	p	signature:(SF_PRIVATE *psf, WAV_FMT *wav_fmt, int structsize)
wav_w64_srate2blocksize	.\libsndfile-1.0.17\src\wav_w64.c	/^wav_w64_srate2blocksize (int srate_chan_product)$/;"	f	signature:(int srate_chan_product)
wav_w64_srate2blocksize	.\libsndfile-1.0.17\src\wav_w64.h	/^int 	wav_w64_srate2blocksize (int srate_chan_product) ;$/;"	p	signature:(int srate_chan_product)
wav_write_bext_chunk	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_write_bext_chunk (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
wav_write_bext_chunk	.\libsndfile-1.0.17\src\wav.c	/^wav_write_bext_chunk (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
wav_write_header	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
wav_write_header	.\libsndfile-1.0.17\src\wav.c	/^wav_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
wav_write_strings	.\libsndfile-1.0.17\src\wav.c	/^static void wav_write_strings (SF_PRIVATE *psf, int location) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int location)
wav_write_strings	.\libsndfile-1.0.17\src\wav.c	/^wav_write_strings (SF_PRIVATE *psf, int location)$/;"	f	file:	signature:(SF_PRIVATE *psf, int location)
wav_write_tailer	.\libsndfile-1.0.17\src\wav.c	/^static int	wav_write_tailer (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
wav_write_tailer	.\libsndfile-1.0.17\src\wav.c	/^wav_write_tailer (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
wave_HASH16	.\libsndfile-1.0.17\src\w64.c	53;"	d	file:
wave_descs	.\libsndfile-1.0.17\src\wav_w64.c	/^static WAV_FORMAT_DESC wave_descs [] =$/;"	v	file:
wavex_write_guid	.\libsndfile-1.0.17\src\wav_w64.c	/^wavex_write_guid (SF_PRIVATE *psf, const EXT_SUBFORMAT * subformat)$/;"	f	signature:(SF_PRIVATE *psf, const EXT_SUBFORMAT * subformat)
wavex_write_guid	.\libsndfile-1.0.17\src\wav_w64.h	/^void	wavex_write_guid (SF_PRIVATE *psf, const EXT_SUBFORMAT * subformat) ;$/;"	p	signature:(SF_PRIVATE *psf, const EXT_SUBFORMAT * subformat)
wavex_write_guid_equal	.\libsndfile-1.0.17\src\wav_w64.c	/^wavex_write_guid_equal (const EXT_SUBFORMAT * first, const EXT_SUBFORMAT * second)$/;"	f	file:	signature:(const EXT_SUBFORMAT * first, const EXT_SUBFORMAT * second)
wavex_write_header	.\libsndfile-1.0.17\src\wav.c	/^static int	wavex_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
wavex_write_header	.\libsndfile-1.0.17\src\wav.c	/^wavex_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
wavl_MARKER	.\libsndfile-1.0.17\src\wav.c	48;"	d	file:
wbuffer	.\libsndfile-1.0.17\src\flac.c	/^	const FLAC__int32 * const * wbuffer ;$/;"	m	struct:__anon37	file:	access:public
whdr	.\libsndfile-1.0.17\examples\sndfile-play.c	/^	WAVEHDR		whdr [2] ;$/;"	m	struct:__anon5	file:	access:public
width	.\libsndfile-1.0.17\tests\locale_test.c	/^	int	width ;$/;"	m	struct:__anon79	file:	access:public
win32_audio_out_callback	.\libsndfile-1.0.17\examples\sndfile-play.c	/^win32_audio_out_callback (HWAVEOUT hwave, UINT msg, DWORD data, DWORD param1, DWORD param2)$/;"	f	file:	signature:(HWAVEOUT hwave, UINT msg, DWORD data, DWORD param1, DWORD param2)
win32_ordinal_test	.\libsndfile-1.0.17\tests\win32_ordinal_test.c	/^win32_ordinal_test (void)$/;"	f	file:	signature:(void)
win32_play	.\libsndfile-1.0.17\examples\sndfile-play.c	/^win32_play (int argc, char *argv [])$/;"	f	file:	signature:(int argc, char *argv [])
win32_play_data	.\libsndfile-1.0.17\examples\sndfile-play.c	/^win32_play_data (Win32_Audio_Data *audio_data)$/;"	f	file:	signature:(Win32_Audio_Data *audio_data)
win32_symbols	.\libsndfile-1.0.17\src\create_symbols_file.py	/^def win32_symbols (progname, version, name):$/;"	f	access:public
word	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^typedef short				word;		\/* 16 bit signed int	*\/$/;"	t
write	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="write"><\/A>$/;"	a
write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t items)
write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t items)
write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t items)
write	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t write (const short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t items)
write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t items)
write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t items)
write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t items)
write	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::write (const short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t items)
write	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="write"><\/A>$/;"	a
write	.\sndfile.h	/^	sf_vio_write		write ;$/;"	m	struct:SF_VIRTUAL_IO	access:public
write	.\sndfile.hh	/^		sf_count_t write (const double *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t items)
write	.\sndfile.hh	/^		sf_count_t write (const float *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t items)
write	.\sndfile.hh	/^		sf_count_t write (const int *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t items)
write	.\sndfile.hh	/^		sf_count_t write (const short *ptr, sf_count_t items) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t items)
write	.\sndfile.hh	/^SndfileHandle::write (const double *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t items)
write	.\sndfile.hh	/^SndfileHandle::write (const float *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t items)
write	.\sndfile.hh	/^SndfileHandle::write (const int *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t items)
write	.\sndfile.hh	/^SndfileHandle::write (const short *ptr, sf_count_t items)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t items)
write-text	.\libsndfile-1.0.17\doc\dither.html	/^<A NAME="write-text"><\/A>$/;"	a
write-text	.\share\doc\libsndfile1-dev\html\dither.html	/^<A NAME="write-text"><\/A>$/;"	a
writeRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t	writeRaw	(const void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(const void *ptr, sf_count_t bytes)
writeRaw	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writeRaw (const void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(const void *ptr, sf_count_t bytes)
writeRaw	.\sndfile.hh	/^		sf_count_t	writeRaw	(const void *ptr, sf_count_t bytes) ;$/;"	p	class:SndfileHandle	access:public	signature:(const void *ptr, sf_count_t bytes)
writeRaw	.\sndfile.hh	/^SndfileHandle::writeRaw (const void *ptr, sf_count_t bytes)$/;"	f	class:SndfileHandle	signature:(const void *ptr, sf_count_t bytes)
writeSync	.\libsndfile-1.0.17\src\sndfile.hh	/^		void writeSync (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
writeSync	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writeSync (void)$/;"	f	class:SndfileHandle	signature:(void)
writeSync	.\sndfile.hh	/^		void writeSync (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
writeSync	.\sndfile.hh	/^SndfileHandle::writeSync (void)$/;"	f	class:SndfileHandle	signature:(void)
write_block	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
write_block	.\libsndfile-1.0.17\src\sds.c	/^	int write_block, write_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
write_char	.\libsndfile-1.0.17\src\sd2.c	/^write_char (unsigned char * data, int offset, char value)$/;"	f	file:	signature:(unsigned char * data, int offset, char value)
write_count	.\libsndfile-1.0.17\src\paf.c	/^	int				read_block, write_block, read_count, write_count ;$/;"	m	struct:__anon47	file:	access:public
write_count	.\libsndfile-1.0.17\src\sds.c	/^	int write_block, write_count ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
write_current	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		write_current ;$/;"	m	struct:sf_private_tag	access:public
write_data	.\libsndfile-1.0.17\src\sds.c	/^	unsigned char write_data [SDS_BLOCK_SIZE] ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
write_dither	.\libsndfile-1.0.17\src\common.h	/^	SF_DITHER_INFO	write_dither ;$/;"	m	struct:sf_private_tag	access:public
write_double	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_double)	(struct sf_private_tag*, const double *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
write_double	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_double)	(SF_PRIVATE *psf, const double *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
write_double_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	double		write_float_dither_scale, write_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
write_file_at_end	.\libsndfile-1.0.17\tests\multi_file_test.c	/^static void write_file_at_end (int fd, int filetype, int channels, int file_num) ;$/;"	p	file:	signature:(int fd, int filetype, int channels, int file_num)
write_file_at_end	.\libsndfile-1.0.17\tests\multi_file_test.c	/^write_file_at_end (int fd, int filetype, int channels, int file_num)$/;"	f	file:	signature:(int fd, int filetype, int channels, int file_num)
write_float	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_float)	(struct sf_private_tag*, const float *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
write_float	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_float)	(SF_PRIVATE *psf, const float *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
write_float_dither_scale	.\libsndfile-1.0.17\src\dither.c	/^	double		write_float_dither_scale, write_double_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
write_header	.\libsndfile-1.0.17\src\common.h	/^	int				(*write_header)	(struct sf_private_tag*, int calc_length) ;$/;"	m	struct:sf_private_tag	access:public
write_int	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_int)	(struct sf_private_tag*, const int *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
write_int	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_int)	(SF_PRIVATE *psf, const int *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
write_int	.\libsndfile-1.0.17\src\sd2.c	/^write_int (unsigned char * data, int offset, int value)$/;"	f	file:	signature:(unsigned char * data, int offset, int value)
write_int_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	int			write_short_dither_bits, write_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
write_marker	.\libsndfile-1.0.17\src\sd2.c	/^write_marker (unsigned char * data, int offset, int value)$/;"	f	file:	signature:(unsigned char * data, int offset, int value)
write_rate	.\libsndfile-1.0.17\tests\benchmark.c	/^{	double	write_rate ;$/;"	m	struct:__anon77	file:	access:public
write_samples	.\libsndfile-1.0.17\src\sds.c	/^	int	write_samples [SDS_BLOCK_SIZE \/ 2] ; \/* Maximum samples per block *\/$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
write_short	.\libsndfile-1.0.17\src\common.h	/^	sf_count_t		(*write_short)	(struct sf_private_tag*, const short *ptr, sf_count_t len) ;$/;"	m	struct:sf_private_tag	access:public
write_short	.\libsndfile-1.0.17\src\dither.c	/^	sf_count_t	(*write_short)	(SF_PRIVATE *psf, const short *ptr, sf_count_t len) ;$/;"	m	struct:__anon31	file:	access:public
write_short	.\libsndfile-1.0.17\src\sd2.c	/^write_short (unsigned char * data, int offset, short value)$/;"	f	file:	signature:(unsigned char * data, int offset, short value)
write_short_dither_bits	.\libsndfile-1.0.17\src\dither.c	/^	int			write_short_dither_bits, write_int_dither_bits ;$/;"	m	struct:__anon31	file:	access:public
write_str	.\libsndfile-1.0.17\src\sd2.c	/^write_str (unsigned char * data, int offset, char * buffer, int buffer_len)$/;"	f	file:	signature:(unsigned char * data, int offset, char * buffer, int buffer_len)
write_sync	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="write_sync"><\/A>$/;"	a
write_sync	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="write_sync"><\/A>$/;"	a
writef	.\libsndfile-1.0.17\doc\api.html	/^<A NAME="writef"><\/A>$/;"	a
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t frames)
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t frames)
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t frames)
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^		sf_count_t writef (const short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t frames)
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t frame_count)
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t frame_count)
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t frame_count)
writef	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::writef (const short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t frame_count)
writef	.\share\doc\libsndfile1-dev\html\api.html	/^<A NAME="writef"><\/A>$/;"	a
writef	.\sndfile.hh	/^		sf_count_t writef (const double *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const double *ptr, sf_count_t frames)
writef	.\sndfile.hh	/^		sf_count_t writef (const float *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const float *ptr, sf_count_t frames)
writef	.\sndfile.hh	/^		sf_count_t writef (const int *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const int *ptr, sf_count_t frames)
writef	.\sndfile.hh	/^		sf_count_t writef (const short *ptr, sf_count_t frames) ;$/;"	p	class:SndfileHandle	access:public	signature:(const short *ptr, sf_count_t frames)
writef	.\sndfile.hh	/^SndfileHandle::writef (const double *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const double *ptr, sf_count_t frame_count)
writef	.\sndfile.hh	/^SndfileHandle::writef (const float *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const float *ptr, sf_count_t frame_count)
writef	.\sndfile.hh	/^SndfileHandle::writef (const int *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const int *ptr, sf_count_t frame_count)
writef	.\sndfile.hh	/^SndfileHandle::writef (const short *ptr, sf_count_t frame_count)$/;"	f	class:SndfileHandle	signature:(const short *ptr, sf_count_t frame_count)
writer	.\libsndfile-1.0.17\src\sds.c	/^	int (*writer) (SF_PRIVATE *psf, struct tag_SDS_PRIVATE *psds) ;$/;"	m	struct:tag_SDS_PRIVATE	file:	access:public
wve_open	.\libsndfile-1.0.17\src\common.h	/^int		wve_open	(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
wve_open	.\libsndfile-1.0.17\src\wve.c	/^wve_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
wve_open	.\libsndfile-1.0.17\src\wve.c	/^wve_open (SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
wve_read_header	.\libsndfile-1.0.17\src\wve.c	/^static int	wve_read_header (SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
wve_read_header	.\libsndfile-1.0.17\src\wve.c	/^wve_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
wvpk_MARKER	.\libsndfile-1.0.17\src\wav.c	82;"	d	file:
xi_close	.\libsndfile-1.0.17\src\xi.c	/^static int	xi_close		(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
xi_close	.\libsndfile-1.0.17\src\xi.c	/^xi_close	(SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
xi_open	.\libsndfile-1.0.17\src\common.h	/^int		xi_open		(SF_PRIVATE *psf) ;$/;"	p	signature:(SF_PRIVATE *psf)
xi_open	.\libsndfile-1.0.17\src\xi.c	/^xi_open	(SF_PRIVATE *psf)$/;"	f	signature:(SF_PRIVATE *psf)
xi_read_header	.\libsndfile-1.0.17\src\xi.c	/^static int	xi_read_header	(SF_PRIVATE *psf) ;$/;"	p	file:	signature:(SF_PRIVATE *psf)
xi_read_header	.\libsndfile-1.0.17\src\xi.c	/^xi_read_header (SF_PRIVATE *psf)$/;"	f	file:	signature:(SF_PRIVATE *psf)
xi_write_header	.\libsndfile-1.0.17\src\xi.c	/^static int	xi_write_header (SF_PRIVATE *psf, int calc_length) ;$/;"	p	file:	signature:(SF_PRIVATE *psf, int calc_length)
xi_write_header	.\libsndfile-1.0.17\src\xi.c	/^xi_write_header (SF_PRIVATE *psf, int calc_length)$/;"	f	file:	signature:(SF_PRIVATE *psf, int calc_length)
yl	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^{	long  yl;	\/* Locked or steady state step size multiplier. *\/$/;"	m	struct:g72x_state	access:public
yu	.\libsndfile-1.0.17\src\G72x\g72x_priv.h	/^	short yu;	\/* Unlocked or non-steady state step size multiplier. *\/$/;"	m	struct:g72x_state	access:public
z1	.\libsndfile-1.0.17\src\GSM610\gsm610_priv.h	/^	word			z1;			\/* preprocessing.c, Offset_com. *\/$/;"	m	struct:gsm_state	access:public
zero_bytes	.\libsndfile-1.0.17\src\aiff.c	/^	char			zero_bytes [2] ;$/;"	m	struct:__anon10	file:	access:public
zero_data_test	.\libsndfile-1.0.17\tests\misc_test.c	/^static void	zero_data_test (const char *filename, int typemajor) ;$/;"	p	file:	signature:(const char *filename, int typemajor)
zero_data_test	.\libsndfile-1.0.17\tests\misc_test.c	/^zero_data_test (const char *filename, int typemajor)$/;"	f	file:	signature:(const char *filename, int typemajor)
~SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^			~SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
~SNDFILE_ref	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::SNDFILE_ref::~SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
~SNDFILE_ref	.\sndfile.hh	/^			~SNDFILE_ref (void) ;$/;"	p	struct:SndfileHandle::SNDFILE_ref	access:public	signature:(void)
~SNDFILE_ref	.\sndfile.hh	/^SndfileHandle::SNDFILE_ref::~SNDFILE_ref (void)$/;"	f	class:SndfileHandle::SNDFILE_ref	signature:(void)
~SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^			~SndfileHandle (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
~SndfileHandle	.\libsndfile-1.0.17\src\sndfile.hh	/^SndfileHandle::~SndfileHandle (void)$/;"	f	class:SndfileHandle	signature:(void)
~SndfileHandle	.\sndfile.hh	/^			~SndfileHandle (void) ;$/;"	p	class:SndfileHandle	access:public	signature:(void)
~SndfileHandle	.\sndfile.hh	/^SndfileHandle::~SndfileHandle (void)$/;"	f	class:SndfileHandle	signature:(void)
