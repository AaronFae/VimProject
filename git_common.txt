Reference:

http://www.kernel.org/pub/software/scm/git/docs/gittutorial.html
http://www.spheredev.org/wiki/Git_for_the_lazy
http://www.kernel.org/pub/software/scm/git/docs/everyday.html
http://progit.org/book/

1. FOR LOCAL:

git log v10..v20 -p -n3
git log stable..master

git diff v10 v20
git diff stable master

(v10 v20 above can be HEAD)


2. FOR REMOTE:

#see the changes before merging...

git fetch origin (not git fetch origin master !!!)
git log master..origin/master
git diff master origin/master
gitk master..origin/master

git fetch origin master
git log HEAD..FETCH_HEAD
git diff HEAD FETCH_HEAD
gitk HEAD..FETCH_HEAD

#begin to pull and merge

git pull origin master
git push origin master

git pull is not safe enough since it will auto merge if no conflicts.
so that just keep in mind to recheck the auto merged files after pull action.


3. REVERT CHANGES:

revert uncommitted changes:
git reset --hard

soft revert committed changes to cache:
git reset --soft HEAD^

hard revert committed changes to local:
git reset --hard HEAD^


4. Multiple Accounts for github.com
See details at http://github.com/guides/multiple-github-accounts

1) Enter file in which to save the key (/Users/tom/.ssh/id_rsa):
Instead of using “id_rsa”, you should use something like “id_rsa_github_useraccount” to denote the purpose of the key. So ultimately, you would enter:
/Users/tom/.ssh/id_rsa_github_useraccount
Still, add your public key in ~/.ssh/*.pub to your github account.

2) vi (~/.ssh/config) file, add the following:

# GitHub for cylence
Host github-tom
  HostName github.com
  User git
  IdentityFile /Users/tom/.ssh/id_rsa_git_tom

If you are using ssh-agent (with or without keychain) you might also have to enable ForwardAgent:

# GitHub for cylence
Host github-tom
  HostName github.com
  User git
  ForwardAgent yes
  IdentityFile /Users/tom/.ssh/id_rsa_git_tom

3) Instead of using:

git clone git@github.com:account/repository.git

USE

git clone git@github-tom:account/repository.git

