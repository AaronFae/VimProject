!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
AFMT_S16_NE	.\portaudio\pa_unix_oss\pa_unix_oss.c	51;"	d	file:
AMPLITUDE	.\pa_tests\patest_sine.c	44;"	d	file:
AMPLITUDE	.\portaudio\pa_tests\patest_sine.c	44;"	d	file:
AddTraceMessage	.\portaudio\pa_common\pa_trace.c	/^void AddTraceMessage( char *msg, int data )$/;"	f	signature:( char *msg, int data )
AddTraceMessage	.\portaudio\pa_common\pa_trace.h	/^    void AddTraceMessage( char *msg, int data );$/;"	p	signature:( char *msg, int data )
AddTraceMessage	.\portaudio\pa_common\pa_trace.h	57;"	d
BAD_DEVICE_ID	.\portaudio\pa_unix_oss\pa_unix.h	78;"	d
BEEP_DURATION	.\pa_tests\patest_sync.c	52;"	d	file:
BEEP_DURATION	.\portaudio\pa_tests\patest_sync.c	52;"	d	file:
BOOL	.\portaudio\pa_win_ds\dsound_wrapper.h	40;"	d
BSC32	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^BSC32=bscmake.exe$/;"	m
BSC32	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^BSC32=bscmake.exe$/;"	m
BSC32_FLAGS	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^BSC32_FLAGS=\/nologo \/o"$(OUTDIR)\\PAStaticDS.bsc" $/;"	m
BSC32_FLAGS	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^BSC32_FLAGS=\/nologo \/o"$(OUTDIR)\\PAStaticWMME.bsc" $/;"	m
BSC32_SBRS	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^BSC32_SBRS= \\$/;"	m
BSC32_SBRS	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^BSC32_SBRS= \\$/;"	m
CFG	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^CFG=PAStaticDS - Win32 Debug$/;"	m
CFG	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^CFG=PAStaticWMME - Win32 Debug$/;"	m
CLIP	.\portaudio\pa_common\pa_convert.c	13;"	d	file:
CPP	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^CPP=cl.exe$/;"	m
CPP	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^CPP=cl.exe$/;"	m
CPP_PROJ	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^CPP_PROJ=\/nologo \/ML \/W3 \/GX \/O2 \/I "..\/..\/pa_common" \/D "WIN32" \/D "NDEBUG" \/D "_MBCS" \/D "_LIB" \/Fp"$(INTDIR)\\PAStaticDS.pch" \/YX \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\\\" \/FD \/c $/;"	m
CPP_PROJ	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^CPP_PROJ=\/nologo \/MLd \/W3 \/Gm \/GX \/ZI \/Od \/I "..\/..\/pa_common" \/D "WIN32" \/D "_DEBUG" \/D "_MBCS" \/D "_LIB" \/Fp"$(INTDIR)\\PAStaticDS.pch" \/YX \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\\\" \/FD \/GZ \/c $/;"	m
CPP_PROJ	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^CPP_PROJ=\/nologo \/ML \/W3 \/GX \/O2 \/I "..\/..\/pa_common" \/D "WIN32" \/D "NDEBUG" \/D "_MBCS" \/D "_LIB" \/Fp"$(INTDIR)\\PAStaticWMME.pch" \/YX \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\\\" \/FD \/c $/;"	m
CPP_PROJ	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^CPP_PROJ=\/nologo \/MLd \/W3 \/Gm \/GX \/ZI \/Od \/I "..\/..\/pa_common" \/D "WIN32" \/D "_DEBUG" \/D "_MBCS" \/D "_LIB" \/Fp"$(INTDIR)\\PAStaticWMME.pch" \/YX \/Fo"$(INTDIR)\\\\" \/Fd"$(INTDIR)\\\\" \/FD \/GZ \/c $/;"	m
CToPString	.\portaudio\pa_mac\pa_mac.c	/^static void    CToPString(char *inString, unsigned char* outString);$/;"	p	file:	signature:(char *inString, unsigned char* outString)
CToPString	.\portaudio\pa_mac\pa_mac.c	/^static void CToPString(char* inString, unsigned char* outString)$/;"	f	file:	signature:(char* inString, unsigned char* outString)
CalcHigherLogTwo	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^static int CalcHigherLogTwo( int n )$/;"	f	file:	signature:( int n )
CalcPhaseIncrement	.\pa_tests\debug_dual.c	56;"	d	file:
CalcPhaseIncrement	.\pa_tests\debug_sine.c	59;"	d	file:
CalcPhaseIncrement	.\pa_tests\patest_latency.c	52;"	d	file:
CalcPhaseIncrement	.\portaudio\pa_tests\debug_dual.c	56;"	d	file:
CalcPhaseIncrement	.\portaudio\pa_tests\debug_sine.c	59;"	d	file:
CalcPhaseIncrement	.\portaudio\pa_tests\patest_latency.c	52;"	d	file:
CloseAudioStream	.\portaudio\pablio\pablio.c	/^PaError CloseAudioStream( PABLIO_Stream *aStream )$/;"	f	signature:( PABLIO_Stream *aStream )
CloseAudioStream	.\portaudio\pablio\pablio.h	/^PaError CloseAudioStream( PABLIO_Stream *aStream );$/;"	p	signature:( PABLIO_Stream *aStream )
CubicAmplifier	.\pa_tests\pa_fuzz.c	/^float CubicAmplifier( float input )$/;"	f	signature:( float input )
CubicAmplifier	.\pa_tests\pa_fuzz.c	/^float CubicAmplifier( float input );$/;"	p	file:	signature:( float input )
CubicAmplifier	.\portaudio\pa_tests\pa_fuzz.c	/^float CubicAmplifier( float input )$/;"	f	signature:( float input )
CubicAmplifier	.\portaudio\pa_tests\pa_fuzz.c	/^float CubicAmplifier( float input );$/;"	p	file:	signature:( float input )
DBUG	.\portaudio\pa_common\pa_lib.c	73;"	d	file:
DBUG	.\portaudio\pa_mac\pa_mac.c	121;"	d	file:
DBUG	.\portaudio\pa_mac_core\pa_mac_core.c	126;"	d	file:
DBUG	.\portaudio\pa_unix_oss\pa_unix.h	75;"	d
DBUG	.\portaudio\pa_win_ds\pa_dsound.c	56;"	d	file:
DBUG	.\portaudio\pa_win_wmme\pa_win_wmme.c	118;"	d	file:
DBUGBACK	.\portaudio\pa_mac_core\pa_mac_core.c	127;"	d	file:
DBUGX	.\portaudio\pa_common\pa_lib.c	74;"	d	file:
DBUGX	.\portaudio\pa_mac\pa_mac.c	122;"	d	file:
DBUGX	.\portaudio\pa_mac_core\pa_mac_core.c	128;"	d	file:
DBUGX	.\portaudio\pa_unix_oss\pa_unix.h	76;"	d
DBUGX	.\portaudio\pa_win_ds\pa_dsound.c	57;"	d	file:
DBUGX	.\portaudio\pa_win_wmme\pa_win_wmme.c	119;"	d	file:
DEFAULT_BUFFER_SIZE	.\pa_tests\pa_minlat.c	47;"	d	file:
DEFAULT_BUFFER_SIZE	.\portaudio\pa_tests\pa_minlat.c	47;"	d	file:
DEVICE_NAME_BASE	.\portaudio\pa_unix_oss\pa_unix.h	86;"	d
DEVICE_NAME_BASE	.\portaudio\pa_unix_oss\pa_unix.h	88;"	d
DEV_ID_1	.\pa_tests\debug_dual.c	41;"	d	file:
DEV_ID_1	.\portaudio\pa_tests\debug_dual.c	41;"	d	file:
DEV_ID_2	.\pa_tests\debug_dual.c	42;"	d	file:
DEV_ID_2	.\portaudio\pa_tests\debug_dual.c	42;"	d	file:
DITHER_FLAG	.\pa_tests\debug_record.c	47;"	d	file:
DITHER_FLAG	.\pa_tests\patest_record.c	47;"	d	file:
DITHER_FLAG	.\portaudio\pa_tests\debug_record.c	47;"	d	file:
DITHER_FLAG	.\portaudio\pa_tests\patest_record.c	47;"	d	file:
DITHER_SHIFT	.\portaudio\pa_common\pa_lib.c	512;"	d	file:
DSW_Enumerate	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_Enumerate( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_GetOutputStatus	.\portaudio\pa_win_ds\dsound_wrapper.c	/^DWORD DSW_GetOutputStatus( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_GetOutputStatus	.\portaudio\pa_win_ds\dsound_wrapper.h	/^DWORD   DSW_GetOutputStatus( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_Init	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_Init( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_Init	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_Init( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_InitInputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_InitInputBuffer( DSoundWrapper *dsw, unsigned long nFrameRate, int nChannels, int bytesPerBuffer )$/;"	f	signature:( DSoundWrapper *dsw, unsigned long nFrameRate, int nChannels, int bytesPerBuffer )
DSW_InitInputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_InitInputBuffer( DSoundWrapper *dsw, unsigned long nFrameRate,$/;"	p	signature:( DSoundWrapper *dsw, unsigned long nFrameRate, int nChannels, int bufSize )
DSW_InitInputDevice	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_InitInputDevice( DSoundWrapper *dsw, LPGUID lpGUID )$/;"	f	signature:( DSoundWrapper *dsw, LPGUID lpGUID )
DSW_InitOutputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_InitOutputBuffer( DSoundWrapper *dsw, unsigned long nFrameRate, int nChannels, int bytesPerBuffer )$/;"	f	signature:( DSoundWrapper *dsw, unsigned long nFrameRate, int nChannels, int bytesPerBuffer )
DSW_InitOutputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_InitOutputBuffer( DSoundWrapper *dsw, unsigned long nFrameRate,$/;"	p	signature:( DSoundWrapper *dsw, unsigned long nFrameRate, int nChannels, int bufSize )
DSW_InitOutputDevice	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_InitOutputDevice( DSoundWrapper *dsw, LPGUID lpGUID )$/;"	f	signature:( DSoundWrapper *dsw, LPGUID lpGUID )
DSW_NUM_EVENTS	.\portaudio\pa_win_ds\dsound_wrapper.h	52;"	d
DSW_NUM_POSITIONS	.\portaudio\pa_win_ds\dsound_wrapper.h	51;"	d
DSW_QueryInputFilled	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_QueryInputFilled( DSoundWrapper *dsw, long *bytesFilled )$/;"	f	signature:( DSoundWrapper *dsw, long *bytesFilled )
DSW_QueryInputFilled	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_QueryInputFilled( DSoundWrapper *dsw, long *bytesFilled );$/;"	p	signature:( DSoundWrapper *dsw, long *bytesFilled )
DSW_QueryOutputSpace	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_QueryOutputSpace( DSoundWrapper *dsw, long *bytesEmpty )$/;"	f	signature:( DSoundWrapper *dsw, long *bytesEmpty )
DSW_QueryOutputSpace	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_QueryOutputSpace( DSoundWrapper *dsw, long *bytesEmpty );$/;"	p	signature:( DSoundWrapper *dsw, long *bytesEmpty )
DSW_ReadBlock	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_ReadBlock( DSoundWrapper *dsw, char *buf, long numBytes )$/;"	f	signature:( DSoundWrapper *dsw, char *buf, long numBytes )
DSW_ReadBlock	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_ReadBlock( DSoundWrapper *dsw, char *buf, long numBytes );$/;"	p	signature:( DSoundWrapper *dsw, char *buf, long numBytes )
DSW_StartInput	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_StartInput( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_StartInput	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_StartInput( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_StartOutput	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_StartOutput( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_StartOutput	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_StartOutput( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_StopInput	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_StopInput( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_StopInput	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_StopInput( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_StopOutput	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_StopOutput( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_StopOutput	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_StopOutput( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_TERMINATION_EVENT	.\portaudio\pa_win_ds\dsound_wrapper.h	53;"	d
DSW_Term	.\portaudio\pa_win_ds\dsound_wrapper.c	/^void DSW_Term( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_Term	.\portaudio\pa_win_ds\dsound_wrapper.h	/^void DSW_Term( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSW_WriteBlock	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_WriteBlock( DSoundWrapper *dsw, char *buf, long numBytes )$/;"	f	signature:( DSoundWrapper *dsw, char *buf, long numBytes )
DSW_WriteBlock	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_WriteBlock( DSoundWrapper *dsw, char *buf, long numBytes );$/;"	p	signature:( DSoundWrapper *dsw, char *buf, long numBytes )
DSW_ZeroEmptySpace	.\portaudio\pa_win_ds\dsound_wrapper.c	/^HRESULT DSW_ZeroEmptySpace( DSoundWrapper *dsw )$/;"	f	signature:( DSoundWrapper *dsw )
DSW_ZeroEmptySpace	.\portaudio\pa_win_ds\dsound_wrapper.h	/^HRESULT DSW_ZeroEmptySpace( DSoundWrapper *dsw );$/;"	p	signature:( DSoundWrapper *dsw )
DSoundWrapper	.\portaudio\pa_win_ds\dsound_wrapper.h	/^DSoundWrapper;$/;"	t	typeref:struct:__anon48
DoubleToUnsignedFixed	.\portaudio\pa_mac\pa_mac.c	131;"	d	file:
DummyCallbackFunc	.\portmixer\px_tests\px_test.c	/^static int DummyCallbackFunc(void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:(void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData)
DummyCallbackFunc	.\px_tests\px_test.c	/^static int DummyCallbackFunc(void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:(void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData)
DumpTraceMessages	.\portaudio\pa_common\pa_trace.c	/^void DumpTraceMessages()$/;"	f
DumpTraceMessages	.\portaudio\pa_common\pa_trace.h	/^    void DumpTraceMessages();$/;"	p	signature:()
DumpTraceMessages	.\portaudio\pa_common\pa_trace.h	59;"	d
ERR_RPT	.\portaudio\pa_common\pa_lib.c	72;"	d	file:
ERR_RPT	.\portaudio\pa_mac\pa_mac.c	120;"	d	file:
ERR_RPT	.\portaudio\pa_unix_oss\pa_unix.h	74;"	d
ERR_RPT	.\portaudio\pa_win_ds\pa_dsound.c	55;"	d	file:
ERR_RPT	.\portaudio\pa_win_wmme\pa_win_wmme.c	117;"	d	file:
EXPECT	.\pa_tests\paqa_devs.c	72;"	d	file:
EXPECT	.\pa_tests\paqa_errs.c	69;"	d	file:
EXPECT	.\portaudio\pa_tests\paqa_devs.c	72;"	d	file:
EXPECT	.\portaudio\pa_tests\paqa_errs.c	69;"	d	file:
ErrorToString	.\portaudio\pa_mac_core\pa_mac_core.c	/^static const char *ErrorToString( OSStatus err )$/;"	f	file:	signature:( OSStatus err )
FALSE	.\portaudio\pa_common\pa_lib.c	67;"	d	file:
FALSE	.\portaudio\pa_mac\pa_mac.c	104;"	d	file:
FRAMES_PER_BLOCK	.\portaudio\pablio\test_rw.c	50;"	d	file:
FRAMES_PER_BLOCK	.\portaudio\pablio\test_w_saw.c	51;"	d	file:
FRAMES_PER_BLOCK	.\portaudio\pablio\test_w_saw8.c	50;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\debug_dual.c	46;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\debug_multi_in.c	46;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\debug_multi_out.c	43;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\debug_record.c	45;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\debug_sine.c	45;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\pa_fuzz.c	46;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\paqa_devs.c	251;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\paqa_errs.c	43;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_latency.c	42;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_leftright.c	44;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_maxsines.c	50;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_record.c	48;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_sine.c	45;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_sine_time.c	45;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_stop.c	50;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_sync.c	51;"	d	file:
FRAMES_PER_BUFFER	.\pa_tests\patest_wire.c	53;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\debug_dual.c	46;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\debug_multi_in.c	46;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\debug_multi_out.c	43;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\debug_record.c	45;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\debug_sine.c	45;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\pa_fuzz.c	46;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\paqa_devs.c	251;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\paqa_errs.c	43;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_latency.c	42;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_leftright.c	44;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_maxsines.c	50;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_record.c	48;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_sine.c	45;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_sine_time.c	45;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_stop.c	50;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_sync.c	51;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pa_tests\patest_wire.c	53;"	d	file:
FRAMES_PER_BUFFER	.\portaudio\pablio\pablio.c	53;"	d	file:
FRAMES_PER_NOTE	.\pa_tests\patest_stop.c	53;"	d	file:
FRAMES_PER_NOTE	.\portaudio\pa_tests\patest_stop.c	53;"	d	file:
FREQUENCY	.\portaudio\pablio\test_w_saw.c	49;"	d	file:
FREQ_INCR	.\pa_tests\debug_multi_out.c	44;"	d	file:
FREQ_INCR	.\portaudio\pa_tests\debug_multi_out.c	44;"	d	file:
FREQ_SCALAR	.\pa_tests\debug_dual.c	55;"	d	file:
FREQ_SCALAR	.\pa_tests\debug_sine.c	58;"	d	file:
FREQ_SCALAR	.\portaudio\pa_tests\debug_dual.c	55;"	d	file:
FREQ_SCALAR	.\portaudio\pa_tests\debug_sine.c	58;"	d	file:
FREQ_TO_PHASE_INC	.\pa_tests\patest_maxsines.c	45;"	d	file:
FREQ_TO_PHASE_INC	.\portaudio\pa_tests\patest_maxsines.c	45;"	d	file:
FUNDAMENTAL	.\pa_tests\patest_stop.c	55;"	d	file:
FUNDAMENTAL	.\portaudio\pa_tests\patest_stop.c	55;"	d	file:
FUZZ	.\pa_tests\pa_fuzz.c	72;"	d	file:
FUZZ	.\portaudio\pa_tests\pa_fuzz.c	72;"	d	file:
FourCharCode2Str	.\portaudio\pa_mac_core\pa_mac_core.c	/^static char *FourCharCode2Str(unsigned int code)$/;"	f	file:	signature:(unsigned int code)
GeneratePinkNoise	.\pa_tests\patest_pink.c	/^float GeneratePinkNoise( PinkNoise *pink )$/;"	f	signature:( PinkNoise *pink )
GeneratePinkNoise	.\pa_tests\patest_pink.c	/^float GeneratePinkNoise( PinkNoise *pink );$/;"	p	file:	signature:( PinkNoise *pink )
GeneratePinkNoise	.\portaudio\pa_tests\patest_pink.c	/^float GeneratePinkNoise( PinkNoise *pink )$/;"	f	signature:( PinkNoise *pink )
GeneratePinkNoise	.\portaudio\pa_tests\patest_pink.c	/^float GeneratePinkNoise( PinkNoise *pink );$/;"	p	file:	signature:( PinkNoise *pink )
GenerateRandomNumber	.\pa_tests\patest_pink.c	/^static unsigned long GenerateRandomNumber( void )$/;"	f	file:	signature:( void )
GenerateRandomNumber	.\pa_tests\patest_pink.c	/^static unsigned long GenerateRandomNumber( void );$/;"	p	file:	signature:( void )
GenerateRandomNumber	.\pa_tests\patest_sync.c	/^static unsigned long GenerateRandomNumber( void )$/;"	f	file:	signature:( void )
GenerateRandomNumber	.\pa_tests\patest_sync.c	/^static unsigned long GenerateRandomNumber( void );$/;"	p	file:	signature:( void )
GenerateRandomNumber	.\portaudio\pa_tests\patest_pink.c	/^static unsigned long GenerateRandomNumber( void )$/;"	f	file:	signature:( void )
GenerateRandomNumber	.\portaudio\pa_tests\patest_pink.c	/^static unsigned long GenerateRandomNumber( void );$/;"	p	file:	signature:( void )
GenerateRandomNumber	.\portaudio\pa_tests\patest_sync.c	/^static unsigned long GenerateRandomNumber( void )$/;"	f	file:	signature:( void )
GenerateRandomNumber	.\portaudio\pa_tests\patest_sync.c	/^static unsigned long GenerateRandomNumber( void );$/;"	p	file:	signature:( void )
GetAudioStreamReadable	.\portaudio\pablio\pablio.c	/^long GetAudioStreamReadable( PABLIO_Stream *aStream )$/;"	f	signature:( PABLIO_Stream *aStream )
GetAudioStreamReadable	.\portaudio\pablio\pablio.h	/^long GetAudioStreamReadable( PABLIO_Stream *aStream );$/;"	p	signature:( PABLIO_Stream *aStream )
GetAudioStreamWriteable	.\portaudio\pablio\pablio.c	/^long GetAudioStreamWriteable( PABLIO_Stream *aStream )$/;"	f	signature:( PABLIO_Stream *aStream )
GetAudioStreamWriteable	.\portaudio\pablio\pablio.h	/^long GetAudioStreamWriteable( PABLIO_Stream *aStream );$/;"	p	signature:( PABLIO_Stream *aStream )
GetVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxVolume GetVolume(int fd, int channel)$/;"	f	signature:(int fd, int channel)
Get_AFMT_S16_NE	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^int Get_AFMT_S16_NE( void )$/;"	f	signature:( void )
HIGHEST_INPUT_DEVID	.\portaudio\pa_mac_core\pa_mac_core.c	220;"	d	file:
HIGHEST_OUTPUT_DEVID	.\portaudio\pa_mac_core\pa_mac_core.c	222;"	d	file:
HOPEFOR	.\pa_tests\paqa_errs.c	81;"	d	file:
HOPEFOR	.\portaudio\pa_tests\paqa_errs.c	81;"	d	file:
INITGUID	.\portaudio\pa_win_ds\dsound_wrapper.c	39;"	d	file:
INPUT_DEVICE	.\pa_tests\patest_wire.c	44;"	d	file:
INPUT_DEVICE	.\portaudio\pa_tests\patest_wire.c	44;"	d	file:
INTDIR	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^INTDIR=.\\Debug$/;"	m
INTDIR	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^INTDIR=.\\Release$/;"	m
INTDIR	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^INTDIR=.\\Debug$/;"	m
INTDIR	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^INTDIR=.\\Release$/;"	m
IS_INPUT	.\portaudio\pa_mac_core\pa_mac_core.c	131;"	d	file:
IS_INPUT	.\portmixer\px_mac_core\px_mac_core.c	79;"	d	file:
IS_OUTPUT	.\portaudio\pa_mac_core\pa_mac_core.c	132;"	d	file:
IS_OUTPUT	.\portmixer\px_mac_core\px_mac_core.c	80;"	d	file:
InitializePinkNoise	.\pa_tests\patest_pink.c	/^void InitializePinkNoise( PinkNoise *pink, int numRows )$/;"	f	signature:( PinkNoise *pink, int numRows )
InitializePinkNoise	.\pa_tests\patest_pink.c	/^void InitializePinkNoise( PinkNoise *pink, int numRows );$/;"	p	file:	signature:( PinkNoise *pink, int numRows )
InitializePinkNoise	.\portaudio\pa_tests\patest_pink.c	/^void InitializePinkNoise( PinkNoise *pink, int numRows )$/;"	f	signature:( PinkNoise *pink, int numRows )
InitializePinkNoise	.\portaudio\pa_tests\patest_pink.c	/^void InitializePinkNoise( PinkNoise *pink, int numRows );$/;"	p	file:	signature:( PinkNoise *pink, int numRows )
LATENCY_MSEC	.\pa_tests\patest_stop.c	51;"	d	file:
LATENCY_MSEC	.\pa_tests\patest_sync.c	53;"	d	file:
LATENCY_MSEC	.\portaudio\pa_tests\patest_stop.c	51;"	d	file:
LATENCY_MSEC	.\portaudio\pa_tests\patest_sync.c	53;"	d	file:
LIB32	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^LIB32=link.exe -lib$/;"	m
LIB32	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^LIB32=link.exe -lib$/;"	m
LIB32_FLAGS	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^LIB32_FLAGS=\/nologo \/out:"..\/Lib\/PAStaticDS.lib" $/;"	m
LIB32_FLAGS	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^LIB32_FLAGS=\/nologo \/out:"..\/Lib\/PAStaticDSD.lib" $/;"	m
LIB32_FLAGS	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^LIB32_FLAGS=\/nologo \/out:"..\/Lib\/PAStaticWMME.lib" $/;"	m
LIB32_FLAGS	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^LIB32_FLAGS=\/nologo \/out:"..\/Lib\/PAStaticWMMED.lib" $/;"	m
LIB32_OBJS	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^LIB32_OBJS= \\$/;"	m
LIB32_OBJS	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^LIB32_OBJS= \\$/;"	m
LOWEST_INPUT_DEVID	.\portaudio\pa_mac_core\pa_mac_core.c	219;"	d	file:
LOWEST_OUTPUT_DEVID	.\portaudio\pa_mac_core\pa_mac_core.c	221;"	d	file:
LOWPASS_COEFFICIENT_0	.\portaudio\pa_mac\pa_mac.c	780;"	d	file:
LOWPASS_COEFFICIENT_0	.\portaudio\pa_mac_core\pa_mac_core.c	319;"	d	file:
LOWPASS_COEFFICIENT_0	.\portaudio\pa_unix_oss\pa_unix.c	126;"	d	file:
LOWPASS_COEFFICIENT_0	.\portaudio\pa_win_ds\pa_dsound.c	146;"	d	file:
LOWPASS_COEFFICIENT_0	.\portaudio\pa_win_wmme\pa_win_wmme.c	273;"	d	file:
LOWPASS_COEFFICIENT_1	.\portaudio\pa_mac\pa_mac.c	781;"	d	file:
LOWPASS_COEFFICIENT_1	.\portaudio\pa_mac_core\pa_mac_core.c	320;"	d	file:
LOWPASS_COEFFICIENT_1	.\portaudio\pa_unix_oss\pa_unix.c	127;"	d	file:
LOWPASS_COEFFICIENT_1	.\portaudio\pa_win_ds\pa_dsound.c	147;"	d	file:
LOWPASS_COEFFICIENT_1	.\portaudio\pa_win_wmme\pa_win_wmme.c	274;"	d	file:
License	.\portaudio\index.html	/^<a NAME="License"><\/a>License<\/h2>$/;"	a
LookupSine	.\pa_tests\debug_dual.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\pa_tests\debug_dual.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupSine	.\pa_tests\debug_sine.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\pa_tests\debug_sine.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupSine	.\pa_tests\patest_latency.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\pa_tests\patest_latency.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupSine	.\pa_tests\patest_maxsines.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\pa_tests\patest_maxsines.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\debug_dual.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\debug_dual.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\debug_sine.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\debug_sine.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\patest_latency.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\patest_latency.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\patest_maxsines.c	/^float LookupSine( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupSine	.\portaudio\pa_tests\patest_maxsines.c	/^float LookupSine( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupWaveform	.\pa_tests\patest_stop.c	/^float LookupWaveform( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupWaveform	.\pa_tests\patest_stop.c	/^float LookupWaveform( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
LookupWaveform	.\portaudio\pa_tests\patest_stop.c	/^float LookupWaveform( paTestData *data, float phase )$/;"	f	signature:( paTestData *data, float phase )
LookupWaveform	.\portaudio\pa_tests\patest_stop.c	/^float LookupWaveform( paTestData *data, float phase );$/;"	p	file:	signature:( paTestData *data, float phase )
MAC_PHYSICAL_FRAMES_PER_BUFFER	.\portaudio\pa_mac\pa_mac.c	124;"	d	file:
MAC_VIRTUAL_FRAMES_PER_BUFFER	.\portaudio\pa_mac\pa_mac.c	125;"	d	file:
MAX_CHANNELS	.\pa_tests\debug_multi_out.c	45;"	d	file:
MAX_CHANNELS	.\portaudio\pa_tests\debug_multi_out.c	45;"	d	file:
MAX_CHARS_DEVNAME	.\portaudio\pa_unix_oss\pa_unix.h	91;"	d
MAX_FREQ	.\pa_tests\debug_dual.c	54;"	d	file:
MAX_FREQ	.\pa_tests\debug_sine.c	57;"	d	file:
MAX_FREQ	.\portaudio\pa_tests\debug_dual.c	54;"	d	file:
MAX_FREQ	.\portaudio\pa_tests\debug_sine.c	57;"	d	file:
MAX_NUMSAMPLINGRATES	.\portaudio\pa_win_wmme\pa_win_wmme.c	362;"	d	file:
MAX_PHASE_INC	.\pa_tests\patest_maxsines.c	48;"	d	file:
MAX_PHASE_INC	.\portaudio\pa_tests\patest_maxsines.c	48;"	d	file:
MAX_REPEATS	.\pa_tests\patest_stop.c	54;"	d	file:
MAX_REPEATS	.\portaudio\pa_tests\patest_stop.c	54;"	d	file:
MAX_SAMPLE_RATES	.\portaudio\pa_unix_oss\pa_unix.h	92;"	d
MAX_SINES	.\pa_tests\patest_maxsines.c	42;"	d	file:
MAX_SINES	.\portaudio\pa_tests\patest_maxsines.c	42;"	d	file:
MAX_TIMEOUT_MSEC	.\portaudio\pa_unix_oss\pa_unix.h	82;"	d
MAX_TRACE_RECORDS	.\portaudio\pa_common\pa_trace.h	37;"	d
MAX_USAGE	.\pa_tests\patest_maxsines.c	43;"	d	file:
MAX_USAGE	.\portaudio\pa_tests\patest_maxsines.c	43;"	d	file:
MIN_FREQ	.\pa_tests\debug_dual.c	53;"	d	file:
MIN_FREQ	.\pa_tests\debug_sine.c	56;"	d	file:
MIN_FREQ	.\pa_tests\patest_latency.c	51;"	d	file:
MIN_FREQ	.\portaudio\pa_tests\debug_dual.c	53;"	d	file:
MIN_FREQ	.\portaudio\pa_tests\debug_sine.c	56;"	d	file:
MIN_FREQ	.\portaudio\pa_tests\patest_latency.c	51;"	d	file:
MIN_LATENCY_MSEC	.\pa_tests\debug_multi_in.c	47;"	d	file:
MIN_LATENCY_MSEC	.\portaudio\pa_tests\debug_multi_in.c	47;"	d	file:
MIN_LATENCY_MSEC	.\portaudio\pa_unix_oss\pa_unix.h	80;"	d
MIN_PHASE_INC	.\pa_tests\patest_maxsines.c	47;"	d	file:
MIN_PHASE_INC	.\portaudio\pa_tests\patest_maxsines.c	47;"	d	file:
MIN_TIMEOUT_MSEC	.\portaudio\pa_mac_core\pa_mac_core.c	122;"	d	file:
MIN_TIMEOUT_MSEC	.\portaudio\pa_unix_oss\pa_unix.h	81;"	d
MIN_TIMEOUT_MSEC	.\portaudio\pa_win_wmme\pa_win_wmme.c	101;"	d	file:
MODE_ABORT	.\pa_tests\patest_stop.c	63;"	d	file:
MODE_ABORT	.\portaudio\pa_tests\patest_stop.c	63;"	d	file:
MODE_FINISH	.\pa_tests\patest_stop.c	61;"	d	file:
MODE_FINISH	.\portaudio\pa_tests\patest_stop.c	61;"	d	file:
MODE_INPUT	.\pa_tests\paqa_devs.c	43;"	d	file:
MODE_INPUT	.\pa_tests\paqa_errs.c	41;"	d	file:
MODE_INPUT	.\portaudio\pa_tests\paqa_devs.c	43;"	d	file:
MODE_INPUT	.\portaudio\pa_tests\paqa_errs.c	41;"	d	file:
MODE_OUTPUT	.\pa_tests\paqa_devs.c	44;"	d	file:
MODE_OUTPUT	.\pa_tests\paqa_errs.c	42;"	d	file:
MODE_OUTPUT	.\portaudio\pa_tests\paqa_devs.c	44;"	d	file:
MODE_OUTPUT	.\portaudio\pa_tests\paqa_errs.c	42;"	d	file:
MODE_STOP	.\pa_tests\patest_stop.c	62;"	d	file:
MODE_STOP	.\portaudio\pa_tests\patest_stop.c	62;"	d	file:
MSEC_PER_BUFFER	.\pa_tests\debug_sine.c	47;"	d	file:
MSEC_PER_BUFFER	.\portaudio\pa_tests\debug_sine.c	47;"	d	file:
M_PI	.\pa_tests\debug_dual.c	58;"	d	file:
M_PI	.\pa_tests\debug_multi_in.c	50;"	d	file:
M_PI	.\pa_tests\debug_multi_out.c	48;"	d	file:
M_PI	.\pa_tests\debug_sine.c	61;"	d	file:
M_PI	.\pa_tests\debug_test1.c	14;"	d	file:
M_PI	.\pa_tests\pa_minlat.c	43;"	d	file:
M_PI	.\pa_tests\patest1.c	14;"	d	file:
M_PI	.\pa_tests\patest_clip.c	43;"	d	file:
M_PI	.\pa_tests\patest_dither.c	43;"	d	file:
M_PI	.\pa_tests\patest_latency.c	54;"	d	file:
M_PI	.\pa_tests\patest_leftright.c	46;"	d	file:
M_PI	.\pa_tests\patest_longsine.c	43;"	d	file:
M_PI	.\pa_tests\patest_many.c	43;"	d	file:
M_PI	.\pa_tests\patest_maxsines.c	52;"	d	file:
M_PI	.\pa_tests\patest_sine.c	50;"	d	file:
M_PI	.\pa_tests\patest_sine8.c	49;"	d	file:
M_PI	.\pa_tests\patest_sine_time.c	48;"	d	file:
M_PI	.\pa_tests\patest_stop.c	65;"	d	file:
M_PI	.\portaudio\pa_tests\debug_dual.c	58;"	d	file:
M_PI	.\portaudio\pa_tests\debug_multi_in.c	50;"	d	file:
M_PI	.\portaudio\pa_tests\debug_multi_out.c	48;"	d	file:
M_PI	.\portaudio\pa_tests\debug_sine.c	61;"	d	file:
M_PI	.\portaudio\pa_tests\debug_test1.c	14;"	d	file:
M_PI	.\portaudio\pa_tests\pa_minlat.c	43;"	d	file:
M_PI	.\portaudio\pa_tests\patest1.c	14;"	d	file:
M_PI	.\portaudio\pa_tests\patest_clip.c	43;"	d	file:
M_PI	.\portaudio\pa_tests\patest_dither.c	43;"	d	file:
M_PI	.\portaudio\pa_tests\patest_latency.c	54;"	d	file:
M_PI	.\portaudio\pa_tests\patest_leftright.c	46;"	d	file:
M_PI	.\portaudio\pa_tests\patest_longsine.c	43;"	d	file:
M_PI	.\portaudio\pa_tests\patest_many.c	43;"	d	file:
M_PI	.\portaudio\pa_tests\patest_maxsines.c	52;"	d	file:
M_PI	.\portaudio\pa_tests\patest_sine.c	50;"	d	file:
M_PI	.\portaudio\pa_tests\patest_sine8.c	49;"	d	file:
M_PI	.\portaudio\pa_tests\patest_sine_time.c	48;"	d	file:
M_PI	.\portaudio\pa_tests\patest_stop.c	65;"	d	file:
Mac_IsVirtualMemoryOn	.\portaudio\pa_mac\pa_mac.c	/^int Mac_IsVirtualMemoryOn( void )$/;"	f	signature:( void )
Mac_IsVirtualMemoryOn	.\portaudio\pa_mac\pa_mac.c	/^static int     Mac_IsVirtualMemoryOn( void );$/;"	p	file:	signature:( void )
MultiBuffer	.\portaudio\pa_mac\pa_mac.c	/^MultiBuffer;$/;"	t	typeref:struct:MultiBuffer	file:
MultiBuffer	.\portaudio\pa_mac\pa_mac.c	/^typedef struct MultiBuffer$/;"	s	file:
MultiBuffer	.\portmixer\px_mac\px_mac.c	/^MultiBuffer;$/;"	t	typeref:struct:MultiBuffer	file:
MultiBuffer	.\portmixer\px_mac\px_mac.c	/^typedef struct MultiBuffer$/;"	s	file:
MultiBuffer::buffers	.\portaudio\pa_mac\pa_mac.c	/^    char    *buffers[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer::buffers	.\portmixer\px_mac\px_mac.c	/^    char    *buffers[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer::nextRead	.\portaudio\pa_mac\pa_mac.c	/^    int      nextRead;$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer::nextRead	.\portmixer\px_mac\px_mac.c	/^    int      nextRead;$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer::nextWrite	.\portaudio\pa_mac\pa_mac.c	/^    int      nextWrite;$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer::nextWrite	.\portmixer\px_mac\px_mac.c	/^    int      nextWrite;$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer::numBuffers	.\portaudio\pa_mac\pa_mac.c	/^    int      numBuffers;$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer::numBuffers	.\portmixer\px_mac\px_mac.c	/^    int      numBuffers;$/;"	m	struct:MultiBuffer	file:	access:public
MultiBuffer_AdvanceReadIndex	.\portaudio\pa_mac\pa_mac.c	/^void  MultiBuffer_AdvanceReadIndex(  MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_AdvanceReadIndex	.\portaudio\pa_mac\pa_mac.c	/^void MultiBuffer_AdvanceReadIndex(  MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
MultiBuffer_AdvanceWriteIndex	.\portaudio\pa_mac\pa_mac.c	/^void  MultiBuffer_AdvanceWriteIndex(  MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_AdvanceWriteIndex	.\portaudio\pa_mac\pa_mac.c	/^void MultiBuffer_AdvanceWriteIndex(  MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextReadBuffer	.\portaudio\pa_mac\pa_mac.c	/^char *MultiBuffer_GetNextReadBuffer( MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextReadBuffer	.\portaudio\pa_mac\pa_mac.c	/^char *MultiBuffer_GetNextReadBuffer( MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextReadIndex	.\portaudio\pa_mac\pa_mac.c	/^int   MultiBuffer_GetNextReadIndex( MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextReadIndex	.\portaudio\pa_mac\pa_mac.c	/^int MultiBuffer_GetNextReadIndex( MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextWriteBuffer	.\portaudio\pa_mac\pa_mac.c	/^char *MultiBuffer_GetNextWriteBuffer( MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextWriteBuffer	.\portaudio\pa_mac\pa_mac.c	/^char *MultiBuffer_GetNextWriteBuffer( MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextWriteIndex	.\portaudio\pa_mac\pa_mac.c	/^int   MultiBuffer_GetNextWriteIndex( MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_GetNextWriteIndex	.\portaudio\pa_mac\pa_mac.c	/^int MultiBuffer_GetNextWriteIndex( MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
MultiBuffer_IsReadable	.\portaudio\pa_mac\pa_mac.c	/^int   MultiBuffer_IsReadable(  MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_IsReadable	.\portaudio\pa_mac\pa_mac.c	/^int MultiBuffer_IsReadable(  MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
MultiBuffer_IsWriteable	.\portaudio\pa_mac\pa_mac.c	/^int   MultiBuffer_IsWriteable(  MultiBuffer *mbuf );$/;"	p	file:	signature:( MultiBuffer *mbuf )
MultiBuffer_IsWriteable	.\portaudio\pa_mac\pa_mac.c	/^int MultiBuffer_IsWriteable(  MultiBuffer *mbuf )$/;"	f	signature:( MultiBuffer *mbuf )
NOTE_0	.\pa_tests\patest_stop.c	56;"	d	file:
NOTE_0	.\portaudio\pa_tests\patest_stop.c	56;"	d	file:
NOTE_1	.\pa_tests\patest_stop.c	57;"	d	file:
NOTE_1	.\portaudio\pa_tests\patest_stop.c	57;"	d	file:
NOTE_2	.\pa_tests\patest_stop.c	58;"	d	file:
NOTE_2	.\portaudio\pa_tests\patest_stop.c	58;"	d	file:
NOTE_3	.\pa_tests\patest_stop.c	59;"	d	file:
NOTE_3	.\portaudio\pa_tests\patest_stop.c	59;"	d	file:
NOTE_4	.\pa_tests\patest_stop.c	60;"	d	file:
NOTE_4	.\portaudio\pa_tests\patest_stop.c	60;"	d	file:
NULL	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^NULL=$/;"	m
NULL	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^NULL=nul$/;"	m
NULL	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^NULL=$/;"	m
NULL	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^NULL=nul$/;"	m
NUM_BEEPS	.\pa_tests\patest_sync.c	49;"	d	file:
NUM_BEEPS	.\portaudio\pa_tests\patest_sync.c	49;"	d	file:
NUM_BUFFERS	.\pa_tests\debug_dual.c	51;"	d	file:
NUM_BUFFERS	.\pa_tests\debug_multi_in.c	48;"	d	file:
NUM_BUFFERS	.\pa_tests\debug_sine.c	53;"	d	file:
NUM_BUFFERS	.\pa_tests\paqa_errs.c	45;"	d	file:
NUM_BUFFERS	.\pa_tests\patest_latency.c	48;"	d	file:
NUM_BUFFERS	.\pa_tests\patest_sine_time.c	46;"	d	file:
NUM_BUFFERS	.\pa_tests\patest_stop.c	52;"	d	file:
NUM_BUFFERS	.\pa_tests\patest_sync.c	56;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\debug_dual.c	51;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\debug_multi_in.c	48;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\debug_sine.c	53;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\paqa_errs.c	45;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\patest_latency.c	48;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\patest_sine_time.c	46;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\patest_stop.c	52;"	d	file:
NUM_BUFFERS	.\portaudio\pa_tests\patest_sync.c	56;"	d	file:
NUM_CHANNELS	.\pa_tests\debug_record.c	44;"	d	file:
NUM_CHANNELS	.\pa_tests\patest_record.c	45;"	d	file:
NUM_CHANNELS	.\portaudio\pa_tests\debug_record.c	44;"	d	file:
NUM_CHANNELS	.\portaudio\pa_tests\patest_record.c	45;"	d	file:
NUM_CUSTOMSAMPLINGRATES	.\portaudio\pa_win_wmme\pa_win_wmme.c	361;"	d	file:
NUM_ECHO_FRAMES	.\portaudio\pablio\test_rw_echo.c	67;"	d	file:
NUM_SECONDS	.\pa_tests\debug_dual.c	43;"	d	file:
NUM_SECONDS	.\pa_tests\debug_record.c	43;"	d	file:
NUM_SECONDS	.\pa_tests\debug_sine.c	42;"	d	file:
NUM_SECONDS	.\pa_tests\patest_clip.c	40;"	d	file:
NUM_SECONDS	.\pa_tests\patest_dither.c	40;"	d	file:
NUM_SECONDS	.\pa_tests\patest_leftright.c	42;"	d	file:
NUM_SECONDS	.\pa_tests\patest_many.c	40;"	d	file:
NUM_SECONDS	.\pa_tests\patest_record.c	44;"	d	file:
NUM_SECONDS	.\pa_tests\patest_saw.c	39;"	d	file:
NUM_SECONDS	.\pa_tests\patest_sine.c	42;"	d	file:
NUM_SECONDS	.\pa_tests\patest_sine8.c	40;"	d	file:
NUM_SECONDS	.\pa_tests\patest_sine_time.c	43;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\debug_dual.c	43;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\debug_record.c	43;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\debug_sine.c	42;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_clip.c	40;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_dither.c	40;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_leftright.c	42;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_many.c	40;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_record.c	44;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_saw.c	39;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_sine.c	42;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_sine8.c	40;"	d	file:
NUM_SECONDS	.\portaudio\pa_tests\patest_sine_time.c	43;"	d	file:
NUM_SECONDS	.\portaudio\pablio\test_rw.c	48;"	d	file:
NUM_SECONDS	.\portaudio\pablio\test_rw_echo.c	55;"	d	file:
NUM_SECONDS	.\portaudio\pablio\test_w_saw.c	46;"	d	file:
NUM_SECONDS	.\portaudio\pablio\test_w_saw8.c	46;"	d	file:
NUM_STANDARDSAMPLINGRATES	.\portaudio\pa_win_wmme\pa_win_wmme.c	359;"	d	file:
OUTDIR	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^OUTDIR=.\\Debug$/;"	m
OUTDIR	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^OUTDIR=.\\Release$/;"	m
OUTDIR	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^OUTDIR=.\\Debug$/;"	m
OUTDIR	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^OUTDIR=.\\Release$/;"	m
OUTPUT_DEVICE	.\pa_tests\debug_multi_in.c	43;"	d	file:
OUTPUT_DEVICE	.\pa_tests\debug_multi_out.c	41;"	d	file:
OUTPUT_DEVICE	.\pa_tests\debug_sine.c	40;"	d	file:
OUTPUT_DEVICE	.\pa_tests\patest_latency.c	40;"	d	file:
OUTPUT_DEVICE	.\pa_tests\patest_sine.c	46;"	d	file:
OUTPUT_DEVICE	.\pa_tests\patest_stop.c	47;"	d	file:
OUTPUT_DEVICE	.\pa_tests\patest_wire.c	45;"	d	file:
OUTPUT_DEVICE	.\portaudio\pa_tests\debug_multi_in.c	43;"	d	file:
OUTPUT_DEVICE	.\portaudio\pa_tests\debug_multi_out.c	41;"	d	file:
OUTPUT_DEVICE	.\portaudio\pa_tests\debug_sine.c	40;"	d	file:
OUTPUT_DEVICE	.\portaudio\pa_tests\patest_latency.c	40;"	d	file:
OUTPUT_DEVICE	.\portaudio\pa_tests\patest_sine.c	46;"	d	file:
OUTPUT_DEVICE	.\portaudio\pa_tests\patest_stop.c	47;"	d	file:
OUTPUT_DEVICE	.\portaudio\pa_tests\patest_wire.c	45;"	d	file:
OpenAudioStream	.\portaudio\pablio\pablio.c	/^PaError OpenAudioStream( PABLIO_Stream **rwblPtr, double sampleRate,$/;"	f	signature:( PABLIO_Stream **rwblPtr, double sampleRate, PaSampleFormat format, long flags )
OpenAudioStream	.\portaudio\pablio\pablio.h	/^PaError OpenAudioStream( PABLIO_Stream **aStreamPtr, double sampleRate,$/;"	p	signature:( PABLIO_Stream **aStreamPtr, double sampleRate, PaSampleFormat format, long flags )
PABLIO_InitFIFO	.\portaudio\pablio\pablio.c	/^static PaError PABLIO_InitFIFO( RingBuffer *rbuf, long numFrames, long bytesPerFrame )$/;"	f	file:	signature:( RingBuffer *rbuf, long numFrames, long bytesPerFrame )
PABLIO_InitFIFO	.\portaudio\pablio\pablio.c	/^static PaError PABLIO_InitFIFO( RingBuffer *rbuf, long numFrames, long bytesPerFrame );$/;"	p	file:	signature:( RingBuffer *rbuf, long numFrames, long bytesPerFrame )
PABLIO_MONO	.\portaudio\pablio\pablio.h	66;"	d
PABLIO_READ	.\portaudio\pablio\pablio.h	63;"	d
PABLIO_READ_WRITE	.\portaudio\pablio\pablio.h	65;"	d
PABLIO_STEREO	.\portaudio\pablio\pablio.h	67;"	d
PABLIO_Stream	.\portaudio\pablio\pablio.h	/^PABLIO_Stream;$/;"	t	typeref:struct:__anon22
PABLIO_TermFIFO	.\portaudio\pablio\pablio.c	/^static PaError PABLIO_TermFIFO( RingBuffer *rbuf )$/;"	f	file:	signature:( RingBuffer *rbuf )
PABLIO_TermFIFO	.\portaudio\pablio\pablio.c	/^static PaError PABLIO_TermFIFO( RingBuffer *rbuf );$/;"	p	file:	signature:( RingBuffer *rbuf )
PABLIO_WRITE	.\portaudio\pablio\pablio.h	64;"	d
PAOSX_DevicePropertyListener	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PAOSX_DevicePropertyListener (AudioDeviceID					inDevice,$/;"	f	file:	signature:(AudioDeviceID inDevice, UInt32 inChannel, Boolean isInput, AudioDevicePropertyID inPropertyID, void* inClientData)
PAOSX_DevicePropertyListener	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PAOSX_DevicePropertyListener (AudioDeviceID					inDevice,$/;"	p	file:	signature:(AudioDeviceID inDevice, UInt32 inChannel, Boolean isInput, AudioDevicePropertyID inPropertyID, void* inClientData)
PA_DITHER_BITS	.\portaudio\pa_common\pa_host.h	172;"	d
PA_DITHER_BITS	.\portaudio\pa_common\pa_lib.c	497;"	d	file:
PA_DITHER_SCALE	.\portaudio\pa_common\pa_host.h	173;"	d
PA_DITHER_SCALE	.\portaudio\pa_common\pa_lib.c	498;"	d	file:
PA_ENV_BUF_SIZE	.\portaudio\pa_win_ds\pa_dsound.c	383;"	d	file:
PA_ENV_BUF_SIZE	.\portaudio\pa_win_wmme\pa_win_wmme.c	547;"	d	file:
PA_HOST_H	.\portaudio\pa_common\pa_host.h	2;"	d
PA_LATENCY_ENV_NAME	.\portaudio\pa_unix_oss\pa_unix.c	702;"	d	file:
PA_LATENCY_ENV_NAME	.\portaudio\pa_win_ds\pa_dsound.c	952;"	d	file:
PA_LATENCY_ENV_NAME	.\portaudio\pa_win_wmme\pa_win_wmme.c	1524;"	d	file:
PA_MAGIC	.\portaudio\pa_common\pa_host.h	70;"	d
PA_MAX_DEVICE_INFO	.\portaudio\pa_mac\pa_mac.c	128;"	d	file:
PA_MAX_MSEC_PER_HOST_BUFFER	.\portaudio\pa_win_wmme\pa_win_wmme.c	90;"	d	file:
PA_MAX_MSEC_PER_HOST_BUFFER	.\portaudio\pa_win_wmme\pa_win_wmme.c	96;"	d	file:
PA_MAX_NUM_HOST_BUFFERS	.\portaudio\pa_mac\pa_mac.c	127;"	d	file:
PA_MAX_NUM_HOST_BUFFERS	.\portaudio\pa_win_wmme\pa_win_wmme.c	92;"	d	file:
PA_MAX_NUM_HOST_BUFFERS	.\portaudio\pa_win_wmme\pa_win_wmme.c	98;"	d	file:
PA_MAX_NUM_HOST_BUFFERS	.\portmixer\px_mac\px_mac.c	45;"	d	file:
PA_MAX_USAGE_ALLOWED	.\portaudio\pa_mac\pa_mac.c	116;"	d	file:
PA_MIN_LATENCY_MSEC	.\portaudio\pa_mac_core\pa_mac_core.c	121;"	d	file:
PA_MIN_MSEC_PER_HOST_BUFFER	.\portaudio\pa_win_wmme\pa_win_wmme.c	89;"	d	file:
PA_MIN_MSEC_PER_HOST_BUFFER	.\portaudio\pa_win_wmme\pa_win_wmme.c	95;"	d	file:
PA_MIN_NUM_HOST_BUFFERS	.\portaudio\pa_mac\pa_mac.c	126;"	d	file:
PA_MIN_NUM_HOST_BUFFERS	.\portaudio\pa_win_wmme\pa_win_wmme.c	91;"	d	file:
PA_MIN_NUM_HOST_BUFFERS	.\portaudio\pa_win_wmme\pa_win_wmme.c	97;"	d	file:
PA_MODE_INPUT_ONLY	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PA_MODE_INPUT_ONLY,$/;"	e	enum:PaDeviceMode	file:
PA_MODE_INPUT_ONLY	.\portmixer\px_mac_core\px_mac_core.c	/^    PA_MODE_INPUT_ONLY,$/;"	e	enum:PaDeviceMode	file:
PA_MODE_IO_ONE_DEVICE	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PA_MODE_IO_ONE_DEVICE,$/;"	e	enum:PaDeviceMode	file:
PA_MODE_IO_ONE_DEVICE	.\portmixer\px_mac_core\px_mac_core.c	/^    PA_MODE_IO_ONE_DEVICE,$/;"	e	enum:PaDeviceMode	file:
PA_MODE_IO_TWO_DEVICES	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PA_MODE_IO_TWO_DEVICES$/;"	e	enum:PaDeviceMode	file:
PA_MODE_IO_TWO_DEVICES	.\portmixer\px_mac_core\px_mac_core.c	/^    PA_MODE_IO_TWO_DEVICES$/;"	e	enum:PaDeviceMode	file:
PA_MODE_OUTPUT_ONLY	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PA_MODE_OUTPUT_ONLY,$/;"	e	enum:PaDeviceMode	file:
PA_MODE_OUTPUT_ONLY	.\portmixer\px_mac_core\px_mac_core.c	/^    PA_MODE_OUTPUT_ONLY,$/;"	e	enum:PaDeviceMode	file:
PA_REC_IN_DEV_ENV_NAME	.\portaudio\pa_win_ds\pa_dsound.c	384;"	d	file:
PA_REC_IN_DEV_ENV_NAME	.\portaudio\pa_win_wmme\pa_win_wmme.c	548;"	d	file:
PA_REC_OUT_DEV_ENV_NAME	.\portaudio\pa_win_ds\pa_dsound.c	385;"	d	file:
PA_REC_OUT_DEV_ENV_NAME	.\portaudio\pa_win_wmme\pa_win_wmme.c	549;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\debug_record.c	51;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\debug_record.c	56;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\debug_record.c	61;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\debug_record.c	66;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\debug_record.c	71;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\pa_fuzz.c	45;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\patest_record.c	52;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\patest_record.c	56;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\patest_record.c	60;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\patest_record.c	64;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\patest_wire.c	56;"	d	file:
PA_SAMPLE_TYPE	.\pa_tests\patest_wire.c	59;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\debug_record.c	51;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\debug_record.c	56;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\debug_record.c	61;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\debug_record.c	66;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\debug_record.c	71;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\pa_fuzz.c	45;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\patest_record.c	52;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\patest_record.c	56;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\patest_record.c	60;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\patest_record.c	64;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\patest_wire.c	56;"	d	file:
PA_SAMPLE_TYPE	.\portaudio\pa_tests\patest_wire.c	59;"	d	file:
PA_SIMULATE_UNDERFLOW	.\portaudio\pa_win_ds\pa_dsound.c	71;"	d	file:
PA_SIMULATE_UNDERFLOW	.\portaudio\pa_win_wmme\pa_win_wmme.c	80;"	d	file:
PA_TRACE_H	.\portaudio\pa_common\pa_trace.h	2;"	d
PA_TRACE_RUN	.\portaudio\pa_mac_core\pa_mac_core.c	118;"	d	file:
PA_TRACE_RUN	.\portaudio\pa_win_wmme\pa_win_wmme.c	83;"	d	file:
PA_TRACE_START_STOP	.\portaudio\pa_mac_core\pa_mac_core.c	119;"	d	file:
PA_TRACE_START_STOP	.\portaudio\pa_win_wmme\pa_win_wmme.c	84;"	d	file:
PA_TRACK_MEMORY	.\portaudio\pa_win_wmme\pa_win_wmme.c	76;"	d	file:
PA_USE_HIGH_LATENCY	.\portaudio\pa_win_ds\pa_dsound.c	59;"	d	file:
PA_USE_HIGH_LATENCY	.\portaudio\pa_win_wmme\pa_win_wmme.c	86;"	d	file:
PA_USE_TIMER_CALLBACK	.\portaudio\pa_win_wmme\pa_win_wmme.c	78;"	d	file:
PA_USING_INPUT	.\portaudio\pa_mac_core\pa_mac_core.c	143;"	d	file:
PA_USING_OUTPUT	.\portaudio\pa_mac_core\pa_mac_core.c	142;"	d	file:
PA_VALIDATE_RATE	.\portaudio\pa_common\pa_lib.c	60;"	d	file:
PA_WIN_9X_LATENCY	.\portaudio\pa_win_ds\pa_dsound.c	61;"	d	file:
PA_WIN_9X_LATENCY	.\portaudio\pa_win_ds\pa_dsound.c	64;"	d	file:
PA_WIN_9X_LATENCY	.\portaudio\pa_win_wmme\pa_win_wmme.c	93;"	d	file:
PA_WIN_9X_LATENCY	.\portaudio\pa_win_wmme\pa_win_wmme.c	99;"	d	file:
PA_WIN_NT_LATENCY	.\portaudio\pa_win_ds\pa_dsound.c	62;"	d	file:
PA_WIN_NT_LATENCY	.\portaudio\pa_win_ds\pa_dsound.c	65;"	d	file:
PA_WIN_NT_LATENCY	.\portaudio\pa_win_wmme\pa_win_wmme.c	107;"	d	file:
PA_WIN_WDM_LATENCY	.\portaudio\pa_win_ds\pa_dsound.c	68;"	d	file:
PA_WIN_WDM_LATENCY	.\portaudio\pa_win_wmme\pa_win_wmme.c	108;"	d	file:
PHASE_INCREMENT	.\portaudio\pablio\test_w_saw.c	50;"	d	file:
PINK_MAX_RANDOM_ROWS	.\pa_tests\patest_pink.c	48;"	d	file:
PINK_MAX_RANDOM_ROWS	.\portaudio\pa_tests\patest_pink.c	48;"	d	file:
PINK_MEASURE	.\pa_tests\patest_pink.c	88;"	d	file:
PINK_MEASURE	.\portaudio\pa_tests\patest_pink.c	88;"	d	file:
PINK_RANDOM_BITS	.\pa_tests\patest_pink.c	49;"	d	file:
PINK_RANDOM_BITS	.\portaudio\pa_tests\patest_pink.c	49;"	d	file:
PINK_RANDOM_SHIFT	.\pa_tests\patest_pink.c	50;"	d	file:
PINK_RANDOM_SHIFT	.\portaudio\pa_tests\patest_pink.c	50;"	d	file:
PINK_TEST	.\pa_tests\patest_pink.c	136;"	d	file:
PINK_TEST	.\portaudio\pa_tests\patest_pink.c	136;"	d	file:
PORT_AUDIO_H	.\portaudio\pa_common\portaudio.h	2;"	d
PORT_MIXER_H	.\portmixer\px_common\portmixer.h	2;"	d
PRINT	.\portaudio\pa_common\pa_lib.c	71;"	d	file:
PRINT	.\portaudio\pa_mac\pa_mac.c	119;"	d	file:
PRINT	.\portaudio\pa_mac\patest_devinfo.c	/^\/*$/;"	f
PRINT	.\portaudio\pa_mac_core\pa_mac_core.c	124;"	d	file:
PRINT	.\portaudio\pa_unix_oss\pa_unix.h	73;"	d
PRINT	.\portaudio\pa_win_ds\pa_dsound.c	54;"	d	file:
PRINT	.\portaudio\pa_win_wmme\pa_win_wmme.c	116;"	d	file:
PRINT_ERR	.\portaudio\pa_mac_core\pa_mac_core.c	125;"	d	file:
PToCString	.\portaudio\pa_mac\pa_mac.c	/^static void    PToCString(unsigned char* inString, char* outString);$/;"	p	file:	signature:(unsigned char* inString, char* outString)
PToCString	.\portaudio\pa_mac\pa_mac.c	/^static void PToCString(unsigned char* inString, char* outString)$/;"	f	file:	signature:(unsigned char* inString, char* outString)
PaConvert_Float32_Int16	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int16($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, short *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int16_Clip	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int16_Clip($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, short *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int16_ClipDither	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int16_ClipDither($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, short *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int16_Dither	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int16_Dither($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, short *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int32	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int32($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, long *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int32_Clip	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int32_Clip($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, long *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int8	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int8($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, char *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int8_Clip	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int8_Clip($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, char *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int8_ClipDither	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int8_ClipDither($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, char *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_Int8_Dither	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_Int8_Dither($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, char *targetBuffer, int targetStride, int numSamples )
PaConvert_Float32_UInt8	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Float32_UInt8($/;"	f	file:	signature:( float *sourceBuffer, int sourceStride, unsigned char *targetBuffer, int targetStride, int numSamples )
PaConvert_Int16_Float32	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Int16_Float32($/;"	f	file:	signature:( short *sourceBuffer, int sourceStride, float *targetBuffer, int targetStride, int numSamples )
PaConvert_Int32_Float32	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Int32_Float32($/;"	f	file:	signature:( long *sourceBuffer, int sourceStride, float *targetBuffer, int targetStride, int numSamples )
PaConvert_Int8_Float32	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_Int8_Float32($/;"	f	file:	signature:( char *sourceBuffer, int sourceStride, float *targetBuffer, int targetStride, int numSamples )
PaConvert_Process	.\portaudio\pa_common\pa_convert.c	/^long PaConvert_Process( internalPortAudioStream   *past,$/;"	f	signature:( internalPortAudioStream *past, void *nativeInputBuffer, void *nativeOutputBuffer )
PaConvert_Process	.\portaudio\pa_common\pa_host.h	/^long PaConvert_Process( internalPortAudioStream   *past,$/;"	p	signature:( internalPortAudioStream *past, void *nativeInputBuffer, void *nativeOutputBuffer )
PaConvert_SelectProc	.\portaudio\pa_common\pa_convert.c	/^static PortAudioConverter *PaConvert_SelectProc( PaSampleFormat sourceFormat,$/;"	f	file:	signature:( PaSampleFormat sourceFormat, PaSampleFormat targetFormat, int ifClip, int ifDither )
PaConvert_SetupInput	.\portaudio\pa_common\pa_convert.c	/^PaError PaConvert_SetupInput( internalPortAudioStream   *past,$/;"	f	signature:( internalPortAudioStream *past, PaSampleFormat nativeInputSampleFormat )
PaConvert_SetupInput	.\portaudio\pa_common\pa_host.h	/^PaError PaConvert_SetupInput( internalPortAudioStream   *past,$/;"	p	signature:( internalPortAudioStream *past, PaSampleFormat nativeInputSampleFormat )
PaConvert_SetupOutput	.\portaudio\pa_common\pa_convert.c	/^PaError PaConvert_SetupOutput( internalPortAudioStream   *past,$/;"	f	signature:( internalPortAudioStream *past, PaSampleFormat nativeOutputSampleFormat )
PaConvert_SetupOutput	.\portaudio\pa_common\pa_host.h	/^PaError PaConvert_SetupOutput( internalPortAudioStream   *past,$/;"	p	signature:( internalPortAudioStream *past, PaSampleFormat nativeOutputSampleFormat )
PaConvert_TriangularDither	.\portaudio\pa_common\pa_host.h	/^long PaConvert_TriangularDither( void );$/;"	p	signature:( void )
PaConvert_TriangularDither	.\portaudio\pa_common\pa_lib.c	/^long PaConvert_TriangularDither( void )$/;"	f	signature:( void )
PaConvert_UInt8_Float32	.\portaudio\pa_common\pa_convert.c	/^static void PaConvert_UInt8_Float32($/;"	f	file:	signature:( unsigned char *sourceBuffer, int sourceStride, float *targetBuffer, int targetStride, int numSamples )
PaDeviceID	.\portaudio\pa_common\portaudio.h	/^typedef int PaDeviceID;$/;"	t
PaDeviceIdToWinId	.\portaudio\pa_win_wmme\pa_win_wmme.c	182;"	d	file:
PaDeviceInfo	.\portaudio\pa_common\portaudio.h	/^PaDeviceInfo;$/;"	t	typeref:struct:__anon25
PaDeviceMode	.\portaudio\pa_mac_core\pa_mac_core.c	/^typedef enum PaDeviceMode$/;"	g	file:
PaDeviceMode	.\portaudio\pa_mac_core\pa_mac_core.c	/^} PaDeviceMode;$/;"	t	typeref:enum:PaDeviceMode	file:
PaDeviceMode	.\portmixer\px_mac_core\px_mac_core.c	/^typedef enum PaDeviceMode$/;"	g	file:
PaDeviceMode	.\portmixer\px_mac_core\px_mac_core.c	/^} PaDeviceMode;$/;"	t	typeref:enum:PaDeviceMode	file:
PaDriverInfo	.\portaudio\pa_unix_oss\pa_unix.h	/^PaDriverInfo;$/;"	t	typeref:struct:PaDriverInfo
PaDriverInfo	.\portaudio\pa_unix_oss\pa_unix.h	/^typedef struct PaDriverInfo \/* PROPOSED *\/$/;"	s
PaDriverInfo::data	.\portaudio\pa_unix_oss\pa_unix.h	/^    unsigned long data;$/;"	m	struct:PaDriverInfo	access:public
PaDriverInfo::name	.\portaudio\pa_unix_oss\pa_unix.h	/^    const char   *name;$/;"	m	struct:PaDriverInfo	access:public
PaDriverInfo::size	.\portaudio\pa_unix_oss\pa_unix.h	/^    int           size;$/;"	m	struct:PaDriverInfo	access:public
PaError	.\portaudio\pa_common\portaudio.h	/^typedef int PaError;$/;"	t
PaErrorNum	.\portaudio\pa_common\portaudio.h	/^} PaErrorNum;$/;"	t	typeref:enum:__anon24
PaFindDeviceByName	.\pa_tests\debug_multi_in.c	/^int PaFindDeviceByName( const char *name )$/;"	f	signature:( const char *name )
PaFindDeviceByName	.\portaudio\pa_tests\debug_multi_in.c	/^int PaFindDeviceByName( const char *name )$/;"	f	signature:( const char *name )
PaHostDeviceInfo	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaHostDeviceInfo;$/;"	t	typeref:struct:PaHostDeviceInfo	file:
PaHostDeviceInfo	.\portaudio\pa_mac_core\pa_mac_core.c	/^typedef struct PaHostDeviceInfo$/;"	s	file:
PaHostDeviceInfo::audioDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioDeviceID     audioDeviceID;$/;"	m	struct:PaHostDeviceInfo	file:	access:public
PaHostDeviceInfo::paInfo	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaDeviceInfo      paInfo;$/;"	m	struct:PaHostDeviceInfo	file:	access:public
PaHostInOut	.\portaudio\pa_mac_core\pa_mac_core.c	/^} PaHostInOut;$/;"	t	typeref:struct:PaHostInOut_s	file:
PaHostInOut	.\portmixer\px_mac_core\px_mac_core.c	/^} PaHostInOut;$/;"	t	typeref:struct:PaHostInOut_s	file:
PaHostInOut_s	.\portaudio\pa_mac_core\pa_mac_core.c	/^typedef struct PaHostInOut_s$/;"	s	file:
PaHostInOut_s	.\portmixer\px_mac_core\px_mac_core.c	/^typedef struct PaHostInOut_s$/;"	s	file:
PaHostInOut_s::audioDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioDeviceID      audioDeviceID; \/* CoreAudio specific ID *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::audioDeviceID	.\portmixer\px_mac_core\px_mac_core.c	/^    AudioDeviceID      audioDeviceID; \/* CoreAudio specific ID *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::bytesPerUserNativeBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    int                bytesPerUserNativeBuffer; \/* User buffer size in native host format. Depends on numChannels. *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::bytesPerUserNativeBuffer	.\portmixer\px_mac_core\px_mac_core.c	/^    int                bytesPerUserNativeBuffer; \/* User buffer size in native host format. Depends on numChannels. *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::converter	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioConverterRef  converter;$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::converter	.\portmixer\px_mac_core\px_mac_core.c	/^    AudioConverterRef  converter;$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::converterBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    void              *converterBuffer;$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::converterBuffer	.\portmixer\px_mac_core\px_mac_core.c	/^    void              *converterBuffer;$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::numChannels	.\portaudio\pa_mac_core\pa_mac_core.c	/^    int                numChannels;$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostInOut_s::numChannels	.\portmixer\px_mac_core\px_mac_core.c	/^    int                numChannels;$/;"	m	struct:PaHostInOut_s	file:	access:public
PaHostSoundControl	.\portaudio\pa_mac\pa_mac.c	/^PaHostSoundControl;$/;"	t	typeref:struct:PaHostSoundControl	file:
PaHostSoundControl	.\portaudio\pa_mac\pa_mac.c	/^typedef struct PaHostSoundControl$/;"	s	file:
PaHostSoundControl	.\portaudio\pa_mac_core\pa_mac_core.c	/^typedef struct PaHostSoundControl$/;"	s	file:
PaHostSoundControl	.\portaudio\pa_mac_core\pa_mac_core.c	/^} PaHostSoundControl;$/;"	t	typeref:struct:PaHostSoundControl	file:
PaHostSoundControl	.\portaudio\pa_unix_oss\pa_unix.h	/^PaHostSoundControl;$/;"	t	typeref:struct:PaHostSoundControl
PaHostSoundControl	.\portaudio\pa_unix_oss\pa_unix.h	/^typedef struct PaHostSoundControl$/;"	s
PaHostSoundControl	.\portaudio\pa_win_ds\pa_dsound.c	/^PaHostSoundControl;$/;"	t	typeref:struct:PaHostSoundControl	file:
PaHostSoundControl	.\portaudio\pa_win_ds\pa_dsound.c	/^typedef struct PaHostSoundControl$/;"	s	file:
PaHostSoundControl	.\portmixer\px_mac\px_mac.c	/^PaHostSoundControl;$/;"	t	typeref:struct:PaHostSoundControl	file:
PaHostSoundControl	.\portmixer\px_mac\px_mac.c	/^typedef struct PaHostSoundControl$/;"	s	file:
PaHostSoundControl	.\portmixer\px_mac_core\px_mac_core.c	/^typedef struct PaHostSoundControl$/;"	s	file:
PaHostSoundControl	.\portmixer\px_mac_core\px_mac_core.c	/^} PaHostSoundControl;$/;"	t	typeref:struct:PaHostSoundControl	file:
PaHostSoundControl::entryRusage	.\portaudio\pa_mac_core\pa_mac_core.c	/^    struct rusage      entryRusage;$/;"	m	struct:PaHostSoundControl	typeref:struct:PaHostSoundControl::rusage	file:	access:public
PaHostSoundControl::formatListenerCalled	.\portaudio\pa_mac_core\pa_mac_core.c	/^    Boolean            formatListenerCalled;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::input	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaHostInOut        input;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::input	.\portmixer\px_mac_core\px_mac_core.c	/^    PaHostInOut        input;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::inverseMicrosPerHostBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    double             inverseMicrosPerHostBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::mode	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaDeviceMode       mode;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::output	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaHostInOut        output;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::output	.\portmixer\px_mac_core\px_mac_core.c	/^    PaHostInOut        output;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_AudioPriority	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_AudioPriority;          \/* priority of background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_AudioThread	.\portaudio\pa_unix_oss\pa_unix.h	/^    pthread_t        pahsc_AudioThread;            \/* background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_AudioThreadPID	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsAudioThreadValid;     \/* Is pahsc_AudioThread valid?*\/    pid_t            pahsc_AudioThreadPID;         \/* background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_BytesPerBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    unsigned int     pahsc_BytesPerBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_BytesPerInputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    unsigned int     pahsc_BytesPerInputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_BytesPerInputHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_BytesPerInputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_BytesPerInputHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_BytesPerInputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_BytesPerOutputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    unsigned int     pahsc_BytesPerOutputBuffer;   \/* native buffer size in bytes *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_BytesPerOutputHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_BytesPerOutputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_BytesPerOutputHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_BytesPerOutputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_CanaryRun	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_CanaryRun;              \/* Ask Canary to stop. *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_CanaryThread	.\portaudio\pa_unix_oss\pa_unix.h	/^    pthread_t        pahsc_CanaryThread;           \/* low priority thread that detects abuse by audio *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_CanaryTime	.\portaudio\pa_unix_oss\pa_unix.h	/^    struct timeval   pahsc_CanaryTime;$/;"	m	struct:PaHostSoundControl	typeref:struct:PaHostSoundControl::timeval	access:public
PaHostSoundControl::pahsc_Channel	.\portaudio\pa_mac\pa_mac.c	/^    SndChannelPtr           pahsc_Channel;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_Channel	.\portmixer\px_mac\px_mac.c	/^    SndChannelPtr           pahsc_Channel;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_DSoundWrapper	.\portaudio\pa_win_ds\pa_dsound.c	/^    DSoundWrapper    pahsc_DSoundWrapper;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_EntryCount	.\portaudio\pa_mac\pa_mac.c	/^    UInt64                  pahsc_EntryCount;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_EntryCount	.\portaudio\pa_win_ds\pa_dsound.c	/^    LARGE_INTEGER    pahsc_EntryCount;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_EntryCount	.\portmixer\px_mac\px_mac.c	/^    UInt64                  pahsc_EntryCount;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_EntryTime	.\portaudio\pa_unix_oss\pa_unix.h	/^    struct timeval   pahsc_EntryTime;$/;"	m	struct:PaHostSoundControl	typeref:struct:PaHostSoundControl::timeval	access:public
PaHostSoundControl::pahsc_FramesPerDSBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    int              pahsc_FramesPerDSBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_FramesPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_FramesPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_FramesPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_FramesPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_IfInsideCallback	.\portaudio\pa_mac\pa_mac.c	/^    volatile char           pahsc_IfInsideCallback;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_IfInsideCallback	.\portaudio\pa_win_ds\pa_dsound.c	/^    BOOL             pahsc_IfInsideCallback;  \/* Test for reentrancy. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_IfInsideCallback	.\portmixer\px_mac\px_mac.c	/^    volatile char           pahsc_IfInsideCallback;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^    SICompletionUPP         pahsc_InputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputCompletionProc	.\portmixer\px_mac\px_mac.c	/^    SICompletionUPP         pahsc_InputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputHandle	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_InputHandle;$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_InputMultiBuffer	.\portaudio\pa_mac\pa_mac.c	/^    MultiBuffer             pahsc_InputMultiBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputMultiBuffer	.\portmixer\px_mac\px_mac.c	/^    MultiBuffer             pahsc_InputMultiBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputParams	.\portaudio\pa_mac\pa_mac.c	/^    SPB                     pahsc_InputParams;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputParams	.\portmixer\px_mac\px_mac.c	/^    SPB                     pahsc_InputParams;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputRefNum	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_InputRefNum;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InputRefNum	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_InputRefNum;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InverseMicrosPerBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    double           pahsc_InverseMicrosPerBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_InverseMicrosPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^	double                  pahsc_InverseMicrosPerHostBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InverseMicrosPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^	double                  pahsc_InverseMicrosPerHostBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_InverseTicksPerUserBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    double           pahsc_InverseTicksPerUserBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_IsAudioThreadValid	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsAudioThreadValid;     \/* Is pahsc_AudioThread valid?*\/    pid_t            pahsc_AudioThreadPID;         \/* background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_IsCanaryThreadValid	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsCanaryThreadValid;    \/* Is pahsc_CanaryThread valid?*\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_IsRecording	.\portaudio\pa_mac\pa_mac.c	/^    volatile char           pahsc_IsRecording;   \/* Recording in progress. Set by foreground. Cleared by background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_IsRecording	.\portmixer\px_mac\px_mac.c	/^    volatile char           pahsc_IsRecording;   \/* Recording in progress. Set by foreground. Cleared by background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_IsWatchDogThreadValid	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsWatchDogThreadValid;  \/* Is pahsc_WatchDogThread valid?*\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_LastPosPtr	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_LastPosPtr;$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_LastStreamBytes	.\portaudio\pa_unix_oss\pa_unix.h	/^    double           pahsc_LastStreamBytes;$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_MinFramesPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_MinFramesPerHostBuffer; \/* Can vary depending on virtual memory usage. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_MinFramesPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_MinFramesPerHostBuffer; \/* Can vary depending on virtual memory usage. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NativeBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    short           *pahsc_NativeBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NativeInputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    short           *pahsc_NativeInputBuffer;$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_NativeOutputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    short           *pahsc_NativeOutputBuffer;$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_NumFramesDone	.\portaudio\pa_mac\pa_mac.c	/^    PaTimestamp             pahsc_NumFramesDone;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NumFramesDone	.\portmixer\px_mac\px_mac.c	/^    PaTimestamp             pahsc_NumFramesDone;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NumHostBuffers	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_NumHostBuffers;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NumHostBuffers	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_NumHostBuffers;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NumOutsPlayed	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_NumOutsPlayed;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NumOutsPlayed	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_NumOutsPlayed;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NumOutsQueued	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_NumOutsQueued;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_NumOutsQueued	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_NumOutsQueued;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_OutputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^    SndCallBackUPP          pahsc_OutputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_OutputCompletionProc	.\portmixer\px_mac\px_mac.c	/^    SndCallBackUPP          pahsc_OutputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_OutputHandle	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_OutputHandle;$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_SoundHeaders	.\portaudio\pa_mac\pa_mac.c	/^    CmpSoundHeader          pahsc_SoundHeaders[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_SoundHeaders	.\portmixer\px_mac\px_mac.c	/^    CmpSoundHeader          pahsc_SoundHeaders[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_StopRecording	.\portaudio\pa_mac\pa_mac.c	/^    volatile char           pahsc_StopRecording; \/* Signal sent to background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_StopRecording	.\portmixer\px_mac\px_mac.c	/^    volatile char           pahsc_StopRecording; \/* Signal sent to background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_TimerID	.\portaudio\pa_win_ds\pa_dsound.c	/^    MMRESULT         pahsc_TimerID;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_UserBuffersPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_UserBuffersPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_UserBuffersPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_UserBuffersPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_ValidFramesWritten	.\portaudio\pa_win_ds\pa_dsound.c	/^    double           pahsc_ValidFramesWritten;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_WatchDogRun	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_WatchDogRun;            \/* Ask WatchDog to stop. *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_WatchDogThread	.\portaudio\pa_unix_oss\pa_unix.h	/^    pthread_t        pahsc_WatchDogThread;         \/* highest priority thread that protects system *\/$/;"	m	struct:PaHostSoundControl	access:public
PaHostSoundControl::pahsc_WhenFramesDoneIncremented	.\portaudio\pa_mac\pa_mac.c	/^    UInt64                  pahsc_WhenFramesDoneIncremented;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::pahsc_WhenFramesDoneIncremented	.\portmixer\px_mac\px_mac.c	/^    UInt64                  pahsc_WhenFramesDoneIncremented;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::primaryDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioDeviceID      primaryDeviceID;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::primaryDeviceID	.\portmixer\px_mac_core\px_mac_core.c	/^    AudioDeviceID      primaryDeviceID;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::ringBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    RingBuffer         ringBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHostSoundControl::ringBufferData	.\portaudio\pa_mac_core\pa_mac_core.c	/^    char              *ringBufferData;$/;"	m	struct:PaHostSoundControl	file:	access:public
PaHost_AllocateFastMemory	.\portaudio\pa_common\pa_host.h	/^void   *PaHost_AllocateFastMemory( long numBytes );$/;"	p	signature:( long numBytes )
PaHost_AllocateFastMemory	.\portaudio\pa_mac\pa_mac.c	/^void *PaHost_AllocateFastMemory( long numBytes )$/;"	f	signature:( long numBytes )
PaHost_AllocateFastMemory	.\portaudio\pa_mac_core\pa_mac_core.c	/^void *PaHost_AllocateFastMemory( long numBytes )$/;"	f	signature:( long numBytes )
PaHost_AllocateFastMemory	.\portaudio\pa_unix_oss\pa_unix.c	/^void *PaHost_AllocateFastMemory( long numBytes )$/;"	f	signature:( long numBytes )
PaHost_AllocateFastMemory	.\portaudio\pa_win_ds\pa_dsound.c	/^void *PaHost_AllocateFastMemory( long numBytes )$/;"	f	signature:( long numBytes )
PaHost_AllocateFastMemory	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^void *PaHost_AllocateFastMemory( long numBytes )$/;"	f	signature:( long numBytes )
PaHost_AllocateTrackedMemory	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void *PaHost_AllocateTrackedMemory( long numBytes )$/;"	f	file:	signature:( long numBytes )
PaHost_AllocateTrackedMemory	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void *PaHost_AllocateTrackedMemory( long numBytes );$/;"	p	file:	signature:( long numBytes )
PaHost_AllocateWMMEStreamData	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaError PaHost_AllocateWMMEStreamData( internalPortAudioStream *stream )$/;"	f	file:	signature:( internalPortAudioStream *stream )
PaHost_BackgroundManager	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaError PaHost_BackgroundManager( internalPortAudioStream   *past );$/;"	p	file:	signature:( internalPortAudioStream *past )
PaHost_BackgroundManager	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaError PaHost_BackgroundManager( internalPortAudioStream *stream )$/;"	f	file:	signature:( internalPortAudioStream *stream )
PaHost_BoostPriority	.\portaudio\pa_unix_oss\pa_unix.c	/^static PaError PaHost_BoostPriority( internalPortAudioStream *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaHost_CalcNumHostBuffers	.\portaudio\pa_mac\pa_mac.c	/^static void PaHost_CalcNumHostBuffers( internalPortAudioStream *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaHost_CalcNumHostBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void PaHost_CalcNumHostBuffers( internalPortAudioStream *stream )$/;"	f	file:	signature:( internalPortAudioStream *stream )
PaHost_CanaryProc	.\portaudio\pa_unix_oss\pa_unix.c	/^static int PaHost_CanaryProc( PaHostSoundControl   *pahsc )$/;"	f	file:	signature:( PaHostSoundControl *pahsc )
PaHost_CloseStream	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_CloseStream( internalPortAudioStream   *past );$/;"	p	signature:( internalPortAudioStream *past )
PaHost_CloseStream	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_CloseStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_CloseStream	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_CloseStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_CloseStream	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_CloseStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_CloseStream	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_CloseStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_CloseStream	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_CloseStream( internalPortAudioStream *stream )$/;"	f	signature:( internalPortAudioStream *stream )
PaHost_FindClosestTableEntry	.\portaudio\pa_common\pa_host.h	/^int PaHost_FindClosestTableEntry( double allowableError,  const double *rateTable,$/;"	p	signature:( double allowableError, const double *rateTable, int numRates, double frameRate )
PaHost_FindClosestTableEntry	.\portaudio\pa_common\pa_lib.c	/^int PaHost_FindClosestTableEntry( double allowableError,  const double *rateTable, int numRates, double frameRate )$/;"	f	signature:( double allowableError, const double *rateTable, int numRates, double frameRate )
PaHost_FreeFastMemory	.\portaudio\pa_common\pa_host.h	/^void    PaHost_FreeFastMemory( void *addr, long numBytes );$/;"	p	signature:( void *addr, long numBytes )
PaHost_FreeFastMemory	.\portaudio\pa_mac\pa_mac.c	/^void PaHost_FreeFastMemory( void *addr, long numBytes )$/;"	f	signature:( void *addr, long numBytes )
PaHost_FreeFastMemory	.\portaudio\pa_mac_core\pa_mac_core.c	/^void PaHost_FreeFastMemory( void *addr, long numBytes )$/;"	f	signature:( void *addr, long numBytes )
PaHost_FreeFastMemory	.\portaudio\pa_unix_oss\pa_unix.c	/^void PaHost_FreeFastMemory( void *addr, long numBytes )$/;"	f	signature:( void *addr, long numBytes )
PaHost_FreeFastMemory	.\portaudio\pa_win_ds\pa_dsound.c	/^void PaHost_FreeFastMemory( void *addr, long numBytes )$/;"	f	signature:( void *addr, long numBytes )
PaHost_FreeFastMemory	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^void PaHost_FreeFastMemory( void *addr, long numBytes )$/;"	f	signature:( void *addr, long numBytes )
PaHost_FreeTrackedMemory	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void PaHost_FreeTrackedMemory( void *addr )$/;"	f	file:	signature:( void *addr )
PaHost_FreeTrackedMemory	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void PaHost_FreeTrackedMemory( void *addr );$/;"	p	file:	signature:( void *addr )
PaHost_FreeWMMEStreamData	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void PaHost_FreeWMMEStreamData( internalPortAudioStream *internalStream )$/;"	f	file:	signature:( internalPortAudioStream *internalStream )
PaHost_GetEnvDefaultDeviceID	.\portaudio\pa_win_ds\pa_dsound.c	/^static PaDeviceID PaHost_GetEnvDefaultDeviceID( char *envName )$/;"	f	file:	signature:( char *envName )
PaHost_GetEnvDefaultDeviceID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaDeviceID PaHost_GetEnvDefaultDeviceID( char *envName )$/;"	f	file:	signature:( char *envName )
PaHost_GetMinSystemLatency	.\portaudio\pa_win_ds\pa_dsound.c	/^static int PaHost_GetMinSystemLatency( void )$/;"	f	file:	signature:( void )
PaHost_GetStreamRepresentation	.\portaudio\pa_common\pa_host.h	/^internalPortAudioStream* PaHost_GetStreamRepresentation( PortAudioStream *stream );$/;"	p	signature:( PortAudioStream *stream )
PaHost_GetStreamRepresentation	.\portaudio\pa_common\pa_lib.c	/^internalPortAudioStream* PaHost_GetStreamRepresentation( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
PaHost_GetTotalBufferFrames	.\portaudio\pa_mac\pa_mac.c	/^long PaHost_GetTotalBufferFrames( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_GetTotalBufferFrames	.\portaudio\pa_mac\pa_mac.c	/^long PaHost_GetTotalBufferFrames( internalPortAudioStream   *past );$/;"	p	file:	signature:( internalPortAudioStream *past )
PaHost_GetTotalBufferFrames	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_GetTotalBufferFrames( internalPortAudioStream   *past );$/;"	p	file:	signature:( internalPortAudioStream *past )
PaHost_GetTotalBufferFrames	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_GetTotalBufferFrames( internalPortAudioStream *stream )$/;"	f	signature:( internalPortAudioStream *stream )
PaHost_GetWMMEStreamData	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaWMMEStreamData* PaHost_GetWMMEStreamData( internalPortAudioStream* internalStream )$/;"	f	file:	signature:( internalPortAudioStream* internalStream )
PaHost_Init	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_Init( void );$/;"	p	signature:( void )
PaHost_Init	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_Init( void )$/;"	f	signature:( void )
PaHost_Init	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_Init( void )$/;"	f	signature:( void )
PaHost_Init	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_Init( void )$/;"	f	signature:( void )
PaHost_Init	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_Init( void )$/;"	f	signature:( void )
PaHost_Init	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_Init( void )$/;"	f	signature:( void )
PaHost_IsInitialized	.\portaudio\pa_common\pa_host.h	/^int PaHost_IsInitialized( void );$/;"	p	signature:( void )
PaHost_IsInitialized	.\portaudio\pa_common\pa_lib.c	/^int PaHost_IsInitialized()$/;"	f
PaHost_OpenInputStream	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_OpenInputStream( internalPortAudioStream   *stream )$/;"	f	signature:( internalPortAudioStream *stream )
PaHost_OpenOutputStream	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_OpenOutputStream( internalPortAudioStream *stream )$/;"	f	signature:( internalPortAudioStream *stream )
PaHost_OpenStream	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_OpenStream( internalPortAudioStream   *past );$/;"	p	signature:( internalPortAudioStream *past )
PaHost_OpenStream	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_OpenStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_OpenStream	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_OpenStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_OpenStream	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_OpenStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_OpenStream	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_OpenStream( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_OpenStream	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_OpenStream( internalPortAudioStream *stream )$/;"	f	signature:( internalPortAudioStream *stream )
PaHost_StartEngine	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_StartEngine( internalPortAudioStream   *past );$/;"	p	signature:( internalPortAudioStream *past )
PaHost_StartEngine	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_StartEngine( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartEngine	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_StartEngine( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartEngine	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_StartEngine( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartEngine	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_StartEngine( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartEngine	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_StartEngine( internalPortAudioStream *stream )$/;"	f	signature:( internalPortAudioStream *stream )
PaHost_StartInput	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_StartInput( internalPortAudioStream   *past );$/;"	p	signature:( internalPortAudioStream *past )
PaHost_StartInput	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_StartInput( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartInput	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_StartInput( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartInput	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_StartInput( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartInput	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_StartInput( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartInput	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_StartInput( internalPortAudioStream *internalStream )$/;"	f	signature:( internalPortAudioStream *internalStream )
PaHost_StartOutput	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_StartOutput( internalPortAudioStream   *past );$/;"	p	signature:( internalPortAudioStream *past )
PaHost_StartOutput	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_StartOutput( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartOutput	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_StartOutput( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartOutput	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_StartOutput( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartOutput	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_StartOutput( internalPortAudioStream *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StartOutput	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_StartOutput( internalPortAudioStream *stream )$/;"	f	signature:( internalPortAudioStream *stream )
PaHost_StartWatchDog	.\portaudio\pa_unix_oss\pa_unix.c	/^static PaError PaHost_StartWatchDog( PaHostSoundControl   *pahsc )$/;"	f	file:	signature:( PaHostSoundControl *pahsc )
PaHost_StopEngine	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_StopEngine( internalPortAudioStream *past, int abort );$/;"	p	signature:( internalPortAudioStream *past, int abort )
PaHost_StopEngine	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_StopEngine( internalPortAudioStream   *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopEngine	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_StopEngine( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopEngine	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_StopEngine( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopEngine	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_StopEngine( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopEngine	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_StopEngine( internalPortAudioStream *internalStream, int abort )$/;"	f	signature:( internalPortAudioStream *internalStream, int abort )
PaHost_StopInput	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_StopInput( internalPortAudioStream   *past, int abort );$/;"	p	signature:( internalPortAudioStream *past, int abort )
PaHost_StopInput	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_StopInput( internalPortAudioStream   *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopInput	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_StopInput( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopInput	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_StopInput( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopInput	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_StopInput( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopInput	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_StopInput( internalPortAudioStream *stream, int abort )$/;"	f	signature:( internalPortAudioStream *stream, int abort )
PaHost_StopOutput	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_StopOutput( internalPortAudioStream   *past, int abort );$/;"	p	signature:( internalPortAudioStream *past, int abort )
PaHost_StopOutput	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_StopOutput( internalPortAudioStream   *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopOutput	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_StopOutput( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopOutput	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_StopOutput( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopOutput	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_StopOutput( internalPortAudioStream *past, int abort )$/;"	f	signature:( internalPortAudioStream *past, int abort )
PaHost_StopOutput	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_StopOutput( internalPortAudioStream *internalStream, int abort )$/;"	f	signature:( internalPortAudioStream *internalStream, int abort )
PaHost_StopWatchDog	.\portaudio\pa_unix_oss\pa_unix.c	/^static void PaHost_StopWatchDog( PaHostSoundControl   *pahsc )$/;"	f	file:	signature:( PaHostSoundControl *pahsc )
PaHost_StreamActive	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_StreamActive( internalPortAudioStream   *past );$/;"	p	signature:( internalPortAudioStream *past )
PaHost_StreamActive	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_StreamActive( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StreamActive	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_StreamActive( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StreamActive	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_StreamActive( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StreamActive	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_StreamActive( internalPortAudioStream   *past )$/;"	f	signature:( internalPortAudioStream *past )
PaHost_StreamActive	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_StreamActive( internalPortAudioStream *internalStream )$/;"	f	signature:( internalPortAudioStream *internalStream )
PaHost_Term	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_Term( void );$/;"	p	signature:( void )
PaHost_Term	.\portaudio\pa_mac\pa_mac.c	/^PaError PaHost_Term( void )$/;"	f	signature:( void )
PaHost_Term	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaError PaHost_Term( void )$/;"	f	signature:( void )
PaHost_Term	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError PaHost_Term( void )$/;"	f	signature:( void )
PaHost_Term	.\portaudio\pa_win_ds\pa_dsound.c	/^PaError PaHost_Term( void )$/;"	f	signature:( void )
PaHost_Term	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError PaHost_Term( void )$/;"	f	signature:( void )
PaHost_UpdateStreamTime	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaError PaHost_UpdateStreamTime( PaWMMEStreamData *wmmeStreamData )$/;"	f	file:	signature:( PaWMMEStreamData *wmmeStreamData )
PaHost_UpdateStreamTime	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaError PaHost_UpdateStreamTime( PaWMMEStreamData *wmmeStreamData );$/;"	p	file:	signature:( PaWMMEStreamData *wmmeStreamData )
PaHost_ValidateSampleRate	.\portaudio\pa_common\pa_host.h	/^PaError PaHost_ValidateSampleRate( PaDeviceID id, double requestedFrameRate,$/;"	p	signature:( PaDeviceID id, double requestedFrameRate, double *closestFrameRatePtr )
PaHost_ValidateSampleRate	.\portaudio\pa_common\pa_lib.c	/^PaError PaHost_ValidateSampleRate( PaDeviceID id, double requestedFrameRate,$/;"	f	signature:( PaDeviceID id, double requestedFrameRate, double *closestFrameRatePtr )
PaHost_WatchDogProc	.\portaudio\pa_unix_oss\pa_unix.c	/^static PaError PaHost_WatchDogProc( PaHostSoundControl   *pahsc )$/;"	f	file:	signature:( PaHostSoundControl *pahsc )
PaMac_BackgroundManager	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_BackgroundManager( internalPortAudioStream   *past, int index )$/;"	f	file:	signature:( internalPortAudioStream *past, int index )
PaMac_BackgroundManager	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_BackgroundManager( internalPortAudioStream   *past, int index );$/;"	p	file:	signature:( internalPortAudioStream *past, int index )
PaMac_CallUserLoop	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_CallUserLoop( internalPortAudioStream   *past, int16 *outPtr )$/;"	f	file:	signature:( internalPortAudioStream *past, int16 *outPtr )
PaMac_CallUserLoop	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_CallUserLoop( internalPortAudioStream   *past, int16 *outPtr );$/;"	p	file:	signature:( internalPortAudioStream *past, int16 *outPtr )
PaMac_EndLoadCalculation	.\portaudio\pa_mac\pa_mac.c	/^static void    PaMac_EndLoadCalculation( internalPortAudioStream   *past );$/;"	p	file:	signature:( internalPortAudioStream *past )
PaMac_EndLoadCalculation	.\portaudio\pa_mac\pa_mac.c	/^static void PaMac_EndLoadCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaMac_FillNextOutputBuffer	.\portaudio\pa_mac\pa_mac.c	/^long    PaMac_FillNextOutputBuffer( internalPortAudioStream   *past, int index )$/;"	f	signature:( internalPortAudioStream *past, int index )
PaMac_FillNextOutputBuffer	.\portaudio\pa_mac\pa_mac.c	/^static long    PaMac_FillNextOutputBuffer( internalPortAudioStream   *past, int index );$/;"	p	file:	signature:( internalPortAudioStream *past, int index )
PaMac_GetMinNumBuffers	.\portaudio\pa_mac\pa_mac.c	/^static int     PaMac_GetMinNumBuffers( int minFramesPerHostBuffer, int framesPerBuffer, double sampleRate );$/;"	p	file:	signature:( int minFramesPerHostBuffer, int framesPerBuffer, double sampleRate )
PaMac_GetMinNumBuffers	.\portaudio\pa_mac\pa_mac.c	/^static int PaMac_GetMinNumBuffers( int minFramesPerHostBuffer, int framesPerUserBuffer, double sampleRate )$/;"	f	file:	signature:( int minFramesPerHostBuffer, int framesPerUserBuffer, double sampleRate )
PaMac_GetSampleRatesFromHandle	.\portaudio\pa_mac\pa_mac.c	/^static double * PaMac_GetSampleRatesFromHandle ( int numRates, Handle h )$/;"	f	file:	signature:( int numRates, Handle h )
PaMac_GetSampleRatesFromHandle	.\portaudio\pa_mac\pa_mac.c	/^static double *PaMac_GetSampleRatesFromHandle ( int numRates, Handle h );$/;"	p	file:	signature:( int numRates, Handle h )
PaMac_InitSoundHeader	.\portaudio\pa_mac\pa_mac.c	/^static void    PaMac_InitSoundHeader( internalPortAudioStream   *past, CmpSoundHeader *sndHeader );$/;"	p	file:	signature:( internalPortAudioStream *past, CmpSoundHeader *sndHeader )
PaMac_InitSoundHeader	.\portaudio\pa_mac\pa_mac.c	/^static void PaMac_InitSoundHeader( internalPortAudioStream   *past, CmpSoundHeader *sndHeader )$/;"	f	file:	signature:( internalPortAudioStream *past, CmpSoundHeader *sndHeader )
PaMac_InputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^pascal void PaMac_InputCompletionProc(SPBPtr recParams)$/;"	f	signature:(SPBPtr recParams)
PaMac_InputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^static pascal void PaMac_InputCompletionProc(SPBPtr recParams);$/;"	p	file:	signature:(SPBPtr recParams)
PaMac_OutputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^static pascal void PaMac_OutputCompletionProc (SndChannelPtr theChannel, SndCommand * theCallBackCmd)$/;"	f	file:	signature:(SndChannelPtr theChannel, SndCommand * theCallBackCmd)
PaMac_OutputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^static pascal void PaMac_OutputCompletionProc (SndChannelPtr theChannel, SndCommand * theCmd);$/;"	p	file:	signature:(SndChannelPtr theChannel, SndCommand * theCmd)
PaMac_PlayNext	.\portaudio\pa_mac\pa_mac.c	/^static void    PaMac_PlayNext ( internalPortAudioStream *past, int index );$/;"	p	file:	signature:( internalPortAudioStream *past, int index )
PaMac_PlayNext	.\portaudio\pa_mac\pa_mac.c	/^static void PaMac_PlayNext ( internalPortAudioStream *past, int index )$/;"	f	file:	signature:( internalPortAudioStream *past, int index )
PaMac_QueryInputDeviceInfo	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_QueryInputDeviceInfo( Str255 deviceName, internalPortAudioDevice *ipad )$/;"	f	file:	signature:( Str255 deviceName, internalPortAudioDevice *ipad )
PaMac_QueryInputDeviceInfo	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_QueryInputDeviceInfo( Str255 deviceName, internalPortAudioDevice *ipad );$/;"	p	file:	signature:( Str255 deviceName, internalPortAudioDevice *ipad )
PaMac_QueryOutputDeviceInfo	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_QueryOutputDeviceInfo( Component identifier, internalPortAudioDevice *ipad )$/;"	f	file:	signature:( Component identifier, internalPortAudioDevice *ipad )
PaMac_QueryOutputDeviceInfo	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_QueryOutputDeviceInfo( Component identifier, internalPortAudioDevice *ipad );$/;"	p	file:	signature:( Component identifier, internalPortAudioDevice *ipad )
PaMac_RecordNext	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_RecordNext( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaMac_RecordNext	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_RecordNext( internalPortAudioStream   *past );$/;"	p	file:	signature:( internalPortAudioStream *past )
PaMac_ScanInputDevices	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_ScanInputDevices( void )$/;"	f	file:	signature:( void )
PaMac_ScanInputDevices	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_ScanInputDevices( void );$/;"	p	file:	signature:( void )
PaMac_ScanOutputDevices	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_ScanOutputDevices( void )$/;"	f	file:	signature:( void )
PaMac_ScanOutputDevices	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_ScanOutputDevices( void );$/;"	p	file:	signature:( void )
PaMac_StartLoadCalculation	.\portaudio\pa_mac\pa_mac.c	/^static void    PaMac_StartLoadCalculation( internalPortAudioStream   *past );$/;"	p	file:	signature:( internalPortAudioStream *past )
PaMac_StartLoadCalculation	.\portaudio\pa_mac\pa_mac.c	/^static void PaMac_StartLoadCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaMac_TimeSlice	.\portaudio\pa_mac\pa_mac.c	/^static PaError PaMac_TimeSlice( internalPortAudioStream   *past,  int16 *macOutputBufPtr );$/;"	p	file:	signature:( internalPortAudioStream *past, int16 *macOutputBufPtr )
PaOSX_CalcHostBufferSize	.\portaudio\pa_mac_core\pa_mac_core.c	/^static void PaOSX_CalcHostBufferSize( internalPortAudioStream *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaOSX_CalcHostBufferSize	.\portaudio\pa_mac_core\pa_mac_core.c	/^static void PaOSX_CalcHostBufferSize( internalPortAudioStream *past );$/;"	p	file:	signature:( internalPortAudioStream *past )
PaOSX_CoreAudioIOCallback	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PaOSX_CoreAudioIOCallback (AudioDeviceID  inDevice, const AudioTimeStamp*  inNow,$/;"	f	file:	signature:(AudioDeviceID inDevice, const AudioTimeStamp* inNow, const AudioBufferList* inInputData, const AudioTimeStamp* inInputTime, AudioBufferList* outOutputData, const AudioTimeStamp* inOutputTime, void* contextPtr)
PaOSX_CoreAudioInputCallback	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PaOSX_CoreAudioInputCallback (AudioDeviceID  inDevice, const AudioTimeStamp*  inNow,$/;"	f	file:	signature:(AudioDeviceID inDevice, const AudioTimeStamp* inNow, const AudioBufferList* inInputData, const AudioTimeStamp* inInputTime, AudioBufferList* outOutputData, const AudioTimeStamp* inOutputTime, void* contextPtr)
PaOSX_CreateInputRingBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_CreateInputRingBuffer( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaOSX_Debug_Print_Format	.\portaudio\pa_mac_core\pa_mac_core.c	/^static void PaOSX_Debug_Print_Format(int index, AudioStreamBasicDescription *format)$/;"	f	file:	signature:(int index, AudioStreamBasicDescription *format)
PaOSX_DeviceNameFromID	.\portaudio\pa_mac_core\pa_mac_core.c	/^static char *PaOSX_DeviceNameFromID(AudioDeviceID deviceID, Boolean isInput )$/;"	f	file:	signature:(AudioDeviceID deviceID, Boolean isInput )
PaOSX_FixVolumeScalars	.\portaudio\pa_mac_core\pa_mac_core.c	/^static void PaOSX_FixVolumeScalars( AudioDeviceID devID, Boolean isInput,$/;"	f	file:	signature:( AudioDeviceID devID, Boolean isInput, int numChannels, double threshold, double newLevel )
PaOSX_GetDeviceSampleRate	.\portaudio\pa_mac_core\pa_mac_core.c	/^static Float64 PaOSX_GetDeviceSampleRate( AudioDeviceID deviceID, Boolean isInput )$/;"	f	file:	signature:( AudioDeviceID deviceID, Boolean isInput )
PaOSX_HandleInputOutput	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PaOSX_HandleInputOutput( internalPortAudioStream   *past,$/;"	f	file:	signature:( internalPortAudioStream *past, const AudioBufferList* inInputData, AudioBufferList* outOutputData )
PaOSX_InputConverterCallbackProc	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PaOSX_InputConverterCallbackProc (AudioConverterRef			inAudioConverter,$/;"	f	file:	signature:(AudioConverterRef inAudioConverter, UInt32* outDataSize, void** outData, void* inUserData)
PaOSX_IsBetterFormat	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int PaOSX_IsBetterFormat(AudioStreamBasicDescription *newFormat,$/;"	f	file:	signature:(AudioStreamBasicDescription *newFormat, AudioStreamBasicDescription *oldFormat, double desiredRate, int desiredChannels)
PaOSX_Leave_Device_Alone_Mode	.\portaudio\pa_mac_core\pa_mac_core.c	/^int PaOSX_Leave_Device_Alone_Mode = 0;$/;"	v
PaOSX_LoadAndProcess	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PaOSX_LoadAndProcess( internalPortAudioStream   *past,$/;"	f	file:	signature:( internalPortAudioStream *past, void *inputBuffer, void *outputBuffer )
PaOSX_MaybeQueryDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_MaybeQueryDevices( void )$/;"	f	file:	signature:( void )
PaOSX_OpenCommonDevice	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_OpenCommonDevice( internalPortAudioStream   *past,$/;"	f	file:	signature:( internalPortAudioStream *past, PaHostInOut *inOut, Boolean isInput )
PaOSX_OpenInputDevice	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_OpenInputDevice( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaOSX_OpenOutputDevice	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_OpenOutputDevice( internalPortAudioStream *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
PaOSX_OutputConverterCallbackProc	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PaOSX_OutputConverterCallbackProc (AudioConverterRef			inAudioConverter,$/;"	f	file:	signature:(AudioConverterRef inAudioConverter, UInt32* outDataSize, void** outData, void* inUserData)
PaOSX_QueryDefaultInputDevice	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaDeviceID PaOSX_QueryDefaultInputDevice( void )$/;"	f	file:	signature:( void )
PaOSX_QueryDefaultInputDevice	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaDeviceID PaOSX_QueryDefaultInputDevice( void );$/;"	p	file:	signature:( void )
PaOSX_QueryDefaultOutputDevice	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaDeviceID PaOSX_QueryDefaultOutputDevice( void )$/;"	f	file:	signature:( void )
PaOSX_QueryDefaultOutputDevice	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaDeviceID PaOSX_QueryDefaultOutputDevice( void );$/;"	p	file:	signature:( void )
PaOSX_QueryDeviceInfo	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int PaOSX_QueryDeviceInfo( PaHostDeviceInfo *hostDeviceInfo, int coreDeviceIndex, Boolean isInput )$/;"	f	file:	signature:( PaHostDeviceInfo *hostDeviceInfo, int coreDeviceIndex, Boolean isInput )
PaOSX_QueryDeviceInfo	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int PaOSX_QueryDeviceInfo( PaHostDeviceInfo *hostDeviceInfo, int coreDeviceIndex, Boolean isInput );$/;"	p	file:	signature:( PaHostDeviceInfo *hostDeviceInfo, int coreDeviceIndex, Boolean isInput )
PaOSX_QueryDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_QueryDevices( void )$/;"	f	file:	signature:( void )
PaOSX_QueryDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_QueryDevices( void );$/;"	p	file:	signature:( void )
PaOSX_ScanDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int PaOSX_ScanDevices( Boolean isInput )$/;"	f	file:	signature:( Boolean isInput )
PaOSX_ScanDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int PaOSX_ScanDevices( Boolean isInput );$/;"	p	file:	signature:( Boolean isInput )
PaOSX_SetDeviceBufferSize	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus PaOSX_SetDeviceBufferSize( AudioDeviceID devID, Boolean isInput, int framesPerUserBuffer, Float64 sampleRateRatio )$/;"	f	file:	signature:( AudioDeviceID devID, Boolean isInput, int framesPerUserBuffer, Float64 sampleRateRatio )
PaOSX_SetFormat	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaError PaOSX_SetFormat( AudioDeviceID devID, Boolean isInput,$/;"	f	file:	signature:( AudioDeviceID devID, Boolean isInput, double desiredRate, int desiredNumChannels )
PaQaData	.\pa_tests\paqa_devs.c	/^typedef struct PaQaData$/;"	s	file:
PaQaData	.\pa_tests\paqa_devs.c	/^} PaQaData;$/;"	t	typeref:struct:PaQaData	file:
PaQaData	.\pa_tests\paqa_errs.c	/^PaQaData;$/;"	t	typeref:struct:PaQaData	file:
PaQaData	.\pa_tests\paqa_errs.c	/^typedef struct PaQaData$/;"	s	file:
PaQaData	.\portaudio\pa_tests\paqa_devs.c	/^typedef struct PaQaData$/;"	s	file:
PaQaData	.\portaudio\pa_tests\paqa_devs.c	/^} PaQaData;$/;"	t	typeref:struct:PaQaData	file:
PaQaData	.\portaudio\pa_tests\paqa_errs.c	/^PaQaData;$/;"	t	typeref:struct:PaQaData	file:
PaQaData	.\portaudio\pa_tests\paqa_errs.c	/^typedef struct PaQaData$/;"	s	file:
PaQaData::bytesPerSample	.\pa_tests\paqa_devs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::bytesPerSample	.\pa_tests\paqa_errs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::bytesPerSample	.\portaudio\pa_tests\paqa_devs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::bytesPerSample	.\portaudio\pa_tests\paqa_errs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::format	.\pa_tests\paqa_devs.c	/^    PaSampleFormat format;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::format	.\portaudio\pa_tests\paqa_devs.c	/^    PaSampleFormat format;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::framesLeft	.\pa_tests\paqa_devs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::framesLeft	.\pa_tests\paqa_errs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::framesLeft	.\portaudio\pa_tests\paqa_devs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::framesLeft	.\portaudio\pa_tests\paqa_errs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::mode	.\pa_tests\paqa_devs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::mode	.\pa_tests\paqa_errs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::mode	.\portaudio\pa_tests\paqa_devs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::mode	.\portaudio\pa_tests\paqa_errs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::numChannels	.\pa_tests\paqa_devs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::numChannels	.\pa_tests\paqa_errs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::numChannels	.\portaudio\pa_tests\paqa_devs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::numChannels	.\portaudio\pa_tests\paqa_errs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::sawPhase	.\pa_tests\paqa_devs.c	/^    short          sawPhase;$/;"	m	struct:PaQaData	file:	access:public
PaQaData::sawPhase	.\portaudio\pa_tests\paqa_devs.c	/^    short          sawPhase;$/;"	m	struct:PaQaData	file:	access:public
PaSampleFormat	.\portaudio\pa_common\portaudio.h	/^typedef unsigned long PaSampleFormat;$/;"	t
PaStream	.\portaudio\pa_common\portaudio.h	248;"	d
PaStreamFlags	.\portaudio\pa_common\portaudio.h	/^typedef   unsigned long PaStreamFlags;$/;"	t
PaTimestamp	.\portaudio\pa_common\portaudio.h	/^typedef double PaTimestamp;$/;"	t
PaWMMEStreamData	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaWMMEStreamData;$/;"	t	typeref:struct:PaWMMEStreamData	file:
PaWMMEStreamData	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^typedef struct PaWMMEStreamData$/;"	s	file:
PaWMMEStreamData	.\portmixer\px_win_wmme\px_win_wmme.c	/^typedef struct PaWMMEStreamData$/;"	s	file:
PaWMMEStreamData	.\portmixer\px_win_wmme\px_win_wmme.c	/^} PaWMMEStreamData;$/;"	t	typeref:struct:PaWMMEStreamData	file:
PaWMMEStreamData::abortEvent	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HANDLE             abortEvent;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::abortEventInited	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                abortEventInited;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bufferEvent	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HANDLE             bufferEvent;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bufferEventInited	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bufferEventInited;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bytesPerHostInputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerHostInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bytesPerHostInputBuffer	.\portmixer\px_win_wmme\px_win_wmme.c	/^    int                bytesPerHostInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bytesPerHostOutputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerHostOutputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bytesPerUserInputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerUserInputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bytesPerUserInputBuffer	.\portmixer\px_win_wmme\px_win_wmme.c	/^    int                bytesPerUserInputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::bytesPerUserOutputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerUserOutputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::currentInputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                currentInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::currentInputBuffer	.\portmixer\px_win_wmme\px_win_wmme.c	/^    int                currentInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::currentOutputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                currentOutputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::engineThread	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HANDLE             engineThread;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::engineThreadID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    DWORD              engineThreadID;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::entryCount	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    LARGE_INTEGER      entryCount;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::framesPerHostBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                framesPerHostBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::framesPlayed	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    PaTimestamp        framesPlayed;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::hWaveIn	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HWAVEIN            hWaveIn;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::hWaveIn	.\portmixer\px_win_wmme\px_win_wmme.c	/^    HWAVEIN            hWaveIn;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::hWaveOut	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HWAVEOUT           hWaveOut;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::hWaveOut	.\portmixer\px_win_wmme\px_win_wmme.c	/^    HWAVEOUT           hWaveOut;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::ifInsideCallback	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    BOOL               ifInsideCallback;            \/* Test for reentrancy. *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::inputBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    WAVEHDR           *inputBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::inputBuffers	.\portmixer\px_win_wmme\px_win_wmme.c	/^    WAVEHDR           *inputBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::inverseTicksPerHostBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    double             inverseTicksPerHostBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::lastPosition	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    long               lastPosition;                \/* used to track frames played. *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::numHostBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                numHostBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::outputBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    WAVEHDR           *outputBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::streamLock	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    CRITICAL_SECTION   streamLock;                  \/* Mutext to prevent threads from colliding. *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::streamLockInited	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    INT                streamLockInited;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::timerID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    MMRESULT           timerID;$/;"	m	struct:PaWMMEStreamData	file:	access:public
PaWMMEStreamData::userBuffersPerHostBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                userBuffersPerHostBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
Pa_AbortStream	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_AbortStream(  PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_AbortStream	.\portaudio\pa_common\portaudio.h	/^PaError Pa_AbortStream( PortAudioStream *stream );$/;"	p	signature:( PortAudioStream *stream )
Pa_AllocateDevicePtrs	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaError Pa_AllocateDevicePtrs( void );$/;"	p	file:	signature:( void )
Pa_AllocateDevicePtrs	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaError Pa_AllocateDevicePtrs( void )$/;"	f	file:	signature:( void )
Pa_AudioThreadProc	.\portaudio\pa_unix_oss\pa_unix.c	/^static PaError Pa_AudioThreadProc( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_CallConvertInt16	.\portaudio\pa_common\pa_host.h	/^long Pa_CallConvertInt16( internalPortAudioStream   *past,$/;"	p	signature:( internalPortAudioStream *past, short *nativeInputBuffer, short *nativeOutputBuffer )
Pa_CallConvertInt16	.\portaudio\pa_common\pa_lib.c	/^long Pa_CallConvertInt16( internalPortAudioStream   *past,$/;"	f	signature:( internalPortAudioStream *past, short *nativeInputBuffer, short *nativeOutputBuffer )
Pa_CloseStream	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_CloseStream( PortAudioStream* stream)$/;"	f	signature:( PortAudioStream* stream)
Pa_CloseStream	.\portaudio\pa_common\portaudio.h	/^PaError Pa_CloseStream( PortAudioStream* );$/;"	p	signature:( PortAudioStream* )
Pa_CountDevProc	.\portaudio\pa_win_ds\pa_dsound.c	/^static BOOL CALLBACK Pa_CountDevProc(LPGUID lpGUID,$/;"	f	file:	signature:(LPGUID lpGUID, LPCTSTR lpszDesc, LPCTSTR lpszDrvName, LPVOID lpContext )
Pa_CountDevProc	.\portaudio\pa_win_ds\pa_dsound.c	/^static BOOL CALLBACK Pa_CountDevProc(LPGUID lpGUID,$/;"	p	file:	signature:(LPGUID lpGUID, LPCTSTR lpszDesc, LPCTSTR lpszDrvName, LPVOID lpContext )
Pa_CountDevices	.\portaudio\pa_common\portaudio.h	/^int Pa_CountDevices( void );$/;"	p	signature:( void )
Pa_CountDevices	.\portaudio\pa_mac\pa_mac.c	/^int Pa_CountDevices()$/;"	f
Pa_CountDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^int Pa_CountDevices()$/;"	f
Pa_CountDevices	.\portaudio\pa_unix_oss\pa_unix.c	/^int Pa_CountDevices()$/;"	f
Pa_CountDevices	.\portaudio\pa_win_ds\pa_dsound.c	/^int Pa_CountDevices()$/;"	f
Pa_CountDevices	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^int Pa_CountDevices()$/;"	f
Pa_EndUsageCalculation	.\portaudio\pa_mac_core\pa_mac_core.c	/^static void Pa_EndUsageCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_EndUsageCalculation	.\portaudio\pa_unix_oss\pa_unix.c	/^static void Pa_EndUsageCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_EndUsageCalculation	.\portaudio\pa_win_ds\pa_dsound.c	/^static void Pa_EndUsageCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_EndUsageCalculation	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void Pa_EndUsageCalculation( internalPortAudioStream   *stream )$/;"	f	file:	signature:( internalPortAudioStream *stream )
Pa_EnumProc	.\portaudio\pa_win_ds\pa_dsound.c	/^static BOOL CALLBACK Pa_EnumProc(LPGUID lpGUID,$/;"	f	file:	signature:(LPGUID lpGUID, LPCTSTR lpszDesc, LPCTSTR lpszDrvName, LPVOID lpContext )
Pa_EnumProc	.\portaudio\pa_win_ds\pa_dsound.c	/^static BOOL CALLBACK Pa_EnumProc(LPGUID lpGUID,$/;"	p	file:	signature:(LPGUID lpGUID, LPCTSTR lpszDesc, LPCTSTR lpszDrvName, LPVOID lpContext )
Pa_FlushStream	.\portaudio\pa_unix_oss\pa_unix.h	/^int Pa_FlushStream(int devHandle);$/;"	p	signature:(int devHandle)
Pa_FlushStream	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^PaError Pa_FlushStream(int devHandle)$/;"	f	signature:(int devHandle)
Pa_GetCPULoad	.\portaudio\pa_common\pa_lib.c	/^double Pa_GetCPULoad(  PortAudioStream* stream)$/;"	f	signature:( PortAudioStream* stream)
Pa_GetCPULoad	.\portaudio\pa_common\portaudio.h	/^double Pa_GetCPULoad( PortAudioStream* stream );$/;"	p	signature:( PortAudioStream* stream )
Pa_GetDefaultInputDeviceID	.\portaudio\pa_common\portaudio.h	/^PaDeviceID Pa_GetDefaultInputDeviceID( void );$/;"	p	signature:( void )
Pa_GetDefaultInputDeviceID	.\portaudio\pa_mac\pa_mac.c	/^PaDeviceID Pa_GetDefaultInputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultInputDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaDeviceID Pa_GetDefaultInputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultInputDeviceID	.\portaudio\pa_unix_oss\pa_unix.c	/^PaDeviceID Pa_GetDefaultInputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultInputDeviceID	.\portaudio\pa_win_ds\pa_dsound.c	/^PaDeviceID Pa_GetDefaultInputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultInputDeviceID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaDeviceID Pa_GetDefaultInputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultOutputDeviceID	.\portaudio\pa_common\portaudio.h	/^PaDeviceID Pa_GetDefaultOutputDeviceID( void );$/;"	p	signature:( void )
Pa_GetDefaultOutputDeviceID	.\portaudio\pa_mac\pa_mac.c	/^PaDeviceID Pa_GetDefaultOutputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultOutputDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaDeviceID Pa_GetDefaultOutputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultOutputDeviceID	.\portaudio\pa_unix_oss\pa_unix.c	/^PaDeviceID Pa_GetDefaultOutputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultOutputDeviceID	.\portaudio\pa_win_ds\pa_dsound.c	/^PaDeviceID Pa_GetDefaultOutputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDefaultOutputDeviceID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaDeviceID Pa_GetDefaultOutputDeviceID( void )$/;"	f	signature:( void )
Pa_GetDeviceInfo	.\portaudio\pa_common\portaudio.h	/^const PaDeviceInfo* Pa_GetDeviceInfo( PaDeviceID device );$/;"	p	signature:( PaDeviceID device )
Pa_GetDeviceInfo	.\portaudio\pa_mac\pa_mac.c	/^const PaDeviceInfo* Pa_GetDeviceInfo( PaDeviceID id )$/;"	f	signature:( PaDeviceID id )
Pa_GetDeviceInfo	.\portaudio\pa_mac_core\pa_mac_core.c	/^const PaDeviceInfo* Pa_GetDeviceInfo( PaDeviceID id )$/;"	f	signature:( PaDeviceID id )
Pa_GetDeviceInfo	.\portaudio\pa_unix_oss\pa_unix.c	/^const PaDeviceInfo* Pa_GetDeviceInfo( PaDeviceID id )$/;"	f	signature:( PaDeviceID id )
Pa_GetDeviceInfo	.\portaudio\pa_win_ds\pa_dsound.c	/^const PaDeviceInfo* Pa_GetDeviceInfo( PaDeviceID id )$/;"	f	signature:( PaDeviceID id )
Pa_GetDeviceInfo	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^const PaDeviceInfo* Pa_GetDeviceInfo( PaDeviceID id )$/;"	f	signature:( PaDeviceID id )
Pa_GetErrorText	.\portaudio\pa_common\pa_lib.c	/^const char *Pa_GetErrorText( PaError errnum )$/;"	f	signature:( PaError errnum )
Pa_GetErrorText	.\portaudio\pa_common\portaudio.h	/^const char *Pa_GetErrorText( PaError errnum );$/;"	p	signature:( PaError errnum )
Pa_GetHostError	.\portaudio\pa_common\portaudio.h	/^long Pa_GetHostError( void );$/;"	p	signature:( void )
Pa_GetHostError	.\portaudio\pa_mac\pa_mac.c	/^int32 Pa_GetHostError( void )$/;"	f	signature:( void )
Pa_GetHostError	.\portaudio\pa_mac_core\pa_mac_core.c	/^long Pa_GetHostError()$/;"	f
Pa_GetHostError	.\portaudio\pa_unix_oss\pa_unix.c	/^long Pa_GetHostError( void )$/;"	f	signature:( void )
Pa_GetHostError	.\portaudio\pa_win_ds\pa_dsound.c	/^long Pa_GetHostError()$/;"	f
Pa_GetHostError	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^long Pa_GetHostError()$/;"	f
Pa_GetInternalDevice	.\portaudio\pa_unix_oss\pa_unix.c	/^internalPortAudioDevice *Pa_GetInternalDevice( PaDeviceID id )$/;"	f	signature:( PaDeviceID id )
Pa_GetInternalDevice	.\portaudio\pa_unix_oss\pa_unix.h	/^internalPortAudioDevice *Pa_GetInternalDevice( PaDeviceID id );$/;"	p	signature:( PaDeviceID id )
Pa_GetInternalDevice	.\portaudio\pa_win_ds\pa_dsound.c	/^static internalPortAudioDevice *Pa_GetInternalDevice( PaDeviceID id )$/;"	f	file:	signature:( PaDeviceID id )
Pa_GetInternalDevice	.\portaudio\pa_win_ds\pa_dsound.c	/^static internalPortAudioDevice *Pa_GetInternalDevice( PaDeviceID id );$/;"	p	file:	signature:( PaDeviceID id )
Pa_GetMinNumBuffers	.\portaudio\pa_common\portaudio.h	/^int Pa_GetMinNumBuffers( int framesPerBuffer, double sampleRate );$/;"	p	signature:( int framesPerBuffer, double sampleRate )
Pa_GetMinNumBuffers	.\portaudio\pa_mac\pa_mac.c	/^int Pa_GetMinNumBuffers( int framesPerUserBuffer, double sampleRate )$/;"	f	signature:( int framesPerUserBuffer, double sampleRate )
Pa_GetMinNumBuffers	.\portaudio\pa_mac_core\pa_mac_core.c	/^int Pa_GetMinNumBuffers( int framesPerBuffer, double framesPerSecond )$/;"	f	signature:( int framesPerBuffer, double framesPerSecond )
Pa_GetMinNumBuffers	.\portaudio\pa_unix_oss\pa_unix.c	/^int Pa_GetMinNumBuffers( int framesPerBuffer, double framesPerSecond )$/;"	f	signature:( int framesPerBuffer, double framesPerSecond )
Pa_GetMinNumBuffers	.\portaudio\pa_win_ds\pa_dsound.c	/^int Pa_GetMinNumBuffers( int framesPerBuffer, double sampleRate )$/;"	f	signature:( int framesPerBuffer, double sampleRate )
Pa_GetMinNumBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^int Pa_GetMinNumBuffers( int framesPerBuffer, double sampleRate )$/;"	f	signature:( int framesPerBuffer, double sampleRate )
Pa_GetSampleSize	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_GetSampleSize( PaSampleFormat format )$/;"	f	signature:( PaSampleFormat format )
Pa_GetSampleSize	.\portaudio\pa_common\portaudio.h	/^PaError Pa_GetSampleSize( PaSampleFormat format );$/;"	p	signature:( PaSampleFormat format )
Pa_Initialize	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_Initialize( void )$/;"	f	signature:( void )
Pa_Initialize	.\portaudio\pa_common\portaudio.h	/^PaError Pa_Initialize( void );$/;"	p	signature:( void )
Pa_InitializeCpuUsageScalar	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void Pa_InitializeCpuUsageScalar( internalPortAudioStream   *stream )$/;"	f	file:	signature:( internalPortAudioStream *stream )
Pa_InitializeNumDevices	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void Pa_InitializeNumDevices( void )$/;"	f	file:	signature:( void )
Pa_InitializeNumDevices	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^void Pa_InitializeNumDevices( void );$/;"	p	file:	signature:( void )
Pa_KillStream	.\portaudio\pa_common\pa_lib.c	/^static PaError Pa_KillStream(  PortAudioStream *stream, int abort )$/;"	f	file:	signature:( PortAudioStream *stream, int abort )
Pa_KillStream	.\portaudio\pa_common\pa_lib.c	/^static PaError Pa_KillStream(  PortAudioStream *stream, int abort );$/;"	p	file:	signature:( PortAudioStream *stream, int abort )
Pa_MaybeQueryDevices	.\portaudio\pa_unix_oss\pa_unix.c	/^static PaError Pa_MaybeQueryDevices( void )$/;"	f	file:	signature:( void )
Pa_MaybeQueryDevices	.\portaudio\pa_win_ds\pa_dsound.c	/^static PaError Pa_MaybeQueryDevices( void )$/;"	f	file:	signature:( void )
Pa_OpenDefaultStream	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_OpenDefaultStream( PortAudioStream** stream,$/;"	f	signature:( PortAudioStream** stream, int numInputChannels, int numOutputChannels, PaSampleFormat sampleFormat, double sampleRate, unsigned long framesPerBuffer, unsigned long numberOfBuffers, PortAudioCallback *callback, void *userData )
Pa_OpenDefaultStream	.\portaudio\pa_common\portaudio.h	/^PaError Pa_OpenDefaultStream( PortAudioStream** stream,$/;"	p	signature:( PortAudioStream** stream, int numInputChannels, int numOutputChannels, PaSampleFormat sampleFormat, double sampleRate, unsigned long framesPerBuffer, unsigned long numberOfBuffers, PortAudioCallback *callback, void *userData )
Pa_OpenStream	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_OpenStream($/;"	f	signature:( PortAudioStream** streamPtrPtr, PaDeviceID inputDeviceID, int numInputChannels, PaSampleFormat inputSampleFormat, void *inputDriverInfo, PaDeviceID outputDeviceID, int numOutputChannels, PaSampleFormat outputSampleFormat, void *outputDriverInfo, double sampleRate, unsigned long framesPerBuffer, unsigned long numberOfBuffers, unsigned long streamFlags, PortAudioCallback *callback, void *userData )
Pa_OpenStream	.\portaudio\pa_common\portaudio.h	/^PaError Pa_OpenStream( PortAudioStream** stream,$/;"	p	signature:( PortAudioStream** stream, PaDeviceID inputDevice, int numInputChannels, PaSampleFormat inputSampleFormat, void *inputDriverInfo, PaDeviceID outputDevice, int numOutputChannels, PaSampleFormat outputSampleFormat, void *outputDriverInfo, double sampleRate, unsigned long framesPerBuffer, unsigned long numberOfBuffers, PaStreamFlags streamFlags, PortAudioCallback *callback, void *userData )
Pa_QueryDevice	.\portaudio\pa_unix_oss\pa_unix.h	/^PaError Pa_QueryDevice( const char *deviceName, internalPortAudioDevice *pad );$/;"	p	signature:( const char *deviceName, internalPortAudioDevice *pad )
Pa_QueryDevice	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^PaError Pa_QueryDevice( const char *deviceName, internalPortAudioDevice *pad )$/;"	f	signature:( const char *deviceName, internalPortAudioDevice *pad )
Pa_QueryDevices	.\portaudio\pa_unix_oss\pa_unix.c	/^PaError Pa_QueryDevices( void )$/;"	f	signature:( void )
Pa_QueryDevices	.\portaudio\pa_unix_oss\pa_unix.h	/^PaError Pa_QueryDevices( void );$/;"	p	signature:( void )
Pa_QueryDevices	.\portaudio\pa_win_ds\pa_dsound.c	/^static PaError Pa_QueryDevices( void )$/;"	f	file:	signature:( void )
Pa_QueryDevices	.\portaudio\pa_win_ds\pa_dsound.c	/^static Pa_QueryDevices( void );$/;"	p	file:	signature:( void )
Pa_SetLatency	.\portaudio\pa_unix_oss\pa_unix.h	/^void Pa_SetLatency( int devHandle, int numBuffers, int framesPerBuffer, int channelsPerFrame  );$/;"	p	signature:( int devHandle, int numBuffers, int framesPerBuffer, int channelsPerFrame )
Pa_SetLatency	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^void Pa_SetLatency( int devHandle, int numBuffers, int framesPerBuffer, int channelsPerFrame  )$/;"	f	signature:( int devHandle, int numBuffers, int framesPerBuffer, int channelsPerFrame )
Pa_SetupDeviceFormat	.\portaudio\pa_unix_oss\pa_unix.h	/^PaError Pa_SetupDeviceFormat( int devHandle, int numChannels, int sampleRate );$/;"	p	signature:( int devHandle, int numChannels, int sampleRate )
Pa_SetupDeviceFormat	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^PaError Pa_SetupDeviceFormat( int devHandle, int numChannels, int sampleRate )$/;"	f	signature:( int devHandle, int numChannels, int sampleRate )
Pa_SetupInputDeviceFormat	.\portaudio\pa_unix_oss\pa_unix.h	/^PaError Pa_SetupInputDeviceFormat( int devHandle, int numChannels, int sampleRate );$/;"	p	signature:( int devHandle, int numChannels, int sampleRate )
Pa_SetupInputDeviceFormat	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^PaError Pa_SetupInputDeviceFormat( int devHandle, int numChannels, int sampleRate )$/;"	f	signature:( int devHandle, int numChannels, int sampleRate )
Pa_SetupOutputDeviceFormat	.\portaudio\pa_unix_oss\pa_unix.h	/^PaError Pa_SetupOutputDeviceFormat( int devHandle, int numChannels, int sampleRate );$/;"	p	signature:( int devHandle, int numChannels, int sampleRate )
Pa_SetupOutputDeviceFormat	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^PaError Pa_SetupOutputDeviceFormat( int devHandle, int numChannels, int sampleRate )$/;"	f	signature:( int devHandle, int numChannels, int sampleRate )
Pa_Sleep	.\portaudio\pa_common\portaudio.h	/^void Pa_Sleep( long msec );$/;"	p	signature:( long msec )
Pa_Sleep	.\portaudio\pa_mac\pa_mac.c	/^void Pa_Sleep( int32 msec )$/;"	f	signature:( int32 msec )
Pa_Sleep	.\portaudio\pa_mac_core\pa_mac_core.c	/^void Pa_Sleep( long msec )$/;"	f	signature:( long msec )
Pa_Sleep	.\portaudio\pa_unix_oss\pa_unix.c	/^void Pa_Sleep( long msec )$/;"	f	signature:( long msec )
Pa_Sleep	.\portaudio\pa_win_ds\pa_dsound.c	/^void Pa_Sleep( long msec )$/;"	f	signature:( long msec )
Pa_Sleep	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^void Pa_Sleep( long msec )$/;"	f	signature:( long msec )
Pa_StartStream	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_StartStream( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_StartStream	.\portaudio\pa_common\portaudio.h	/^PaError Pa_StartStream( PortAudioStream *stream );$/;"	p	signature:( PortAudioStream *stream )
Pa_StartUsageCalculation	.\portaudio\pa_mac_core\pa_mac_core.c	/^static void Pa_StartUsageCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_StartUsageCalculation	.\portaudio\pa_unix_oss\pa_unix.c	/^static void Pa_StartUsageCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_StartUsageCalculation	.\portaudio\pa_win_ds\pa_dsound.c	/^static void Pa_StartUsageCalculation( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_StartUsageCalculation	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void Pa_StartUsageCalculation( internalPortAudioStream   *stream )$/;"	f	file:	signature:( internalPortAudioStream *stream )
Pa_StopStream	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_StopStream(  PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_StopStream	.\portaudio\pa_common\portaudio.h	/^PaError Pa_StopStream( PortAudioStream *stream );$/;"	p	signature:( PortAudioStream *stream )
Pa_StreamActive	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_StreamActive( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_StreamActive	.\portaudio\pa_common\portaudio.h	/^PaError Pa_StreamActive( PortAudioStream *stream );$/;"	p	signature:( PortAudioStream *stream )
Pa_StreamTime	.\portaudio\pa_common\portaudio.h	/^PaTimestamp Pa_StreamTime( PortAudioStream *stream );$/;"	p	signature:( PortAudioStream *stream )
Pa_StreamTime	.\portaudio\pa_mac\pa_mac.c	/^PaTimestamp Pa_StreamTime( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_StreamTime	.\portaudio\pa_mac_core\pa_mac_core.c	/^PaTimestamp Pa_StreamTime( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_StreamTime	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^PaTimestamp Pa_StreamTime( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_StreamTime	.\portaudio\pa_win_ds\pa_dsound.c	/^PaTimestamp Pa_StreamTime( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_StreamTime	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^PaTimestamp Pa_StreamTime( PortAudioStream *stream )$/;"	f	signature:( PortAudioStream *stream )
Pa_Terminate	.\portaudio\pa_common\pa_lib.c	/^PaError Pa_Terminate( void )$/;"	f	signature:( void )
Pa_Terminate	.\portaudio\pa_common\portaudio.h	/^PaError Pa_Terminate( void );$/;"	p	signature:( void )
Pa_TimeSlice	.\portaudio\pa_win_ds\pa_dsound.c	/^static PaError Pa_TimeSlice( internalPortAudioStream   *past )$/;"	f	file:	signature:( internalPortAudioStream *past )
Pa_TimeSlice	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaError Pa_TimeSlice( internalPortAudioStream *stream )$/;"	f	file:	signature:( internalPortAudioStream *stream )
Pa_TimerCallback	.\portaudio\pa_win_ds\pa_dsound.c	/^static void CALLBACK Pa_TimerCallback(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)$/;"	f	file:	signature:(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)
Pa_TimerCallback	.\portaudio\pa_win_ds\pa_dsound.c	/^static void CALLBACK Pa_TimerCallback(UINT uID, UINT uMsg,$/;"	p	file:	signature:(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)
Pa_TimerCallback	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void CALLBACK Pa_TimerCallback(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)$/;"	f	file:	signature:(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)
Pa_TimerCallback	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static void CALLBACK Pa_TimerCallback(UINT uID, UINT uMsg,$/;"	p	file:	signature:(UINT uID, UINT uMsg, DWORD dwUser, DWORD dw1, DWORD dw2)
Pa_UpdateStreamTime	.\portaudio\pa_unix_oss\pa_unix.h	/^void Pa_UpdateStreamTime(PaHostSoundControl *pahsc);$/;"	p	signature:(PaHostSoundControl *pahsc)
Pa_UpdateStreamTime	.\portaudio\pa_unix_oss\pa_unix_oss.c	/^void Pa_UpdateStreamTime(PaHostSoundControl *pahsc)$/;"	f	signature:(PaHostSoundControl *pahsc)
PinkNoise	.\pa_tests\patest_pink.c	/^PinkNoise;$/;"	t	typeref:struct:__anon12	file:
PinkNoise	.\portaudio\pa_tests\patest_pink.c	/^PinkNoise;$/;"	t	typeref:struct:__anon38	file:
PlaySine	.\pa_tests\patest_clip.c	/^PaError PlaySine( paTestData *data, unsigned long flags, float amplitude )$/;"	f	signature:( paTestData *data, unsigned long flags, float amplitude )
PlaySine	.\pa_tests\patest_clip.c	/^PaError PlaySine( paTestData *data, unsigned long flags, float amplitude );$/;"	p	file:	signature:( paTestData *data, unsigned long flags, float amplitude )
PlaySine	.\pa_tests\patest_dither.c	/^PaError PlaySine( paTestData *data, PaStreamFlags flags, float amplitude )$/;"	f	signature:( paTestData *data, PaStreamFlags flags, float amplitude )
PlaySine	.\pa_tests\patest_dither.c	/^PaError PlaySine( paTestData *data, PaStreamFlags flags, float amplitude );$/;"	p	file:	signature:( paTestData *data, PaStreamFlags flags, float amplitude )
PlaySine	.\portaudio\pa_tests\patest_clip.c	/^PaError PlaySine( paTestData *data, unsigned long flags, float amplitude )$/;"	f	signature:( paTestData *data, unsigned long flags, float amplitude )
PlaySine	.\portaudio\pa_tests\patest_clip.c	/^PaError PlaySine( paTestData *data, unsigned long flags, float amplitude );$/;"	p	file:	signature:( paTestData *data, unsigned long flags, float amplitude )
PlaySine	.\portaudio\pa_tests\patest_dither.c	/^PaError PlaySine( paTestData *data, PaStreamFlags flags, float amplitude )$/;"	f	signature:( paTestData *data, PaStreamFlags flags, float amplitude )
PlaySine	.\portaudio\pa_tests\patest_dither.c	/^PaError PlaySine( paTestData *data, PaStreamFlags flags, float amplitude );$/;"	p	file:	signature:( paTestData *data, PaStreamFlags flags, float amplitude )
PortAudioCallback	.\portaudio\pa_common\portaudio.h	/^typedef int (PortAudioCallback)($/;"	t
PortAudioConverter	.\portaudio\pa_common\pa_host.h	/^typedef void (PortAudioConverter)($/;"	t
PortAudioStream	.\portaudio\pa_common\portaudio.h	/^typedef void PortAudioStream;$/;"	t
PrintDeviceInfo	.\portaudio\pa_mac\pa_mac.c	559;"	d	file:
PxBalance	.\portmixer\px_common\portmixer.h	/^typedef float PxBalance; \/* -1.0 (left) --> 1.0 (right) *\/$/;"	t
PxDevice	.\portmixer\px_unix_oss\px_unix_oss.c	/^char PxDevice[20] = "\/dev\/mixerX";$/;"	v
PxDevices	.\portmixer\px_unix_oss\px_unix_oss.c	/^int PxDevices[10];$/;"	v
PxInfo	.\portmixer\px_mac\px_mac.c	/^typedef struct PxInfo$/;"	s	file:
PxInfo	.\portmixer\px_mac\px_mac.c	/^} PxInfo;$/;"	t	typeref:struct:PxInfo	file:
PxInfo	.\portmixer\px_mac_core\px_mac_core.c	/^typedef struct PxInfo$/;"	s	file:
PxInfo	.\portmixer\px_mac_core\px_mac_core.c	/^} PxInfo;$/;"	t	typeref:struct:PxInfo	file:
PxInfo	.\portmixer\px_none\px_none.c	/^typedef struct PxInfo$/;"	s	file:
PxInfo	.\portmixer\px_none\px_none.c	/^} PxInfo;$/;"	t	typeref:struct:PxInfo	file:
PxInfo	.\portmixer\px_unix_oss\px_unix_oss.c	/^typedef struct PxInfo$/;"	s	file:
PxInfo	.\portmixer\px_unix_oss\px_unix_oss.c	/^} PxInfo;$/;"	t	typeref:struct:PxInfo	file:
PxInfo	.\portmixer\px_win_wmme\px_win_wmme.c	/^typedef struct PxInfo$/;"	s	file:
PxInfo	.\portmixer\px_win_wmme\px_win_wmme.c	/^} PxInfo;$/;"	t	typeref:struct:PxInfo	file:
PxInfo::dummy	.\portmixer\px_none\px_none.c	/^  int dummy;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::fd	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int fd;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::hInputMixer	.\portmixer\px_win_wmme\px_win_wmme.c	/^   HMIXEROBJ   hInputMixer;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::hOutputMixer	.\portmixer\px_win_wmme\px_win_wmme.c	/^   HMIXEROBJ   hOutputMixer;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::index	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int index;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::input	.\portmixer\px_mac\px_mac.c	/^   SPB           *input;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::input	.\portmixer\px_mac_core\px_mac_core.c	/^   AudioDeviceID   input;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::inputRefNum	.\portmixer\px_mac\px_mac.c	/^   int32          inputRefNum;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::muxID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD       muxID;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::numInputs	.\portmixer\px_win_wmme\px_win_wmme.c	/^   int         numInputs;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::numSources	.\portmixer\px_mac\px_mac.c	/^   int32          numSources;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::num_out	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int num_out;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::num_rec	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int num_rec;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::output	.\portmixer\px_mac\px_mac.c	/^   SndChannelPtr  output;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::output	.\portmixer\px_mac_core\px_mac_core.c	/^   AudioDeviceID   output;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::outs	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int outs[SOUND_MIXER_NRDEVICES];$/;"	m	struct:PxInfo	file:	access:public
PxInfo::recs	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int recs[SOUND_MIXER_NRDEVICES];$/;"	m	struct:PxInfo	file:	access:public
PxInfo::sources	.\portmixer\px_mac\px_mac.c	/^   PxSource      *sources;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::speakerID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD       speakerID;$/;"	m	struct:PxInfo	file:	access:public
PxInfo::src	.\portmixer\px_win_wmme\px_win_wmme.c	/^   PxSrcInfo   src[32];$/;"	m	struct:PxInfo	file:	access:public
PxInfo::waveID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD       waveID;$/;"	m	struct:PxInfo	file:	access:public
PxMixer	.\portmixer\px_common\portmixer.h	/^typedef void PxMixer;$/;"	t
PxNumDevices	.\portmixer\px_unix_oss\px_unix_oss.c	/^int PxNumDevices = 0;$/;"	v
PxSource	.\portmixer\px_mac\px_mac.c	/^typedef struct PxSource$/;"	s	file:
PxSource	.\portmixer\px_mac\px_mac.c	/^} PxSource;$/;"	t	typeref:struct:PxSource	file:
PxSource::name	.\portmixer\px_mac\px_mac.c	/^   char name[256];$/;"	m	struct:PxSource	file:	access:public
PxSrcInfo	.\portmixer\px_win_wmme\px_win_wmme.c	/^typedef struct PxSrcInfo$/;"	s	file:
PxSrcInfo	.\portmixer\px_win_wmme\px_win_wmme.c	/^} PxSrcInfo;$/;"	t	typeref:struct:PxSrcInfo	file:
PxSrcInfo::controlID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD controlID;$/;"	m	struct:PxSrcInfo	file:	access:public
PxSrcInfo::lineID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD lineID;$/;"	m	struct:PxSrcInfo	file:	access:public
PxSrcInfo::name	.\portmixer\px_win_wmme\px_win_wmme.c	/^   char  name[256];$/;"	m	struct:PxSrcInfo	file:	access:public
PxVolume	.\portmixer\px_common\portmixer.h	/^typedef float PxVolume; \/* 0.0 (min) --> 1.0 (max) *\/$/;"	t
Px_CloseMixer	.\portmixer\px_common\portmixer.h	/^void Px_CloseMixer(PxMixer *mixer);$/;"	p	signature:(PxMixer *mixer)
Px_CloseMixer	.\portmixer\px_mac\px_mac.c	/^void Px_CloseMixer(PxMixer *mixer)$/;"	f	signature:(PxMixer *mixer)
Px_CloseMixer	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_CloseMixer(PxMixer *mixer)$/;"	f	signature:(PxMixer *mixer)
Px_CloseMixer	.\portmixer\px_none\px_none.c	/^void Px_CloseMixer(PxMixer *mixer)$/;"	f	signature:(PxMixer *mixer)
Px_CloseMixer	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_CloseMixer(PxMixer *mixer)$/;"	f	signature:(PxMixer *mixer)
Px_CloseMixer	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_CloseMixer(PxMixer *mixer)$/;"	f	signature:(PxMixer *mixer)
Px_GetCurrentInputSource	.\portmixer\px_common\portmixer.h	/^int Px_GetCurrentInputSource( PxMixer *mixer ); \/* may return -1 == none *\/$/;"	p	signature:( PxMixer *mixer )
Px_GetCurrentInputSource	.\portmixer\px_mac\px_mac.c	/^int Px_GetCurrentInputSource( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetCurrentInputSource	.\portmixer\px_mac_core\px_mac_core.c	/^int Px_GetCurrentInputSource( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetCurrentInputSource	.\portmixer\px_none\px_none.c	/^int Px_GetCurrentInputSource( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetCurrentInputSource	.\portmixer\px_unix_oss\px_unix_oss.c	/^int Px_GetCurrentInputSource( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetCurrentInputSource	.\portmixer\px_win_wmme\px_win_wmme.c	/^int Px_GetCurrentInputSource( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetInputSourceName	.\portmixer\px_common\portmixer.h	/^const char *Px_GetInputSourceName( PxMixer *mixer, int i);$/;"	p	signature:( PxMixer *mixer, int i)
Px_GetInputSourceName	.\portmixer\px_mac\px_mac.c	/^const char *Px_GetInputSourceName( PxMixer *mixer, int i)$/;"	f	signature:( PxMixer *mixer, int i)
Px_GetInputSourceName	.\portmixer\px_mac_core\px_mac_core.c	/^const char *Px_GetInputSourceName( PxMixer *mixer, int i)$/;"	f	signature:( PxMixer *mixer, int i)
Px_GetInputSourceName	.\portmixer\px_none\px_none.c	/^const char *Px_GetInputSourceName( PxMixer *mixer, int i)$/;"	f	signature:( PxMixer *mixer, int i)
Px_GetInputSourceName	.\portmixer\px_unix_oss\px_unix_oss.c	/^const char *Px_GetInputSourceName( PxMixer *mixer, int i)$/;"	f	signature:( PxMixer *mixer, int i)
Px_GetInputSourceName	.\portmixer\px_win_wmme\px_win_wmme.c	/^const char *Px_GetInputSourceName( PxMixer *mixer, int i)$/;"	f	signature:( PxMixer *mixer, int i)
Px_GetInputVolume	.\portmixer\px_common\portmixer.h	/^PxVolume Px_GetInputVolume( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_GetInputVolume	.\portmixer\px_mac\px_mac.c	/^PxVolume Px_GetInputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetInputVolume	.\portmixer\px_mac_core\px_mac_core.c	/^PxVolume Px_GetInputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetInputVolume	.\portmixer\px_none\px_none.c	/^PxVolume Px_GetInputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetInputVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxVolume Px_GetInputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetInputVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^PxVolume Px_GetInputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetMasterVolume	.\portmixer\px_common\portmixer.h	/^PxVolume Px_GetMasterVolume( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_GetMasterVolume	.\portmixer\px_mac\px_mac.c	/^PxVolume Px_GetMasterVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetMasterVolume	.\portmixer\px_mac_core\px_mac_core.c	/^PxVolume Px_GetMasterVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetMasterVolume	.\portmixer\px_none\px_none.c	/^PxVolume Px_GetMasterVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetMasterVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxVolume Px_GetMasterVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetMasterVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^PxVolume Px_GetMasterVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetMixerName	.\portmixer\px_common\portmixer.h	/^const char *Px_GetMixerName( void *pa_stream, int i );$/;"	p	signature:( void *pa_stream, int i )
Px_GetMixerName	.\portmixer\px_mac\px_mac.c	/^const char *Px_GetMixerName( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_GetMixerName	.\portmixer\px_mac_core\px_mac_core.c	/^const char *Px_GetMixerName( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_GetMixerName	.\portmixer\px_none\px_none.c	/^const char *Px_GetMixerName( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_GetMixerName	.\portmixer\px_unix_oss\px_unix_oss.c	/^const char *Px_GetMixerName( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_GetMixerName	.\portmixer\px_win_wmme\px_win_wmme.c	/^const char *Px_GetMixerName( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_GetNumInputSources	.\portmixer\px_common\portmixer.h	/^int Px_GetNumInputSources( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_GetNumInputSources	.\portmixer\px_mac\px_mac.c	/^int Px_GetNumInputSources( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumInputSources	.\portmixer\px_mac_core\px_mac_core.c	/^int Px_GetNumInputSources( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumInputSources	.\portmixer\px_none\px_none.c	/^int Px_GetNumInputSources( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumInputSources	.\portmixer\px_unix_oss\px_unix_oss.c	/^int Px_GetNumInputSources( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumInputSources	.\portmixer\px_win_wmme\px_win_wmme.c	/^int Px_GetNumInputSources( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumMixers	.\portmixer\px_common\portmixer.h	/^int Px_GetNumMixers( void *pa_stream );$/;"	p	signature:( void *pa_stream )
Px_GetNumMixers	.\portmixer\px_mac\px_mac.c	/^int Px_GetNumMixers( void *pa_stream )$/;"	f	signature:( void *pa_stream )
Px_GetNumMixers	.\portmixer\px_mac_core\px_mac_core.c	/^int Px_GetNumMixers( void *pa_stream )$/;"	f	signature:( void *pa_stream )
Px_GetNumMixers	.\portmixer\px_none\px_none.c	/^int Px_GetNumMixers( void *pa_stream )$/;"	f	signature:( void *pa_stream )
Px_GetNumMixers	.\portmixer\px_unix_oss\px_unix_oss.c	/^int Px_GetNumMixers( void *pa_stream )$/;"	f	signature:( void *pa_stream )
Px_GetNumMixers	.\portmixer\px_win_wmme\px_win_wmme.c	/^int Px_GetNumMixers( void *pa_stream )$/;"	f	signature:( void *pa_stream )
Px_GetNumOutputVolumes	.\portmixer\px_common\portmixer.h	/^int Px_GetNumOutputVolumes( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_GetNumOutputVolumes	.\portmixer\px_mac\px_mac.c	/^int Px_GetNumOutputVolumes( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumOutputVolumes	.\portmixer\px_mac_core\px_mac_core.c	/^int Px_GetNumOutputVolumes( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumOutputVolumes	.\portmixer\px_none\px_none.c	/^int Px_GetNumOutputVolumes( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumOutputVolumes	.\portmixer\px_unix_oss\px_unix_oss.c	/^int Px_GetNumOutputVolumes( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetNumOutputVolumes	.\portmixer\px_win_wmme\px_win_wmme.c	/^int Px_GetNumOutputVolumes( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetOutputBalance	.\portmixer\px_common\portmixer.h	/^PxBalance Px_GetOutputBalance( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_GetOutputBalance	.\portmixer\px_mac\px_mac.c	/^PxBalance Px_GetOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetOutputBalance	.\portmixer\px_mac_core\px_mac_core.c	/^PxBalance Px_GetOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetOutputBalance	.\portmixer\px_none\px_none.c	/^PxBalance Px_GetOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetOutputBalance	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxBalance Px_GetOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetOutputBalance	.\portmixer\px_win_wmme\px_win_wmme.c	/^PxBalance Px_GetOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetOutputVolume	.\portmixer\px_common\portmixer.h	/^PxVolume Px_GetOutputVolume( PxMixer *mixer, int i );$/;"	p	signature:( PxMixer *mixer, int i )
Px_GetOutputVolume	.\portmixer\px_mac\px_mac.c	/^PxVolume Px_GetOutputVolume( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolume	.\portmixer\px_mac_core\px_mac_core.c	/^PxVolume Px_GetOutputVolume( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolume	.\portmixer\px_none\px_none.c	/^PxVolume Px_GetOutputVolume( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxVolume Px_GetOutputVolume( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^PxVolume Px_GetOutputVolume( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolumeName	.\portmixer\px_common\portmixer.h	/^const char *Px_GetOutputVolumeName( PxMixer *mixer, int i );$/;"	p	signature:( PxMixer *mixer, int i )
Px_GetOutputVolumeName	.\portmixer\px_mac\px_mac.c	/^const char *Px_GetOutputVolumeName( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolumeName	.\portmixer\px_mac_core\px_mac_core.c	/^const char *Px_GetOutputVolumeName( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolumeName	.\portmixer\px_none\px_none.c	/^const char *Px_GetOutputVolumeName( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolumeName	.\portmixer\px_unix_oss\px_unix_oss.c	/^const char *Px_GetOutputVolumeName( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetOutputVolumeName	.\portmixer\px_win_wmme\px_win_wmme.c	/^const char *Px_GetOutputVolumeName( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_GetPCMOutputVolume	.\portmixer\px_common\portmixer.h	/^PxVolume Px_GetPCMOutputVolume( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_GetPCMOutputVolume	.\portmixer\px_mac\px_mac.c	/^PxVolume Px_GetPCMOutputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPCMOutputVolume	.\portmixer\px_mac_core\px_mac_core.c	/^PxVolume Px_GetPCMOutputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPCMOutputVolume	.\portmixer\px_none\px_none.c	/^PxVolume Px_GetPCMOutputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPCMOutputVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxVolume Px_GetPCMOutputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPCMOutputVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^PxVolume Px_GetPCMOutputVolume( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPlaythrough	.\portmixer\px_common\portmixer.h	/^PxVolume Px_GetPlaythrough( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_GetPlaythrough	.\portmixer\px_mac\px_mac.c	/^PxVolume Px_GetPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPlaythrough	.\portmixer\px_mac_core\px_mac_core.c	/^PxVolume Px_GetPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPlaythrough	.\portmixer\px_none\px_none.c	/^PxBalance Px_GetPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPlaythrough	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxVolume Px_GetPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetPlaythrough	.\portmixer\px_win_wmme\px_win_wmme.c	/^PxVolume Px_GetPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_GetVolume	.\portmixer\px_mac_core\px_mac_core.c	/^static PxVolume Px_GetVolume(AudioDeviceID device, Boolean isInput)$/;"	f	file:	signature:(AudioDeviceID device, Boolean isInput)
Px_OpenMixer	.\portmixer\px_common\portmixer.h	/^PxMixer *Px_OpenMixer( void *pa_stream, int i );$/;"	p	signature:( void *pa_stream, int i )
Px_OpenMixer	.\portmixer\px_mac\px_mac.c	/^PxMixer *Px_OpenMixer( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_OpenMixer	.\portmixer\px_mac_core\px_mac_core.c	/^PxMixer *Px_OpenMixer( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_OpenMixer	.\portmixer\px_none\px_none.c	/^PxMixer *Px_OpenMixer( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_OpenMixer	.\portmixer\px_unix_oss\px_unix_oss.c	/^PxMixer *Px_OpenMixer( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_OpenMixer	.\portmixer\px_win_wmme\px_win_wmme.c	/^PxMixer *Px_OpenMixer( void *pa_stream, int index )$/;"	f	signature:( void *pa_stream, int index )
Px_SetCurrentInputSource	.\portmixer\px_common\portmixer.h	/^void Px_SetCurrentInputSource( PxMixer *mixer, int i );$/;"	p	signature:( PxMixer *mixer, int i )
Px_SetCurrentInputSource	.\portmixer\px_mac\px_mac.c	/^void Px_SetCurrentInputSource( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_SetCurrentInputSource	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_SetCurrentInputSource( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_SetCurrentInputSource	.\portmixer\px_none\px_none.c	/^void Px_SetCurrentInputSource( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_SetCurrentInputSource	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_SetCurrentInputSource( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_SetCurrentInputSource	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_SetCurrentInputSource( PxMixer *mixer, int i )$/;"	f	signature:( PxMixer *mixer, int i )
Px_SetInputVolume	.\portmixer\px_common\portmixer.h	/^void Px_SetInputVolume( PxMixer *mixer, PxVolume volume );$/;"	p	signature:( PxMixer *mixer, PxVolume volume )
Px_SetInputVolume	.\portmixer\px_mac\px_mac.c	/^void Px_SetInputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetInputVolume	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_SetInputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetInputVolume	.\portmixer\px_none\px_none.c	/^void Px_SetInputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetInputVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_SetInputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetInputVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_SetInputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetMasterVolume	.\portmixer\px_common\portmixer.h	/^void Px_SetMasterVolume( PxMixer *mixer, PxVolume volume );$/;"	p	signature:( PxMixer *mixer, PxVolume volume )
Px_SetMasterVolume	.\portmixer\px_mac\px_mac.c	/^void Px_SetMasterVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetMasterVolume	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_SetMasterVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetMasterVolume	.\portmixer\px_none\px_none.c	/^void Px_SetMasterVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetMasterVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_SetMasterVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetMasterVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_SetMasterVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetOutputBalance	.\portmixer\px_common\portmixer.h	/^void Px_SetOutputBalance( PxMixer *mixer, PxBalance balance );$/;"	p	signature:( PxMixer *mixer, PxBalance balance )
Px_SetOutputBalance	.\portmixer\px_mac\px_mac.c	/^void Px_SetOutputBalance( PxMixer *mixer, PxBalance balance )$/;"	f	signature:( PxMixer *mixer, PxBalance balance )
Px_SetOutputBalance	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_SetOutputBalance( PxMixer *mixer, PxBalance balance )$/;"	f	signature:( PxMixer *mixer, PxBalance balance )
Px_SetOutputBalance	.\portmixer\px_none\px_none.c	/^void Px_SetOutputBalance( PxMixer *mixer, PxBalance balance )$/;"	f	signature:( PxMixer *mixer, PxBalance balance )
Px_SetOutputBalance	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_SetOutputBalance( PxMixer *mixer, PxBalance balance )$/;"	f	signature:( PxMixer *mixer, PxBalance balance )
Px_SetOutputBalance	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_SetOutputBalance( PxMixer *mixer, PxBalance balance )$/;"	f	signature:( PxMixer *mixer, PxBalance balance )
Px_SetOutputVolume	.\portmixer\px_common\portmixer.h	/^void Px_SetOutputVolume( PxMixer *mixer, int i, PxVolume volume );$/;"	p	signature:( PxMixer *mixer, int i, PxVolume volume )
Px_SetOutputVolume	.\portmixer\px_mac\px_mac.c	/^void Px_SetOutputVolume( PxMixer *mixer, int i, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, int i, PxVolume volume )
Px_SetOutputVolume	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_SetOutputVolume( PxMixer *mixer, int i, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, int i, PxVolume volume )
Px_SetOutputVolume	.\portmixer\px_none\px_none.c	/^void Px_SetOutputVolume( PxMixer *mixer, int i, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, int i, PxVolume volume )
Px_SetOutputVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_SetOutputVolume( PxMixer *mixer, int i, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, int i, PxVolume volume )
Px_SetOutputVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_SetOutputVolume( PxMixer *mixer, int i, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, int i, PxVolume volume )
Px_SetPCMOutputVolume	.\portmixer\px_common\portmixer.h	/^void Px_SetPCMOutputVolume( PxMixer *mixer, PxVolume volume );$/;"	p	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPCMOutputVolume	.\portmixer\px_mac\px_mac.c	/^void Px_SetPCMOutputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPCMOutputVolume	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_SetPCMOutputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPCMOutputVolume	.\portmixer\px_none\px_none.c	/^void Px_SetPCMOutputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPCMOutputVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_SetPCMOutputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPCMOutputVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_SetPCMOutputVolume( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPlaythrough	.\portmixer\px_common\portmixer.h	/^void Px_SetPlaythrough( PxMixer *mixer, PxVolume volume );$/;"	p	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPlaythrough	.\portmixer\px_mac\px_mac.c	/^void Px_SetPlaythrough( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPlaythrough	.\portmixer\px_mac_core\px_mac_core.c	/^void Px_SetPlaythrough( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPlaythrough	.\portmixer\px_none\px_none.c	/^void Px_SetPlaythrough( PxMixer *mixer, PxBalance balance )$/;"	f	signature:( PxMixer *mixer, PxBalance balance )
Px_SetPlaythrough	.\portmixer\px_unix_oss\px_unix_oss.c	/^void Px_SetPlaythrough( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetPlaythrough	.\portmixer\px_win_wmme\px_win_wmme.c	/^void Px_SetPlaythrough( PxMixer *mixer, PxVolume volume )$/;"	f	signature:( PxMixer *mixer, PxVolume volume )
Px_SetVolume	.\portmixer\px_mac_core\px_mac_core.c	/^static void Px_SetVolume(AudioDeviceID device, Boolean isInput,$/;"	f	file:	signature:(AudioDeviceID device, Boolean isInput, PxVolume volume)
Px_SupportsOutputBalance	.\portmixer\px_common\portmixer.h	/^int Px_SupportsOutputBalance( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_SupportsOutputBalance	.\portmixer\px_mac\px_mac.c	/^int Px_SupportsOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsOutputBalance	.\portmixer\px_mac_core\px_mac_core.c	/^int Px_SupportsOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsOutputBalance	.\portmixer\px_none\px_none.c	/^int Px_SupportsOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsOutputBalance	.\portmixer\px_unix_oss\px_unix_oss.c	/^int Px_SupportsOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsOutputBalance	.\portmixer\px_win_wmme\px_win_wmme.c	/^int Px_SupportsOutputBalance( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsPCMOutputVolume	.\portmixer\px_common\portmixer.h	/^int Px_SupportsPCMOutputVolume( PxMixer* mixer ) ;$/;"	p	signature:( PxMixer* mixer )
Px_SupportsPCMOutputVolume	.\portmixer\px_mac\px_mac.c	/^int Px_SupportsPCMOutputVolume( PxMixer* mixer ) $/;"	f	signature:( PxMixer* mixer )
Px_SupportsPCMOutputVolume	.\portmixer\px_mac_core\px_mac_core.c	/^int Px_SupportsPCMOutputVolume( PxMixer* mixer ) $/;"	f	signature:( PxMixer* mixer )
Px_SupportsPCMOutputVolume	.\portmixer\px_unix_oss\px_unix_oss.c	/^int Px_SupportsPCMOutputVolume( PxMixer* mixer ) $/;"	f	signature:( PxMixer* mixer )
Px_SupportsPCMOutputVolume	.\portmixer\px_win_wmme\px_win_wmme.c	/^int Px_SupportsPCMOutputVolume( PxMixer* mixer ) $/;"	f	signature:( PxMixer* mixer )
Px_SupportsPlaythrough	.\portmixer\px_common\portmixer.h	/^int Px_SupportsPlaythrough( PxMixer *mixer );$/;"	p	signature:( PxMixer *mixer )
Px_SupportsPlaythrough	.\portmixer\px_mac\px_mac.c	/^int Px_SupportsPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsPlaythrough	.\portmixer\px_mac_core\px_mac_core.c	/^int Px_SupportsPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsPlaythrough	.\portmixer\px_none\px_none.c	/^int Px_SupportsPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsPlaythrough	.\portmixer\px_unix_oss\px_unix_oss.c	/^int Px_SupportsPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
Px_SupportsPlaythrough	.\portmixer\px_win_wmme\px_win_wmme.c	/^int Px_SupportsPlaythrough( PxMixer *mixer )$/;"	f	signature:( PxMixer *mixer )
QaCallback	.\pa_tests\paqa_devs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
QaCallback	.\pa_tests\paqa_devs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
QaCallback	.\pa_tests\paqa_errs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
QaCallback	.\pa_tests\paqa_errs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
QaCallback	.\portaudio\pa_tests\paqa_devs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
QaCallback	.\portaudio\pa_tests\paqa_devs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
QaCallback	.\portaudio\pa_tests\paqa_errs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
QaCallback	.\portaudio\pa_tests\paqa_errs.c	/^static int QaCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
RSC	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^RSC=rc.exe$/;"	m
RSC	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^RSC=rc.exe$/;"	m
ReadAudioStream	.\portaudio\pablio\pablio.c	/^long ReadAudioStream( PABLIO_Stream *aStream, void *data, long numFrames )$/;"	f	signature:( PABLIO_Stream *aStream, void *data, long numFrames )
ReadAudioStream	.\portaudio\pablio\pablio.h	/^long ReadAudioStream( PABLIO_Stream *aStream, void *data, long numFrames );$/;"	p	signature:( PABLIO_Stream *aStream, void *data, long numFrames )
ReportStreamTime	.\pa_tests\patest_sine_time.c	/^static void ReportStreamTime( PortAudioStream *stream, paTestData *data )$/;"	f	file:	signature:( PortAudioStream *stream, paTestData *data )
ReportStreamTime	.\pa_tests\patest_sine_time.c	/^static void ReportStreamTime( PortAudioStream *stream, paTestData *data );$/;"	p	file:	signature:( PortAudioStream *stream, paTestData *data )
ReportStreamTime	.\portaudio\pa_tests\patest_sine_time.c	/^static void ReportStreamTime( PortAudioStream *stream, paTestData *data )$/;"	f	file:	signature:( PortAudioStream *stream, paTestData *data )
ReportStreamTime	.\portaudio\pa_tests\patest_sine_time.c	/^static void ReportStreamTime( PortAudioStream *stream, paTestData *data );$/;"	p	file:	signature:( PortAudioStream *stream, paTestData *data )
ResetTraceMessages	.\portaudio\pa_common\pa_trace.c	/^void ResetTraceMessages()$/;"	f
ResetTraceMessages	.\portaudio\pa_common\pa_trace.h	/^    void ResetTraceMessages();$/;"	p	signature:()
ResetTraceMessages	.\portaudio\pa_common\pa_trace.h	58;"	d
RingBuffer	.\portaudio\pablio\ringbuffer.h	/^RingBuffer;$/;"	t	typeref:struct:__anon23
RingBuffer_AdvanceReadIndex	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_AdvanceReadIndex( RingBuffer *rbuf, long numBytes )$/;"	f	signature:( RingBuffer *rbuf, long numBytes )
RingBuffer_AdvanceReadIndex	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_AdvanceReadIndex( RingBuffer *rbuf, long numBytes );$/;"	p	signature:( RingBuffer *rbuf, long numBytes )
RingBuffer_AdvanceWriteIndex	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_AdvanceWriteIndex( RingBuffer *rbuf, long numBytes )$/;"	f	signature:( RingBuffer *rbuf, long numBytes )
RingBuffer_AdvanceWriteIndex	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_AdvanceWriteIndex( RingBuffer *rbuf, long numBytes );$/;"	p	signature:( RingBuffer *rbuf, long numBytes )
RingBuffer_Flush	.\portaudio\pablio\ringbuffer.c	/^void RingBuffer_Flush( RingBuffer *rbuf )$/;"	f	signature:( RingBuffer *rbuf )
RingBuffer_Flush	.\portaudio\pablio\ringbuffer.h	/^void RingBuffer_Flush( RingBuffer *rbuf );$/;"	p	signature:( RingBuffer *rbuf )
RingBuffer_GetReadAvailable	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_GetReadAvailable( RingBuffer *rbuf )$/;"	f	signature:( RingBuffer *rbuf )
RingBuffer_GetReadAvailable	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_GetReadAvailable( RingBuffer *rbuf );$/;"	p	signature:( RingBuffer *rbuf )
RingBuffer_GetReadRegions	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_GetReadRegions( RingBuffer *rbuf, long numBytes,$/;"	f	signature:( RingBuffer *rbuf, long numBytes, void **dataPtr1, long *sizePtr1, void **dataPtr2, long *sizePtr2 )
RingBuffer_GetReadRegions	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_GetReadRegions( RingBuffer *rbuf, long numBytes,$/;"	p	signature:( RingBuffer *rbuf, long numBytes, void **dataPtr1, long *sizePtr1, void **dataPtr2, long *sizePtr2 )
RingBuffer_GetWriteAvailable	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_GetWriteAvailable( RingBuffer *rbuf )$/;"	f	signature:( RingBuffer *rbuf )
RingBuffer_GetWriteAvailable	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_GetWriteAvailable( RingBuffer *rbuf );$/;"	p	signature:( RingBuffer *rbuf )
RingBuffer_GetWriteRegions	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_GetWriteRegions( RingBuffer *rbuf, long numBytes,$/;"	f	signature:( RingBuffer *rbuf, long numBytes, void **dataPtr1, long *sizePtr1, void **dataPtr2, long *sizePtr2 )
RingBuffer_GetWriteRegions	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_GetWriteRegions( RingBuffer *rbuf, long numBytes,$/;"	p	signature:( RingBuffer *rbuf, long numBytes, void **dataPtr1, long *sizePtr1, void **dataPtr2, long *sizePtr2 )
RingBuffer_Init	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_Init( RingBuffer *rbuf, long numBytes, void *dataPtr )$/;"	f	signature:( RingBuffer *rbuf, long numBytes, void *dataPtr )
RingBuffer_Init	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_Init( RingBuffer *rbuf, long numBytes, void *dataPtr );$/;"	p	signature:( RingBuffer *rbuf, long numBytes, void *dataPtr )
RingBuffer_Read	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_Read( RingBuffer *rbuf, void *data, long numBytes )$/;"	f	signature:( RingBuffer *rbuf, void *data, long numBytes )
RingBuffer_Read	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_Read( RingBuffer *rbuf, void *data, long numBytes );$/;"	p	signature:( RingBuffer *rbuf, void *data, long numBytes )
RingBuffer_Write	.\portaudio\pablio\ringbuffer.c	/^long RingBuffer_Write( RingBuffer *rbuf, void *data, long numBytes )$/;"	f	signature:( RingBuffer *rbuf, void *data, long numBytes )
RingBuffer_Write	.\portaudio\pablio\ringbuffer.h	/^long RingBuffer_Write( RingBuffer *rbuf, void *data, long numBytes );$/;"	p	signature:( RingBuffer *rbuf, void *data, long numBytes )
RoundUpToNextPowerOf2	.\portaudio\pa_mac_core\pa_mac_core.c	/^static unsigned long RoundUpToNextPowerOf2( unsigned long n )$/;"	f	file:	signature:( unsigned long n )
RoundUpToNextPowerOf2	.\portaudio\pablio\pablio.c	/^static unsigned long RoundUpToNextPowerOf2( unsigned long n )$/;"	f	file:	signature:( unsigned long n )
SAMPLE	.\pa_tests\debug_record.c	/^typedef char SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\debug_record.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\debug_record.c	/^typedef long SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\debug_record.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\debug_record.c	/^typedef unsigned char SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\pa_fuzz.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\patest_record.c	/^typedef char SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\patest_record.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\patest_record.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\patest_record.c	/^typedef unsigned char SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\patest_wire.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\pa_tests\patest_wire.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\debug_record.c	/^typedef char SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\debug_record.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\debug_record.c	/^typedef long SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\debug_record.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\debug_record.c	/^typedef unsigned char SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\pa_fuzz.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\patest_record.c	/^typedef char SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\patest_record.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\patest_record.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\patest_record.c	/^typedef unsigned char SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\patest_wire.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pa_tests\patest_wire.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pablio\test_rw.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pablio\test_rw.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pablio\test_rw_echo.c	/^typedef float SAMPLE;$/;"	t	file:
SAMPLE	.\portaudio\pablio\test_rw_echo.c	/^typedef short SAMPLE;$/;"	t	file:
SAMPLES_PER_FRAME	.\portaudio\pablio\test_rw.c	49;"	d	file:
SAMPLES_PER_FRAME	.\portaudio\pablio\test_rw_echo.c	56;"	d	file:
SAMPLES_PER_FRAME	.\portaudio\pablio\test_w_saw.c	47;"	d	file:
SAMPLES_PER_FRAME	.\portaudio\pablio\test_w_saw8.c	47;"	d	file:
SAMPLE_RATE	.\pa_tests\debug_dual.c	45;"	d	file:
SAMPLE_RATE	.\pa_tests\debug_multi_in.c	45;"	d	file:
SAMPLE_RATE	.\pa_tests\debug_multi_out.c	42;"	d	file:
SAMPLE_RATE	.\pa_tests\debug_record.c	42;"	d	file:
SAMPLE_RATE	.\pa_tests\debug_sine.c	44;"	d	file:
SAMPLE_RATE	.\pa_tests\pa_fuzz.c	44;"	d	file:
SAMPLE_RATE	.\pa_tests\paqa_errs.c	44;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_clip.c	41;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_dither.c	41;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_latency.c	41;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_leftright.c	43;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_longsine.c	40;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_many.c	41;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_maxsines.c	44;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_record.c	43;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_saw.c	40;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_sine.c	43;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_sine8.c	41;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_sine_time.c	44;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_stop.c	49;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_sync.c	50;"	d	file:
SAMPLE_RATE	.\pa_tests\patest_wire.c	52;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\debug_dual.c	45;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\debug_multi_in.c	45;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\debug_multi_out.c	42;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\debug_record.c	42;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\debug_sine.c	44;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\pa_fuzz.c	44;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\paqa_errs.c	44;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_clip.c	41;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_dither.c	41;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_latency.c	41;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_leftright.c	43;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_longsine.c	40;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_many.c	41;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_maxsines.c	44;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_record.c	43;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_saw.c	40;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_sine.c	43;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_sine8.c	41;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_sine_time.c	44;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_stop.c	49;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_sync.c	50;"	d	file:
SAMPLE_RATE	.\portaudio\pa_tests\patest_wire.c	52;"	d	file:
SAMPLE_RATE	.\portaudio\pablio\test_rw.c	47;"	d	file:
SAMPLE_RATE	.\portaudio\pablio\test_rw_echo.c	54;"	d	file:
SAMPLE_RATE	.\portaudio\pablio\test_w_saw.c	45;"	d	file:
SAMPLE_RATE	.\portaudio\pablio\test_w_saw8.c	45;"	d	file:
SAMPLE_SILENCE	.\pa_tests\debug_record.c	53;"	d	file:
SAMPLE_SILENCE	.\pa_tests\debug_record.c	58;"	d	file:
SAMPLE_SILENCE	.\pa_tests\debug_record.c	63;"	d	file:
SAMPLE_SILENCE	.\pa_tests\debug_record.c	68;"	d	file:
SAMPLE_SILENCE	.\pa_tests\debug_record.c	73;"	d	file:
SAMPLE_SILENCE	.\pa_tests\patest_record.c	54;"	d	file:
SAMPLE_SILENCE	.\pa_tests\patest_record.c	58;"	d	file:
SAMPLE_SILENCE	.\pa_tests\patest_record.c	62;"	d	file:
SAMPLE_SILENCE	.\pa_tests\patest_record.c	66;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\debug_record.c	53;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\debug_record.c	58;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\debug_record.c	63;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\debug_record.c	68;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\debug_record.c	73;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\patest_record.c	54;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\patest_record.c	58;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\patest_record.c	62;"	d	file:
SAMPLE_SILENCE	.\portaudio\pa_tests\patest_record.c	66;"	d	file:
SAMPLE_TYPE	.\portaudio\pablio\test_rw.c	54;"	d	file:
SAMPLE_TYPE	.\portaudio\pablio\test_rw.c	57;"	d	file:
SAMPLE_TYPE	.\portaudio\pablio\test_rw_echo.c	60;"	d	file:
SAMPLE_TYPE	.\portaudio\pablio\test_rw_echo.c	63;"	d	file:
SCHEDULER_POLICY	.\portaudio\pa_unix_oss\pa_unix.c	376;"	d	file:
SET_DEVICE_BUFFER_SIZE	.\portaudio\pa_mac_core\pa_mac_core.c	115;"	d	file:
SLEEP_DUR	.\pa_tests\debug_dual.c	44;"	d	file:
SLEEP_DUR	.\pa_tests\debug_sine.c	43;"	d	file:
SLEEP_DUR	.\pa_tests\patest_stop.c	48;"	d	file:
SLEEP_DUR	.\portaudio\pa_tests\debug_dual.c	44;"	d	file:
SLEEP_DUR	.\portaudio\pa_tests\debug_sine.c	43;"	d	file:
SLEEP_DUR	.\portaudio\pa_tests\patest_stop.c	48;"	d	file:
SLEEP_MSEC	.\pa_tests\patest_sync.c	54;"	d	file:
SLEEP_MSEC	.\portaudio\pa_tests\patest_sync.c	54;"	d	file:
SOURCE	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^SOURCE=..\\..\\pa_common\\pa_lib.c$/;"	m
SOURCE	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^SOURCE=..\\..\\pa_win_ds\\dsound_wrapper.c$/;"	m
SOURCE	.\portaudio\winproj\PAStaticDS\PAStaticDS.mak	/^SOURCE=..\\..\\pa_win_ds\\pa_dsound.c$/;"	m
SOURCE	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^SOURCE=..\\..\\pa_common\\pa_lib.c$/;"	m
SOURCE	.\portaudio\winproj\PAStaticWMME\PAStaticWMME.mak	/^SOURCE=..\\..\\pa_win_wmme\\pa_win_wmme.c$/;"	m
SRateInfo	.\portaudio\pa_mac\pa_mac.c	/^SRateInfo;$/;"	t	typeref:struct:__anon26	file:
STATE_BKG_BEEPING	.\pa_tests\patest_sync.c	59;"	d	file:
STATE_BKG_BEEPING	.\portaudio\pa_tests\patest_sync.c	59;"	d	file:
STATE_BKG_IDLE	.\pa_tests\patest_sync.c	57;"	d	file:
STATE_BKG_IDLE	.\portaudio\pa_tests\patest_sync.c	57;"	d	file:
STATE_BKG_PENDING	.\pa_tests\patest_sync.c	58;"	d	file:
STATE_BKG_PENDING	.\portaudio\pa_tests\patest_sync.c	58;"	d	file:
SUPPORT_AUDIO_CAPTURE	.\portaudio\pa_common\pa_host.h	48;"	d
SUPPORT_AUDIO_CAPTURE	.\portaudio\pa_win_ds\dsound_wrapper.h	43;"	d
SetFramesDone	.\portaudio\pa_mac\pa_mac.c	/^static void SetFramesDone( PaHostSoundControl *pahsc, PaTimestamp framesDone )$/;"	f	file:	signature:( PaHostSoundControl *pahsc, PaTimestamp framesDone )
SubtractTime_AminusB	.\portaudio\pa_mac_core\pa_mac_core.c	/^static long SubtractTime_AminusB( struct timeval *timeA, struct timeval *timeB )$/;"	f	file:	signature:( struct timeval *timeA, struct timeval *timeB )
SubtractTime_AminusB	.\portaudio\pa_unix_oss\pa_unix.c	/^static long SubtractTime_AminusB( struct timeval *timeA, struct timeval *timeB )$/;"	f	file:	signature:( struct timeval *timeA, struct timeval *timeB )
TABLE_SIZE	.\pa_tests\debug_dual.c	60;"	d	file:
TABLE_SIZE	.\pa_tests\debug_sine.c	63;"	d	file:
TABLE_SIZE	.\pa_tests\patest_clip.c	45;"	d	file:
TABLE_SIZE	.\pa_tests\patest_dither.c	45;"	d	file:
TABLE_SIZE	.\pa_tests\patest_latency.c	56;"	d	file:
TABLE_SIZE	.\pa_tests\patest_leftright.c	48;"	d	file:
TABLE_SIZE	.\pa_tests\patest_longsine.c	46;"	d	file:
TABLE_SIZE	.\pa_tests\patest_many.c	45;"	d	file:
TABLE_SIZE	.\pa_tests\patest_maxsines.c	56;"	d	file:
TABLE_SIZE	.\pa_tests\patest_sine.c	53;"	d	file:
TABLE_SIZE	.\pa_tests\patest_sine8.c	51;"	d	file:
TABLE_SIZE	.\pa_tests\patest_sine_time.c	50;"	d	file:
TABLE_SIZE	.\pa_tests\patest_stop.c	67;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\debug_dual.c	60;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\debug_sine.c	63;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_clip.c	45;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_dither.c	45;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_latency.c	56;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_leftright.c	48;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_longsine.c	46;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_many.c	45;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_maxsines.c	56;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_sine.c	53;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_sine8.c	51;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_sine_time.c	50;"	d	file:
TABLE_SIZE	.\portaudio\pa_tests\patest_stop.c	67;"	d	file:
TESTSR	.\pa_tests\paqa_devs.c	218;"	d	file:
TESTSR	.\portaudio\pa_tests\paqa_devs.c	218;"	d	file:
TEST_FORMAT	.\pa_tests\patest_sine8.c	44;"	d	file:
TEST_FORMAT	.\pa_tests\patest_sine8.c	46;"	d	file:
TEST_FORMAT	.\portaudio\pa_tests\patest_sine8.c	44;"	d	file:
TEST_FORMAT	.\portaudio\pa_tests\patest_sine8.c	46;"	d	file:
TEST_UNSIGNED	.\pa_tests\patest_sine8.c	42;"	d	file:
TEST_UNSIGNED	.\portaudio\pa_tests\patest_sine8.c	42;"	d	file:
TIMEOUT_MSEC	.\pa_tests\patest_sync.c	55;"	d	file:
TIMEOUT_MSEC	.\portaudio\pa_tests\patest_sync.c	55;"	d	file:
TRACE_REALTIME_EVENTS	.\portaudio\pa_common\pa_trace.h	36;"	d
TRUE	.\portaudio\pa_common\pa_lib.c	68;"	d	file:
TRUE	.\portaudio\pa_mac\pa_mac.c	105;"	d	file:
TWOPI	.\pa_tests\pa_minlat.c	45;"	d	file:
TWOPI	.\pa_tests\patest_maxsines.c	54;"	d	file:
TWOPI	.\portaudio\pa_tests\pa_minlat.c	45;"	d	file:
TWOPI	.\portaudio\pa_tests\patest_maxsines.c	54;"	d	file:
TestAdvance	.\pa_tests\paqa_devs.c	/^static int TestAdvance( int mode, PaDeviceID deviceID, double sampleRate,$/;"	f	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels, PaSampleFormat format )
TestAdvance	.\pa_tests\paqa_devs.c	/^static int TestAdvance( int mode, PaDeviceID deviceID, double sampleRate,$/;"	p	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels, PaSampleFormat format )
TestAdvance	.\portaudio\pa_tests\paqa_devs.c	/^static int TestAdvance( int mode, PaDeviceID deviceID, double sampleRate,$/;"	f	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels, PaSampleFormat format )
TestAdvance	.\portaudio\pa_tests\paqa_devs.c	/^static int TestAdvance( int mode, PaDeviceID deviceID, double sampleRate,$/;"	p	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels, PaSampleFormat format )
TestBadActions	.\pa_tests\paqa_errs.c	/^static int TestBadActions( void )$/;"	f	file:	signature:( void )
TestBadActions	.\pa_tests\paqa_errs.c	/^static int TestBadActions( void );$/;"	p	file:	signature:( void )
TestBadActions	.\portaudio\pa_tests\paqa_errs.c	/^static int TestBadActions( void )$/;"	f	file:	signature:( void )
TestBadActions	.\portaudio\pa_tests\paqa_errs.c	/^static int TestBadActions( void );$/;"	p	file:	signature:( void )
TestBadOpens	.\pa_tests\paqa_errs.c	/^static int TestBadOpens( void )$/;"	f	file:	signature:( void )
TestBadOpens	.\pa_tests\paqa_errs.c	/^static int TestBadOpens( void );$/;"	p	file:	signature:( void )
TestBadOpens	.\portaudio\pa_tests\paqa_errs.c	/^static int TestBadOpens( void )$/;"	f	file:	signature:( void )
TestBadOpens	.\portaudio\pa_tests\paqa_errs.c	/^static int TestBadOpens( void );$/;"	p	file:	signature:( void )
TestDevices	.\pa_tests\paqa_devs.c	/^static void TestDevices( int mode )$/;"	f	file:	signature:( int mode )
TestDevices	.\pa_tests\paqa_devs.c	/^static void TestDevices( int mode );$/;"	p	file:	signature:( int mode )
TestDevices	.\pa_tests\paqa_errs.c	/^static void TestDevices( int mode );$/;"	p	file:	signature:( int mode )
TestDevices	.\portaudio\pa_tests\paqa_devs.c	/^static void TestDevices( int mode )$/;"	f	file:	signature:( int mode )
TestDevices	.\portaudio\pa_tests\paqa_devs.c	/^static void TestDevices( int mode );$/;"	p	file:	signature:( int mode )
TestDevices	.\portaudio\pa_tests\paqa_errs.c	/^static void TestDevices( int mode );$/;"	p	file:	signature:( int mode )
TestFormats	.\pa_tests\paqa_devs.c	/^static void TestFormats( int mode, PaDeviceID deviceID, double sampleRate,$/;"	f	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels )
TestFormats	.\pa_tests\paqa_devs.c	/^static void TestFormats( int mode, PaDeviceID deviceID, double sampleRate,$/;"	p	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels )
TestFormats	.\pa_tests\paqa_errs.c	/^static void TestFormats( int mode, PaDeviceID deviceID, double sampleRate,$/;"	p	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels )
TestFormats	.\portaudio\pa_tests\paqa_devs.c	/^static void TestFormats( int mode, PaDeviceID deviceID, double sampleRate,$/;"	f	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels )
TestFormats	.\portaudio\pa_tests\paqa_devs.c	/^static void TestFormats( int mode, PaDeviceID deviceID, double sampleRate,$/;"	p	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels )
TestFormats	.\portaudio\pa_tests\paqa_errs.c	/^static void TestFormats( int mode, PaDeviceID deviceID, double sampleRate,$/;"	p	file:	signature:( int mode, PaDeviceID deviceID, double sampleRate, int numChannels )
TestOnce	.\pa_tests\patest_many.c	/^PaError TestOnce( void )$/;"	f	signature:( void )
TestOnce	.\pa_tests\patest_many.c	/^PaError TestOnce( void );$/;"	p	file:	signature:( void )
TestOnce	.\portaudio\pa_tests\patest_many.c	/^PaError TestOnce( void )$/;"	f	signature:( void )
TestOnce	.\portaudio\pa_tests\patest_many.c	/^PaError TestOnce( void );$/;"	p	file:	signature:( void )
TestSettingDeviceInfo	.\portaudio\pa_mac\patest_devinfo.c	/^\/*$/;"	f	file:	signature:( const unsigned char *deviceName )
TestSettingDeviceInfo	.\portaudio\pa_mac\patest_devinfo.c	/^\/*$/;"	p	file:	signature:( const unsigned char *deviceName )
TestStart	.\pa_tests\debug_dual.c	/^PaError TestStart( PortAudioStream **streamPtr, PaDeviceID devID, paTestData *data )$/;"	f	signature:( PortAudioStream **streamPtr, PaDeviceID devID, paTestData *data )
TestStart	.\pa_tests\debug_dual.c	/^PaError TestStart( PortAudioStream **streamPtr, PaDeviceID devID,$/;"	p	file:	signature:( PortAudioStream **streamPtr, PaDeviceID devID, paTestData *data )
TestStart	.\portaudio\pa_tests\debug_dual.c	/^PaError TestStart( PortAudioStream **streamPtr, PaDeviceID devID, paTestData *data )$/;"	f	signature:( PortAudioStream **streamPtr, PaDeviceID devID, paTestData *data )
TestStart	.\portaudio\pa_tests\debug_dual.c	/^PaError TestStart( PortAudioStream **streamPtr, PaDeviceID devID,$/;"	p	file:	signature:( PortAudioStream **streamPtr, PaDeviceID devID, paTestData *data )
TestStopMode	.\pa_tests\patest_stop.c	/^int TestStopMode( paTestData *data )$/;"	f	signature:( paTestData *data )
TestStopMode	.\pa_tests\patest_stop.c	/^int TestStopMode( paTestData *data );$/;"	p	file:	signature:( paTestData *data )
TestStopMode	.\portaudio\pa_tests\patest_stop.c	/^int TestStopMode( paTestData *data )$/;"	f	signature:( paTestData *data )
TestStopMode	.\portaudio\pa_tests\patest_stop.c	/^int TestStopMode( paTestData *data );$/;"	p	file:	signature:( paTestData *data )
UNDER_SLEEP_AT	.\portaudio\pa_win_wmme\pa_win_wmme.c	112;"	d	file:
UNDER_SLEEP_FOR	.\portaudio\pa_win_wmme\pa_win_wmme.c	113;"	d	file:
UNDER_START_GAP	.\portaudio\pa_win_ds\pa_dsound.c	74;"	d	file:
UNDER_STOP_GAP	.\portaudio\pa_win_ds\pa_dsound.c	75;"	d	file:
UnsignedFixedToDouble	.\portaudio\pa_mac\pa_mac.c	132;"	d	file:
VolumeFunction	.\portmixer\px_win_wmme\px_win_wmme.c	/^void VolumeFunction(HMIXEROBJ hMixer, DWORD controlID, PxVolume *volume)$/;"	f	signature:(HMIXEROBJ hMixer, DWORD controlID, PxVolume *volume)
WATCHDOG_INTERVAL_USEC	.\portaudio\pa_unix_oss\pa_unix.c	378;"	d	file:
WATCHDOG_MAX_SECONDS	.\portaudio\pa_unix_oss\pa_unix.c	377;"	d	file:
WinMMPa_OutputThreadProc	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static DWORD WINAPI WinMMPa_OutputThreadProc( void *pArg )$/;"	f	file:	signature:( void *pArg )
WriteAudioStream	.\portaudio\pablio\pablio.c	/^long WriteAudioStream( PABLIO_Stream *aStream, void *data, long numFrames )$/;"	f	signature:( PABLIO_Stream *aStream, void *data, long numFrames )
WriteAudioStream	.\portaudio\pablio\pablio.h	/^long WriteAudioStream( PABLIO_Stream *aStream, void *data, long numFrames );$/;"	p	signature:( PABLIO_Stream *aStream, void *data, long numFrames )
_PABLIO_H	.\portaudio\pablio\pablio.h	2;"	d
_RINGBUFFER_H	.\portaudio\pablio\ringbuffer.h	2;"	d
__DSOUND_WRAPPER_H	.\portaudio\pa_win_ds\dsound_wrapper.h	2;"	d
__anon10::left_phase	.\pa_tests\patest_longsine.c	/^    int left_phase;$/;"	m	struct:__anon10	file:	access:public
__anon10::right_phase	.\pa_tests\patest_longsine.c	/^    int right_phase;$/;"	m	struct:__anon10	file:	access:public
__anon10::sine	.\pa_tests\patest_longsine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon10	file:	access:public
__anon11::left_phase	.\pa_tests\patest_many.c	/^    int left_phase;$/;"	m	struct:__anon11	file:	access:public
__anon11::right_phase	.\pa_tests\patest_many.c	/^    int right_phase;$/;"	m	struct:__anon11	file:	access:public
__anon11::sampsToGo	.\pa_tests\patest_many.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon11	file:	access:public
__anon11::sine	.\pa_tests\patest_many.c	/^    short sine[TABLE_SIZE];$/;"	m	struct:__anon11	file:	access:public
__anon12::pink_Index	.\pa_tests\patest_pink.c	/^    int       pink_Index;        \/* Incremented each sample. *\/$/;"	m	struct:__anon12	file:	access:public
__anon12::pink_IndexMask	.\pa_tests\patest_pink.c	/^    int       pink_IndexMask;    \/* Index wrapped by ANDing with this mask. *\/$/;"	m	struct:__anon12	file:	access:public
__anon12::pink_Rows	.\pa_tests\patest_pink.c	/^    long      pink_Rows[PINK_MAX_RANDOM_ROWS];$/;"	m	struct:__anon12	file:	access:public
__anon12::pink_RunningSum	.\pa_tests\patest_pink.c	/^    long      pink_RunningSum;   \/* Used to optimize summing of generators. *\/$/;"	m	struct:__anon12	file:	access:public
__anon12::pink_Scalar	.\pa_tests\patest_pink.c	/^    float     pink_Scalar;       \/* Used to scale within range of -1.0 to +1.0 *\/$/;"	m	struct:__anon12	file:	access:public
__anon13::leftPink	.\pa_tests\patest_pink.c	/^    PinkNoise   leftPink;$/;"	m	struct:__anon13	file:	access:public
__anon13::rightPink	.\pa_tests\patest_pink.c	/^    PinkNoise   rightPink;$/;"	m	struct:__anon13	file:	access:public
__anon13::sampsToGo	.\pa_tests\patest_pink.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon13	file:	access:public
__anon14::frameIndex	.\pa_tests\patest_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon14	file:	access:public
__anon14::maxFrameIndex	.\pa_tests\patest_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon14	file:	access:public
__anon14::recordedSamples	.\pa_tests\patest_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon14	file:	access:public
__anon15::left_phase	.\pa_tests\patest_saw.c	/^    float left_phase;$/;"	m	struct:__anon15	file:	access:public
__anon15::right_phase	.\pa_tests\patest_saw.c	/^    float right_phase;$/;"	m	struct:__anon15	file:	access:public
__anon16::left_phase	.\pa_tests\patest_sine.c	/^    int left_phase;$/;"	m	struct:__anon16	file:	access:public
__anon16::right_phase	.\pa_tests\patest_sine.c	/^    int right_phase;$/;"	m	struct:__anon16	file:	access:public
__anon16::sine	.\pa_tests\patest_sine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon16	file:	access:public
__anon17::framesToGo	.\pa_tests\patest_sine8.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon17	file:	access:public
__anon17::left_phase	.\pa_tests\patest_sine8.c	/^    int left_phase;$/;"	m	struct:__anon17	file:	access:public
__anon17::right_phase	.\pa_tests\patest_sine8.c	/^    int right_phase;$/;"	m	struct:__anon17	file:	access:public
__anon17::sine	.\pa_tests\patest_sine8.c	/^    unsigned char sine[TABLE_SIZE];$/;"	m	struct:__anon17	file:	access:public
__anon18::framesToGo	.\pa_tests\patest_sine_time.c	/^    int           framesToGo;$/;"	m	struct:__anon18	file:	access:public
__anon18::left_phase	.\pa_tests\patest_sine_time.c	/^    int           left_phase;$/;"	m	struct:__anon18	file:	access:public
__anon18::outTime	.\pa_tests\patest_sine_time.c	/^    volatile PaTimestamp   outTime;$/;"	m	struct:__anon18	file:	access:public
__anon18::right_phase	.\pa_tests\patest_sine_time.c	/^    int           right_phase;$/;"	m	struct:__anon18	file:	access:public
__anon18::sine	.\pa_tests\patest_sine_time.c	/^    float         sine[TABLE_SIZE];$/;"	m	struct:__anon18	file:	access:public
__anon19::done	.\pa_tests\patest_stop.c	/^    int    done;$/;"	m	struct:__anon19	file:	access:public
__anon19::frameCounter	.\pa_tests\patest_stop.c	/^    int    frameCounter;$/;"	m	struct:__anon19	file:	access:public
__anon19::noteCounter	.\pa_tests\patest_stop.c	/^    int    noteCounter;$/;"	m	struct:__anon19	file:	access:public
__anon19::notesPerTune	.\pa_tests\patest_stop.c	/^    int    notesPerTune;$/;"	m	struct:__anon19	file:	access:public
__anon19::outTime	.\pa_tests\patest_stop.c	/^    PaTimestamp    outTime;$/;"	m	struct:__anon19	file:	access:public
__anon19::phase	.\pa_tests\patest_stop.c	/^    float  phase;$/;"	m	struct:__anon19	file:	access:public
__anon19::phase_increment	.\pa_tests\patest_stop.c	/^    float  phase_increment;$/;"	m	struct:__anon19	file:	access:public
__anon19::repeatCounter	.\pa_tests\patest_stop.c	/^    int    repeatCounter;$/;"	m	struct:__anon19	file:	access:public
__anon19::stopMode	.\pa_tests\patest_stop.c	/^    int    stopMode;$/;"	m	struct:__anon19	file:	access:public
__anon19::tune	.\pa_tests\patest_stop.c	/^    float *tune;$/;"	m	struct:__anon19	file:	access:public
__anon19::waveform	.\pa_tests\patest_stop.c	/^    float  waveform[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon19	file:	access:public
__anon1::left_phase	.\pa_tests\debug_dual.c	/^    float left_phase;$/;"	m	struct:__anon1	file:	access:public
__anon1::phase_increment	.\pa_tests\debug_dual.c	/^    float phase_increment;$/;"	m	struct:__anon1	file:	access:public
__anon1::right_phase	.\pa_tests\debug_dual.c	/^    float right_phase;$/;"	m	struct:__anon1	file:	access:public
__anon1::sine	.\pa_tests\debug_dual.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon1	file:	access:public
__anon20::beepCount	.\pa_tests\patest_sync.c	/^    int          beepCount;$/;"	m	struct:__anon20	file:	access:public
__anon20::beepTime	.\pa_tests\patest_sync.c	/^    PaTimestamp  beepTime;$/;"	m	struct:__anon20	file:	access:public
__anon20::left_phase	.\pa_tests\patest_sync.c	/^    float        left_phase;$/;"	m	struct:__anon20	file:	access:public
__anon20::requestBeep	.\pa_tests\patest_sync.c	/^    int          requestBeep;  \/* Set by foreground, cleared by background. *\/$/;"	m	struct:__anon20	file:	access:public
__anon20::right_phase	.\pa_tests\patest_sync.c	/^    float        right_phase;$/;"	m	struct:__anon20	file:	access:public
__anon20::state	.\pa_tests\patest_sync.c	/^    int          state;$/;"	m	struct:__anon20	file:	access:public
__anon21::left_phase	.\pa_tests\pa_minlat.c	/^    double left_phase;$/;"	m	struct:__anon21	file:	access:public
__anon21::right_phase	.\pa_tests\pa_minlat.c	/^    double right_phase;$/;"	m	struct:__anon21	file:	access:public
__anon22::bytesPerFrame	.\portaudio\pablio\pablio.h	/^    int          bytesPerFrame;$/;"	m	struct:__anon22	access:public
__anon22::inFIFO	.\portaudio\pablio\pablio.h	/^    RingBuffer   inFIFO;$/;"	m	struct:__anon22	access:public
__anon22::outFIFO	.\portaudio\pablio\pablio.h	/^    RingBuffer   outFIFO;$/;"	m	struct:__anon22	access:public
__anon22::samplesPerFrame	.\portaudio\pablio\pablio.h	/^    int          samplesPerFrame;$/;"	m	struct:__anon22	access:public
__anon22::stream	.\portaudio\pablio\pablio.h	/^    PortAudioStream *stream;$/;"	m	struct:__anon22	access:public
__anon23::bigMask	.\portaudio\pablio\ringbuffer.h	/^    long   bigMask;    \/* Used for wrapping indices with extra bit to distinguish full\/empty. *\/$/;"	m	struct:__anon23	access:public
__anon23::buffer	.\portaudio\pablio\ringbuffer.h	/^    char *buffer;$/;"	m	struct:__anon23	access:public
__anon23::bufferSize	.\portaudio\pablio\ringbuffer.h	/^    long   bufferSize; \/* Number of bytes in FIFO. Power of 2. Set by RingBuffer_Init. *\/$/;"	m	struct:__anon23	access:public
__anon23::readIndex	.\portaudio\pablio\ringbuffer.h	/^    long   readIndex;  \/* Index of next readable byte. Set by RingBuffer_AdvanceReadIndex. *\/$/;"	m	struct:__anon23	access:public
__anon23::smallMask	.\portaudio\pablio\ringbuffer.h	/^    long   smallMask;  \/* Used for fitting indices to buffer. *\/$/;"	m	struct:__anon23	access:public
__anon23::writeIndex	.\portaudio\pablio\ringbuffer.h	/^    long   writeIndex; \/* Index of next writable byte. Set by RingBuffer_AdvanceWriteIndex. *\/$/;"	m	struct:__anon23	access:public
__anon25::maxInputChannels	.\portaudio\pa_common\portaudio.h	/^    int maxInputChannels;$/;"	m	struct:__anon25	access:public
__anon25::maxOutputChannels	.\portaudio\pa_common\portaudio.h	/^    int maxOutputChannels;$/;"	m	struct:__anon25	access:public
__anon25::name	.\portaudio\pa_common\portaudio.h	/^    const char *name;$/;"	m	struct:__anon25	access:public
__anon25::nativeSampleFormats	.\portaudio\pa_common\portaudio.h	/^    PaSampleFormat nativeSampleFormats;$/;"	m	struct:__anon25	access:public
__anon25::numSampleRates	.\portaudio\pa_common\portaudio.h	/^    int numSampleRates;$/;"	m	struct:__anon25	access:public
__anon25::sampleRates	.\portaudio\pa_common\portaudio.h	/^    const double *sampleRates;$/;"	m	struct:__anon25	access:public
__anon25::structVersion	.\portaudio\pa_common\portaudio.h	/^    int structVersion;$/;"	m	struct:__anon25	access:public
__anon26::numRates	.\portaudio\pa_mac\pa_mac.c	/^    int16                   numRates;$/;"	m	struct:__anon26	file:	access:public
__anon26::rates	.\portaudio\pa_mac\pa_mac.c	/^    UnsignedFixed           (**rates)[]; \/* Handle created by SPBGetDeviceInfo *\/$/;"	m	struct:__anon26	file:	access:public
__anon27::left_phase	.\portaudio\pa_tests\debug_dual.c	/^    float left_phase;$/;"	m	struct:__anon27	file:	access:public
__anon27::phase_increment	.\portaudio\pa_tests\debug_dual.c	/^    float phase_increment;$/;"	m	struct:__anon27	file:	access:public
__anon27::right_phase	.\portaudio\pa_tests\debug_dual.c	/^    float right_phase;$/;"	m	struct:__anon27	file:	access:public
__anon27::sine	.\portaudio\pa_tests\debug_dual.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon27	file:	access:public
__anon28::liveChannel	.\portaudio\pa_tests\debug_multi_in.c	/^    int      liveChannel;$/;"	m	struct:__anon28	file:	access:public
__anon28::numChannels	.\portaudio\pa_tests\debug_multi_in.c	/^    int      numChannels;$/;"	m	struct:__anon28	file:	access:public
__anon29::numChannels	.\portaudio\pa_tests\debug_multi_out.c	/^    int      numChannels;$/;"	m	struct:__anon29	file:	access:public
__anon29::phases	.\portaudio\pa_tests\debug_multi_out.c	/^    double   phases[MAX_CHANNELS];$/;"	m	struct:__anon29	file:	access:public
__anon2::liveChannel	.\pa_tests\debug_multi_in.c	/^    int      liveChannel;$/;"	m	struct:__anon2	file:	access:public
__anon2::numChannels	.\pa_tests\debug_multi_in.c	/^    int      numChannels;$/;"	m	struct:__anon2	file:	access:public
__anon30::frameIndex	.\portaudio\pa_tests\debug_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon30	file:	access:public
__anon30::maxFrameIndex	.\portaudio\pa_tests\debug_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon30	file:	access:public
__anon30::recordedSamples	.\portaudio\pa_tests\debug_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon30	file:	access:public
__anon31::framesToGo	.\portaudio\pa_tests\debug_sine.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon31	file:	access:public
__anon31::left_phase	.\portaudio\pa_tests\debug_sine.c	/^    float left_phase;$/;"	m	struct:__anon31	file:	access:public
__anon31::phase_increment	.\portaudio\pa_tests\debug_sine.c	/^    float phase_increment;$/;"	m	struct:__anon31	file:	access:public
__anon31::right_phase	.\portaudio\pa_tests\debug_sine.c	/^    float right_phase;$/;"	m	struct:__anon31	file:	access:public
__anon31::sine	.\portaudio\pa_tests\debug_sine.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon31	file:	access:public
__anon32::phase	.\portaudio\pa_tests\debug_test1.c	/^    int phase;$/;"	m	struct:__anon32	file:	access:public
__anon32::sampsToGo	.\portaudio\pa_tests\debug_test1.c	/^    int sampsToGo;$/;"	m	struct:__anon32	file:	access:public
__anon32::sine	.\portaudio\pa_tests\debug_test1.c	/^    float sine[100];$/;"	m	struct:__anon32	file:	access:public
__anon33::phase	.\portaudio\pa_tests\patest1.c	/^    int phase;$/;"	m	struct:__anon33	file:	access:public
__anon33::sampsToGo	.\portaudio\pa_tests\patest1.c	/^    int sampsToGo;$/;"	m	struct:__anon33	file:	access:public
__anon33::sine	.\portaudio\pa_tests\patest1.c	/^    float sine[100];$/;"	m	struct:__anon33	file:	access:public
__anon34::left_phase	.\portaudio\pa_tests\patest_latency.c	/^    float left_phase;$/;"	m	struct:__anon34	file:	access:public
__anon34::phase_increment	.\portaudio\pa_tests\patest_latency.c	/^    float phase_increment;$/;"	m	struct:__anon34	file:	access:public
__anon34::right_phase	.\portaudio\pa_tests\patest_latency.c	/^    float right_phase;$/;"	m	struct:__anon34	file:	access:public
__anon34::sine	.\portaudio\pa_tests\patest_latency.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon34	file:	access:public
__anon35::countDown	.\portaudio\pa_tests\patest_leftright.c	/^    int countDown;$/;"	m	struct:__anon35	file:	access:public
__anon35::left_phase	.\portaudio\pa_tests\patest_leftright.c	/^    int left_phase;$/;"	m	struct:__anon35	file:	access:public
__anon35::right_phase	.\portaudio\pa_tests\patest_leftright.c	/^    int right_phase;$/;"	m	struct:__anon35	file:	access:public
__anon35::sine	.\portaudio\pa_tests\patest_leftright.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon35	file:	access:public
__anon35::toggle	.\portaudio\pa_tests\patest_leftright.c	/^    int toggle;$/;"	m	struct:__anon35	file:	access:public
__anon36::left_phase	.\portaudio\pa_tests\patest_longsine.c	/^    int left_phase;$/;"	m	struct:__anon36	file:	access:public
__anon36::right_phase	.\portaudio\pa_tests\patest_longsine.c	/^    int right_phase;$/;"	m	struct:__anon36	file:	access:public
__anon36::sine	.\portaudio\pa_tests\patest_longsine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon36	file:	access:public
__anon37::left_phase	.\portaudio\pa_tests\patest_many.c	/^    int left_phase;$/;"	m	struct:__anon37	file:	access:public
__anon37::right_phase	.\portaudio\pa_tests\patest_many.c	/^    int right_phase;$/;"	m	struct:__anon37	file:	access:public
__anon37::sampsToGo	.\portaudio\pa_tests\patest_many.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon37	file:	access:public
__anon37::sine	.\portaudio\pa_tests\patest_many.c	/^    short sine[TABLE_SIZE];$/;"	m	struct:__anon37	file:	access:public
__anon38::pink_Index	.\portaudio\pa_tests\patest_pink.c	/^    int       pink_Index;        \/* Incremented each sample. *\/$/;"	m	struct:__anon38	file:	access:public
__anon38::pink_IndexMask	.\portaudio\pa_tests\patest_pink.c	/^    int       pink_IndexMask;    \/* Index wrapped by ANDing with this mask. *\/$/;"	m	struct:__anon38	file:	access:public
__anon38::pink_Rows	.\portaudio\pa_tests\patest_pink.c	/^    long      pink_Rows[PINK_MAX_RANDOM_ROWS];$/;"	m	struct:__anon38	file:	access:public
__anon38::pink_RunningSum	.\portaudio\pa_tests\patest_pink.c	/^    long      pink_RunningSum;   \/* Used to optimize summing of generators. *\/$/;"	m	struct:__anon38	file:	access:public
__anon38::pink_Scalar	.\portaudio\pa_tests\patest_pink.c	/^    float     pink_Scalar;       \/* Used to scale within range of -1.0 to +1.0 *\/$/;"	m	struct:__anon38	file:	access:public
__anon39::leftPink	.\portaudio\pa_tests\patest_pink.c	/^    PinkNoise   leftPink;$/;"	m	struct:__anon39	file:	access:public
__anon39::rightPink	.\portaudio\pa_tests\patest_pink.c	/^    PinkNoise   rightPink;$/;"	m	struct:__anon39	file:	access:public
__anon39::sampsToGo	.\portaudio\pa_tests\patest_pink.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon39	file:	access:public
__anon3::numChannels	.\pa_tests\debug_multi_out.c	/^    int      numChannels;$/;"	m	struct:__anon3	file:	access:public
__anon3::phases	.\pa_tests\debug_multi_out.c	/^    double   phases[MAX_CHANNELS];$/;"	m	struct:__anon3	file:	access:public
__anon40::frameIndex	.\portaudio\pa_tests\patest_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon40	file:	access:public
__anon40::maxFrameIndex	.\portaudio\pa_tests\patest_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon40	file:	access:public
__anon40::recordedSamples	.\portaudio\pa_tests\patest_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon40	file:	access:public
__anon41::left_phase	.\portaudio\pa_tests\patest_saw.c	/^    float left_phase;$/;"	m	struct:__anon41	file:	access:public
__anon41::right_phase	.\portaudio\pa_tests\patest_saw.c	/^    float right_phase;$/;"	m	struct:__anon41	file:	access:public
__anon42::left_phase	.\portaudio\pa_tests\patest_sine.c	/^    int left_phase;$/;"	m	struct:__anon42	file:	access:public
__anon42::right_phase	.\portaudio\pa_tests\patest_sine.c	/^    int right_phase;$/;"	m	struct:__anon42	file:	access:public
__anon42::sine	.\portaudio\pa_tests\patest_sine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon42	file:	access:public
__anon43::framesToGo	.\portaudio\pa_tests\patest_sine8.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon43	file:	access:public
__anon43::left_phase	.\portaudio\pa_tests\patest_sine8.c	/^    int left_phase;$/;"	m	struct:__anon43	file:	access:public
__anon43::right_phase	.\portaudio\pa_tests\patest_sine8.c	/^    int right_phase;$/;"	m	struct:__anon43	file:	access:public
__anon43::sine	.\portaudio\pa_tests\patest_sine8.c	/^    unsigned char sine[TABLE_SIZE];$/;"	m	struct:__anon43	file:	access:public
__anon44::framesToGo	.\portaudio\pa_tests\patest_sine_time.c	/^    int           framesToGo;$/;"	m	struct:__anon44	file:	access:public
__anon44::left_phase	.\portaudio\pa_tests\patest_sine_time.c	/^    int           left_phase;$/;"	m	struct:__anon44	file:	access:public
__anon44::outTime	.\portaudio\pa_tests\patest_sine_time.c	/^    volatile PaTimestamp   outTime;$/;"	m	struct:__anon44	file:	access:public
__anon44::right_phase	.\portaudio\pa_tests\patest_sine_time.c	/^    int           right_phase;$/;"	m	struct:__anon44	file:	access:public
__anon44::sine	.\portaudio\pa_tests\patest_sine_time.c	/^    float         sine[TABLE_SIZE];$/;"	m	struct:__anon44	file:	access:public
__anon45::done	.\portaudio\pa_tests\patest_stop.c	/^    int    done;$/;"	m	struct:__anon45	file:	access:public
__anon45::frameCounter	.\portaudio\pa_tests\patest_stop.c	/^    int    frameCounter;$/;"	m	struct:__anon45	file:	access:public
__anon45::noteCounter	.\portaudio\pa_tests\patest_stop.c	/^    int    noteCounter;$/;"	m	struct:__anon45	file:	access:public
__anon45::notesPerTune	.\portaudio\pa_tests\patest_stop.c	/^    int    notesPerTune;$/;"	m	struct:__anon45	file:	access:public
__anon45::outTime	.\portaudio\pa_tests\patest_stop.c	/^    PaTimestamp    outTime;$/;"	m	struct:__anon45	file:	access:public
__anon45::phase	.\portaudio\pa_tests\patest_stop.c	/^    float  phase;$/;"	m	struct:__anon45	file:	access:public
__anon45::phase_increment	.\portaudio\pa_tests\patest_stop.c	/^    float  phase_increment;$/;"	m	struct:__anon45	file:	access:public
__anon45::repeatCounter	.\portaudio\pa_tests\patest_stop.c	/^    int    repeatCounter;$/;"	m	struct:__anon45	file:	access:public
__anon45::stopMode	.\portaudio\pa_tests\patest_stop.c	/^    int    stopMode;$/;"	m	struct:__anon45	file:	access:public
__anon45::tune	.\portaudio\pa_tests\patest_stop.c	/^    float *tune;$/;"	m	struct:__anon45	file:	access:public
__anon45::waveform	.\portaudio\pa_tests\patest_stop.c	/^    float  waveform[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon45	file:	access:public
__anon46::beepCount	.\portaudio\pa_tests\patest_sync.c	/^    int          beepCount;$/;"	m	struct:__anon46	file:	access:public
__anon46::beepTime	.\portaudio\pa_tests\patest_sync.c	/^    PaTimestamp  beepTime;$/;"	m	struct:__anon46	file:	access:public
__anon46::left_phase	.\portaudio\pa_tests\patest_sync.c	/^    float        left_phase;$/;"	m	struct:__anon46	file:	access:public
__anon46::requestBeep	.\portaudio\pa_tests\patest_sync.c	/^    int          requestBeep;  \/* Set by foreground, cleared by background. *\/$/;"	m	struct:__anon46	file:	access:public
__anon46::right_phase	.\portaudio\pa_tests\patest_sync.c	/^    float        right_phase;$/;"	m	struct:__anon46	file:	access:public
__anon46::state	.\portaudio\pa_tests\patest_sync.c	/^    int          state;$/;"	m	struct:__anon46	file:	access:public
__anon47::left_phase	.\portaudio\pa_tests\pa_minlat.c	/^    double left_phase;$/;"	m	struct:__anon47	file:	access:public
__anon47::right_phase	.\portaudio\pa_tests\pa_minlat.c	/^    double right_phase;$/;"	m	struct:__anon47	file:	access:public
__anon48::dsw_BytesPerFrame	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    INT                  dsw_BytesPerFrame;$/;"	m	struct:__anon48	access:public
__anon48::dsw_CounterTicksPerBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LARGE_INTEGER        dsw_CounterTicksPerBuffer; \/* counter ticks it should take to play a full buffer *\/$/;"	m	struct:__anon48	access:public
__anon48::dsw_FramesPlayed	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    double               dsw_FramesPlayed;$/;"	m	struct:__anon48	access:public
__anon48::dsw_FramesWritten	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    double               dsw_FramesWritten;$/;"	m	struct:__anon48	access:public
__anon48::dsw_InputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUNDCAPTUREBUFFER   dsw_InputBuffer;$/;"	m	struct:__anon48	access:public
__anon48::dsw_InputSize	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_InputSize;$/;"	m	struct:__anon48	access:public
__anon48::dsw_LastPlayCursor	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_LastPlayCursor;$/;"	m	struct:__anon48	access:public
__anon48::dsw_LastPlayTime	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LARGE_INTEGER        dsw_LastPlayTime;$/;"	m	struct:__anon48	access:public
__anon48::dsw_OutputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUNDBUFFER  dsw_OutputBuffer;$/;"	m	struct:__anon48	access:public
__anon48::dsw_OutputRunning	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    BOOL                 dsw_OutputRunning;$/;"	m	struct:__anon48	access:public
__anon48::dsw_OutputSize	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    INT                  dsw_OutputSize;$/;"	m	struct:__anon48	access:public
__anon48::dsw_OutputUnderflows	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_OutputUnderflows;$/;"	m	struct:__anon48	access:public
__anon48::dsw_ReadOffset	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_ReadOffset;      \/* last read position *\/$/;"	m	struct:__anon48	access:public
__anon48::dsw_WriteOffset	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    DWORD                dsw_WriteOffset;     \/* last write position *\/$/;"	m	struct:__anon48	access:public
__anon48::dsw_pDirectSound	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUND        dsw_pDirectSound;$/;"	m	struct:__anon48	access:public
__anon48::dsw_pDirectSoundCapture	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUNDCAPTURE dsw_pDirectSoundCapture;$/;"	m	struct:__anon48	access:public
__anon4::frameIndex	.\pa_tests\debug_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon4	file:	access:public
__anon4::maxFrameIndex	.\pa_tests\debug_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon4	file:	access:public
__anon4::recordedSamples	.\pa_tests\debug_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon4	file:	access:public
__anon5::framesToGo	.\pa_tests\debug_sine.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon5	file:	access:public
__anon5::left_phase	.\pa_tests\debug_sine.c	/^    float left_phase;$/;"	m	struct:__anon5	file:	access:public
__anon5::phase_increment	.\pa_tests\debug_sine.c	/^    float phase_increment;$/;"	m	struct:__anon5	file:	access:public
__anon5::right_phase	.\pa_tests\debug_sine.c	/^    float right_phase;$/;"	m	struct:__anon5	file:	access:public
__anon5::sine	.\pa_tests\debug_sine.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon5	file:	access:public
__anon6::phase	.\pa_tests\debug_test1.c	/^    int phase;$/;"	m	struct:__anon6	file:	access:public
__anon6::sampsToGo	.\pa_tests\debug_test1.c	/^    int sampsToGo;$/;"	m	struct:__anon6	file:	access:public
__anon6::sine	.\pa_tests\debug_test1.c	/^    float sine[100];$/;"	m	struct:__anon6	file:	access:public
__anon7::phase	.\pa_tests\patest1.c	/^    int phase;$/;"	m	struct:__anon7	file:	access:public
__anon7::sampsToGo	.\pa_tests\patest1.c	/^    int sampsToGo;$/;"	m	struct:__anon7	file:	access:public
__anon7::sine	.\pa_tests\patest1.c	/^    float sine[100];$/;"	m	struct:__anon7	file:	access:public
__anon8::left_phase	.\pa_tests\patest_latency.c	/^    float left_phase;$/;"	m	struct:__anon8	file:	access:public
__anon8::phase_increment	.\pa_tests\patest_latency.c	/^    float phase_increment;$/;"	m	struct:__anon8	file:	access:public
__anon8::right_phase	.\pa_tests\patest_latency.c	/^    float right_phase;$/;"	m	struct:__anon8	file:	access:public
__anon8::sine	.\pa_tests\patest_latency.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon8	file:	access:public
__anon9::countDown	.\pa_tests\patest_leftright.c	/^    int countDown;$/;"	m	struct:__anon9	file:	access:public
__anon9::left_phase	.\pa_tests\patest_leftright.c	/^    int left_phase;$/;"	m	struct:__anon9	file:	access:public
__anon9::right_phase	.\pa_tests\patest_leftright.c	/^    int right_phase;$/;"	m	struct:__anon9	file:	access:public
__anon9::sine	.\pa_tests\patest_leftright.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon9	file:	access:public
__anon9::toggle	.\pa_tests\patest_leftright.c	/^    int toggle;$/;"	m	struct:__anon9	file:	access:public
abortEvent	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HANDLE             abortEvent;$/;"	m	struct:PaWMMEStreamData	file:	access:public
abortEventInited	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                abortEventInited;$/;"	m	struct:PaWMMEStreamData	file:	access:public
amplitude	.\pa_tests\patest_clip.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
amplitude	.\pa_tests\patest_dither.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
amplitude	.\portaudio\pa_tests\patest_clip.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
amplitude	.\portaudio\pa_tests\patest_dither.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
audioDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioDeviceID      audioDeviceID; \/* CoreAudio specific ID *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
audioDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioDeviceID     audioDeviceID;$/;"	m	struct:PaHostDeviceInfo	file:	access:public
audioDeviceID	.\portmixer\px_mac_core\px_mac_core.c	/^    AudioDeviceID      audioDeviceID; \/* CoreAudio specific ID *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
beepCount	.\pa_tests\patest_sync.c	/^    int          beepCount;$/;"	m	struct:__anon20	file:	access:public
beepCount	.\portaudio\pa_tests\patest_sync.c	/^    int          beepCount;$/;"	m	struct:__anon46	file:	access:public
beepTime	.\pa_tests\patest_sync.c	/^    PaTimestamp  beepTime;$/;"	m	struct:__anon20	file:	access:public
beepTime	.\portaudio\pa_tests\patest_sync.c	/^    PaTimestamp  beepTime;$/;"	m	struct:__anon46	file:	access:public
bigMask	.\portaudio\pablio\ringbuffer.h	/^    long   bigMask;    \/* Used for wrapping indices with extra bit to distinguish full\/empty. *\/$/;"	m	struct:__anon23	access:public
blockingIOCallback	.\portaudio\pablio\pablio.c	/^static int blockingIOCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
blockingIOCallback	.\portaudio\pablio\pablio.c	/^static int blockingIOCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
buffer	.\portaudio\pablio\ringbuffer.h	/^    char *buffer;$/;"	m	struct:__anon23	access:public
bufferEvent	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HANDLE             bufferEvent;$/;"	m	struct:PaWMMEStreamData	file:	access:public
bufferEventInited	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bufferEventInited;$/;"	m	struct:PaWMMEStreamData	file:	access:public
bufferSize	.\portaudio\pablio\ringbuffer.h	/^    long   bufferSize; \/* Number of bytes in FIFO. Power of 2. Set by RingBuffer_Init. *\/$/;"	m	struct:__anon23	access:public
buffers	.\portaudio\pa_mac\pa_mac.c	/^    char    *buffers[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:MultiBuffer	file:	access:public
buffers	.\portmixer\px_mac\px_mac.c	/^    char    *buffers[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:MultiBuffer	file:	access:public
bytesPerFrame	.\portaudio\pablio\pablio.h	/^    int          bytesPerFrame;$/;"	m	struct:__anon22	access:public
bytesPerHostInputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerHostInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
bytesPerHostInputBuffer	.\portmixer\px_win_wmme\px_win_wmme.c	/^    int                bytesPerHostInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
bytesPerHostOutputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerHostOutputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
bytesPerSample	.\pa_tests\paqa_devs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
bytesPerSample	.\pa_tests\paqa_errs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
bytesPerSample	.\portaudio\pa_tests\paqa_devs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
bytesPerSample	.\portaudio\pa_tests\paqa_errs.c	/^    int            bytesPerSample;$/;"	m	struct:PaQaData	file:	access:public
bytesPerUserInputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerUserInputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
bytesPerUserInputBuffer	.\portmixer\px_win_wmme\px_win_wmme.c	/^    int                bytesPerUserInputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
bytesPerUserNativeBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    int                bytesPerUserNativeBuffer; \/* User buffer size in native host format. Depends on numChannels. *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
bytesPerUserNativeBuffer	.\portmixer\px_mac_core\px_mac_core.c	/^    int                bytesPerUserNativeBuffer; \/* User buffer size in native host format. Depends on numChannels. *\/$/;"	m	struct:PaHostInOut_s	file:	access:public
bytesPerUserOutputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                bytesPerUserOutputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
controlID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD controlID;$/;"	m	struct:PxSrcInfo	file:	access:public
converter	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioConverterRef  converter;$/;"	m	struct:PaHostInOut_s	file:	access:public
converter	.\portmixer\px_mac_core\px_mac_core.c	/^    AudioConverterRef  converter;$/;"	m	struct:PaHostInOut_s	file:	access:public
converterBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    void              *converterBuffer;$/;"	m	struct:PaHostInOut_s	file:	access:public
converterBuffer	.\portmixer\px_mac_core\px_mac_core.c	/^    void              *converterBuffer;$/;"	m	struct:PaHostInOut_s	file:	access:public
countDown	.\pa_tests\patest_leftright.c	/^    int countDown;$/;"	m	struct:__anon9	file:	access:public
countDown	.\portaudio\pa_tests\patest_leftright.c	/^    int countDown;$/;"	m	struct:__anon35	file:	access:public
currentInputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                currentInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
currentInputBuffer	.\portmixer\px_win_wmme\px_win_wmme.c	/^    int                currentInputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
currentOutputBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                currentOutputBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
data	.\pa_tests\patest_saw.c	/^static paTestData data;$/;"	v	file:
data	.\portaudio\pa_tests\patest_saw.c	/^static paTestData data;$/;"	v	file:
data	.\portaudio\pa_unix_oss\pa_unix.h	/^    unsigned long data;$/;"	m	struct:PaDriverInfo	access:public
done	.\pa_tests\patest_stop.c	/^    int    done;$/;"	m	struct:__anon19	file:	access:public
done	.\portaudio\pa_tests\patest_stop.c	/^    int    done;$/;"	m	struct:__anon45	file:	access:public
dsw_BytesPerFrame	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    INT                  dsw_BytesPerFrame;$/;"	m	struct:__anon48	access:public
dsw_CounterTicksPerBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LARGE_INTEGER        dsw_CounterTicksPerBuffer; \/* counter ticks it should take to play a full buffer *\/$/;"	m	struct:__anon48	access:public
dsw_FramesPlayed	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    double               dsw_FramesPlayed;$/;"	m	struct:__anon48	access:public
dsw_FramesWritten	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    double               dsw_FramesWritten;$/;"	m	struct:__anon48	access:public
dsw_InputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUNDCAPTUREBUFFER   dsw_InputBuffer;$/;"	m	struct:__anon48	access:public
dsw_InputSize	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_InputSize;$/;"	m	struct:__anon48	access:public
dsw_LastPlayCursor	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_LastPlayCursor;$/;"	m	struct:__anon48	access:public
dsw_LastPlayTime	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LARGE_INTEGER        dsw_LastPlayTime;$/;"	m	struct:__anon48	access:public
dsw_OutputBuffer	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUNDBUFFER  dsw_OutputBuffer;$/;"	m	struct:__anon48	access:public
dsw_OutputRunning	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    BOOL                 dsw_OutputRunning;$/;"	m	struct:__anon48	access:public
dsw_OutputSize	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    INT                  dsw_OutputSize;$/;"	m	struct:__anon48	access:public
dsw_OutputUnderflows	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_OutputUnderflows;$/;"	m	struct:__anon48	access:public
dsw_ReadOffset	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    UINT                 dsw_ReadOffset;      \/* last read position *\/$/;"	m	struct:__anon48	access:public
dsw_WriteOffset	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    DWORD                dsw_WriteOffset;     \/* last write position *\/$/;"	m	struct:__anon48	access:public
dsw_pDirectSound	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUND        dsw_pDirectSound;$/;"	m	struct:__anon48	access:public
dsw_pDirectSoundCapture	.\portaudio\pa_win_ds\dsound_wrapper.h	/^    LPDIRECTSOUNDCAPTURE dsw_pDirectSoundCapture;$/;"	m	struct:__anon48	access:public
dummy	.\portmixer\px_none\px_none.c	/^  int dummy;$/;"	m	struct:PxInfo	file:	access:public
engineThread	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HANDLE             engineThread;$/;"	m	struct:PaWMMEStreamData	file:	access:public
engineThreadID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    DWORD              engineThreadID;$/;"	m	struct:PaWMMEStreamData	file:	access:public
entryCount	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    LARGE_INTEGER      entryCount;$/;"	m	struct:PaWMMEStreamData	file:	access:public
entryRusage	.\portaudio\pa_mac_core\pa_mac_core.c	/^    struct rusage      entryRusage;$/;"	m	struct:PaHostSoundControl	typeref:struct:PaHostSoundControl::rusage	file:	access:public
fd	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int fd;$/;"	m	struct:PxInfo	file:	access:public
format	.\pa_tests\paqa_devs.c	/^    PaSampleFormat format;$/;"	m	struct:PaQaData	file:	access:public
format	.\portaudio\pa_tests\paqa_devs.c	/^    PaSampleFormat format;$/;"	m	struct:PaQaData	file:	access:public
formatListenerCalled	.\portaudio\pa_mac_core\pa_mac_core.c	/^    Boolean            formatListenerCalled;$/;"	m	struct:PaHostSoundControl	file:	access:public
frameCounter	.\pa_tests\patest_stop.c	/^    int    frameCounter;$/;"	m	struct:__anon19	file:	access:public
frameCounter	.\portaudio\pa_tests\patest_stop.c	/^    int    frameCounter;$/;"	m	struct:__anon45	file:	access:public
frameIndex	.\pa_tests\debug_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon4	file:	access:public
frameIndex	.\pa_tests\patest_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon14	file:	access:public
frameIndex	.\portaudio\pa_tests\debug_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon30	file:	access:public
frameIndex	.\portaudio\pa_tests\patest_record.c	/^    int          frameIndex;  \/* Index into sample array. *\/$/;"	m	struct:__anon40	file:	access:public
framesLeft	.\pa_tests\paqa_devs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
framesLeft	.\pa_tests\paqa_errs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
framesLeft	.\portaudio\pa_tests\paqa_devs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
framesLeft	.\portaudio\pa_tests\paqa_errs.c	/^    unsigned long  framesLeft;$/;"	m	struct:PaQaData	file:	access:public
framesPerHostBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                framesPerHostBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
framesPlayed	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    PaTimestamp        framesPlayed;$/;"	m	struct:PaWMMEStreamData	file:	access:public
framesToGo	.\pa_tests\debug_sine.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon5	file:	access:public
framesToGo	.\pa_tests\patest_sine8.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon17	file:	access:public
framesToGo	.\pa_tests\patest_sine_time.c	/^    int           framesToGo;$/;"	m	struct:__anon18	file:	access:public
framesToGo	.\portaudio\pa_tests\debug_sine.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon31	file:	access:public
framesToGo	.\portaudio\pa_tests\patest_sine8.c	/^    unsigned int framesToGo;$/;"	m	struct:__anon43	file:	access:public
framesToGo	.\portaudio\pa_tests\patest_sine_time.c	/^    int           framesToGo;$/;"	m	struct:__anon44	file:	access:public
fuzzCallback	.\pa_tests\pa_fuzz.c	/^static int fuzzCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
fuzzCallback	.\pa_tests\pa_fuzz.c	/^static int fuzzCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
fuzzCallback	.\portaudio\pa_tests\pa_fuzz.c	/^static int fuzzCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
fuzzCallback	.\portaudio\pa_tests\pa_fuzz.c	/^static int fuzzCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
gInitCount	.\portaudio\pa_common\pa_lib.c	/^static int gInitCount = 0; \/* Count number of times Pa_Initialize() called to allow nesting and overlapping. *\/$/;"	v	file:
gNumFailed	.\pa_tests\paqa_devs.c	/^static int gNumFailed = 0;$/;"	v	file:
gNumFailed	.\pa_tests\paqa_errs.c	/^static int gNumFailed = 0;$/;"	v	file:
gNumFailed	.\portaudio\pa_tests\paqa_devs.c	/^static int gNumFailed = 0;$/;"	v	file:
gNumFailed	.\portaudio\pa_tests\paqa_errs.c	/^static int gNumFailed = 0;$/;"	v	file:
gNumNoInputs	.\pa_tests\pa_fuzz.c	/^static int gNumNoInputs = 0;$/;"	v	file:
gNumNoInputs	.\portaudio\pa_tests\pa_fuzz.c	/^static int gNumNoInputs = 0;$/;"	v	file:
gNumPassed	.\pa_tests\paqa_devs.c	/^static int gNumPassed = 0;$/;"	v	file:
gNumPassed	.\pa_tests\paqa_errs.c	/^static int gNumPassed = 0;$/;"	v	file:
gNumPassed	.\portaudio\pa_tests\paqa_devs.c	/^static int gNumPassed = 0;$/;"	v	file:
gNumPassed	.\portaudio\pa_tests\paqa_errs.c	/^static int gNumPassed = 0;$/;"	v	file:
gPlayCounter	.\portaudio\pa_mac\pa_mac.c	/^int gPlayCounter = 0;$/;"	v
gRecordCounter	.\portaudio\pa_mac\pa_mac.c	/^int gRecordCounter = 0;$/;"	v
gUnderCallbackCounter	.\portaudio\pa_win_ds\pa_dsound.c	/^static  gUnderCallbackCounter = 0;$/;"	v	file:
gUnderCallbackCounter	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static  gUnderCallbackCounter = 0;$/;"	v	file:
getvolarg	.\portmixer\px_tests\px_test.c	/^float getvolarg(const char *p)$/;"	f	signature:(const char *p)
getvolarg	.\px_tests\px_test.c	/^float getvolarg(const char *p)$/;"	f	signature:(const char *p)
hInputMixer	.\portmixer\px_win_wmme\px_win_wmme.c	/^   HMIXEROBJ   hInputMixer;$/;"	m	struct:PxInfo	file:	access:public
hOutputMixer	.\portmixer\px_win_wmme\px_win_wmme.c	/^   HMIXEROBJ   hOutputMixer;$/;"	m	struct:PxInfo	file:	access:public
hWaveIn	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HWAVEIN            hWaveIn;$/;"	m	struct:PaWMMEStreamData	file:	access:public
hWaveIn	.\portmixer\px_win_wmme\px_win_wmme.c	/^    HWAVEIN            hWaveIn;$/;"	m	struct:PaWMMEStreamData	file:	access:public
hWaveOut	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    HWAVEOUT           hWaveOut;$/;"	m	struct:PaWMMEStreamData	file:	access:public
hWaveOut	.\portmixer\px_win_wmme\px_win_wmme.c	/^    HWAVEOUT           hWaveOut;$/;"	m	struct:PaWMMEStreamData	file:	access:public
ifInsideCallback	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    BOOL               ifInsideCallback;            \/* Test for reentrancy. *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
inFIFO	.\portaudio\pablio\pablio.h	/^    RingBuffer   inFIFO;$/;"	m	struct:__anon22	access:public
index	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int index;$/;"	m	struct:PxInfo	file:	access:public
input	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaHostInOut        input;$/;"	m	struct:PaHostSoundControl	file:	access:public
input	.\portmixer\px_mac\px_mac.c	/^   SPB           *input;$/;"	m	struct:PxInfo	file:	access:public
input	.\portmixer\px_mac_core\px_mac_core.c	/^    PaHostInOut        input;$/;"	m	struct:PaHostSoundControl	file:	access:public
input	.\portmixer\px_mac_core\px_mac_core.c	/^   AudioDeviceID   input;$/;"	m	struct:PxInfo	file:	access:public
inputBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    WAVEHDR           *inputBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
inputBuffers	.\portmixer\px_win_wmme\px_win_wmme.c	/^    WAVEHDR           *inputBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
inputRefNum	.\portmixer\px_mac\px_mac.c	/^   int32          inputRefNum;$/;"	m	struct:PxInfo	file:	access:public
int16	.\portaudio\pa_common\pa_host.h	/^    typedef short int16;$/;"	t
int32	.\portaudio\pa_common\pa_host.h	/^    typedef long int32;$/;"	t
internalPortAudioDevice	.\portaudio\pa_mac\pa_mac.c	/^internalPortAudioDevice;$/;"	t	typeref:struct:internalPortAudioDevice	file:
internalPortAudioDevice	.\portaudio\pa_mac\pa_mac.c	/^typedef struct internalPortAudioDevice$/;"	s	file:
internalPortAudioDevice	.\portaudio\pa_unix_oss\pa_unix.h	/^internalPortAudioDevice;$/;"	t	typeref:struct:internalPortAudioDevice
internalPortAudioDevice	.\portaudio\pa_unix_oss\pa_unix.h	/^typedef struct internalPortAudioDevice$/;"	s
internalPortAudioDevice	.\portaudio\pa_win_ds\pa_dsound.c	/^internalPortAudioDevice;$/;"	t	typeref:struct:internalPortAudioDevice	file:
internalPortAudioDevice	.\portaudio\pa_win_ds\pa_dsound.c	/^typedef struct internalPortAudioDevice$/;"	s	file:
internalPortAudioDevice::pad_DeviceBufferSize	.\portaudio\pa_mac\pa_mac.c	/^    long                    pad_DeviceBufferSize;$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioDevice::pad_DeviceName	.\portaudio\pa_unix_oss\pa_unix.h	/^    char            pad_DeviceName[MAX_CHARS_DEVNAME];$/;"	m	struct:internalPortAudioDevice	access:public
internalPortAudioDevice::pad_DeviceRefNum	.\portaudio\pa_mac\pa_mac.c	/^    long                    pad_DeviceRefNum;$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioDevice::pad_GUID	.\portaudio\pa_win_ds\pa_dsound.c	/^    GUID                             pad_GUID;$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioDevice::pad_Identifier	.\portaudio\pa_mac\pa_mac.c	/^    Component               pad_Identifier;$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioDevice::pad_Info	.\portaudio\pa_mac\pa_mac.c	/^    PaDeviceInfo            pad_Info;$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioDevice::pad_Info	.\portaudio\pa_unix_oss\pa_unix.h	/^    PaDeviceInfo    pad_Info;$/;"	m	struct:internalPortAudioDevice	access:public
internalPortAudioDevice::pad_Info	.\portaudio\pa_win_ds\pa_dsound.c	/^    PaDeviceInfo                     pad_Info;$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioDevice::pad_Next	.\portaudio\pa_unix_oss\pa_unix.h	/^    struct internalPortAudioDevice *pad_Next; \/* Singly linked list. *\/$/;"	m	struct:internalPortAudioDevice	typeref:struct:internalPortAudioDevice::internalPortAudioDevice	access:public
internalPortAudioDevice::pad_SampleRates	.\portaudio\pa_unix_oss\pa_unix.h	/^    double          pad_SampleRates[MAX_SAMPLE_RATES]; \/* for pointing to from pad_Info *\/$/;"	m	struct:internalPortAudioDevice	access:public
internalPortAudioDevice::pad_SampleRates	.\portaudio\pa_win_ds\pa_dsound.c	/^    double                           pad_SampleRates[10]; \/* for pointing to from pad_Info FIXME?!*\/$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioDevice::pad_lpGUID	.\portaudio\pa_win_ds\pa_dsound.c	/^    GUID                            *pad_lpGUID;$/;"	m	struct:internalPortAudioDevice	file:	access:public
internalPortAudioStream	.\portaudio\pa_common\pa_host.h	/^internalPortAudioStream;$/;"	t	typeref:struct:internalPortAudioStream
internalPortAudioStream	.\portaudio\pa_common\pa_host.h	/^typedef struct internalPortAudioStream$/;"	s
internalPortAudioStream	.\portaudio\pa_win_ds\pa_dsound.c	/^typedef struct internalPortAudioStream internalPortAudioStream;$/;"	t	typeref:struct:internalPortAudioStream	file:
internalPortAudioStream::past_AverageInsideCount	.\portaudio\pa_common\pa_host.h	/^    double                    past_AverageInsideCount;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_AverageTotalCount	.\portaudio\pa_common\pa_host.h	/^    double                    past_AverageTotalCount;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_Callback	.\portaudio\pa_common\pa_host.h	/^    PortAudioCallback        *past_Callback;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_DeviceData	.\portaudio\pa_common\pa_host.h	/^    void                     *past_DeviceData;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_Flags	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_Flags;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_FrameCount	.\portaudio\pa_common\pa_host.h	/^    PaTimestamp               past_FrameCount;    \/* Frames output to buffer. *\/$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_FramesPerUserBuffer	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_FramesPerUserBuffer;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_IfLastExitValid	.\portaudio\pa_common\pa_host.h	/^    int                       past_IfLastExitValid;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_InputBuffer	.\portaudio\pa_common\pa_host.h	/^    void                     *past_InputBuffer;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_InputBufferSize	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_InputBufferSize; \/* Size in bytes of the input buffer. *\/$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_InputConversionProc	.\portaudio\pa_common\pa_host.h	/^    PortAudioConverter       *past_InputConversionProc;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_InputConversionSourceStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_InputConversionSourceStride;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_InputConversionTargetStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_InputConversionTargetStride;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_InputDeviceID	.\portaudio\pa_common\pa_host.h	/^    PaDeviceID                past_InputDeviceID;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_InputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_InputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_IsActive	.\portaudio\pa_common\pa_host.h	/^    volatile int              past_IsActive;      \/* Background is still playing. *\/$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_Magic	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_Magic;  \/* ID for struct to catch bugs. *\/$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_NativeInputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_NativeInputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_NativeOutputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_NativeOutputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_NumCallbacks	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_NumCallbacks;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_NumInputChannels	.\portaudio\pa_common\pa_host.h	/^    int                       past_NumInputChannels;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_NumOutputChannels	.\portaudio\pa_common\pa_host.h	/^    int                       past_NumOutputChannels;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_NumUserBuffers	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_NumUserBuffers;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_OutputBuffer	.\portaudio\pa_common\pa_host.h	/^    void                     *past_OutputBuffer;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_OutputBufferSize	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_OutputBufferSize;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_OutputConversionProc	.\portaudio\pa_common\pa_host.h	/^    PortAudioConverter       *past_OutputConversionProc;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_OutputConversionSourceStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_OutputConversionSourceStride;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_OutputConversionTargetStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_OutputConversionTargetStride;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_OutputDeviceID	.\portaudio\pa_common\pa_host.h	/^    PaDeviceID                past_OutputDeviceID;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_OutputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_OutputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_SampleRate	.\portaudio\pa_common\pa_host.h	/^    double                    past_SampleRate;     \/* Closest supported sample rate. *\/$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_StopNow	.\portaudio\pa_common\pa_host.h	/^    volatile int              past_StopNow;       \/* Background should stop playing now. *\/$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_StopSoon	.\portaudio\pa_common\pa_host.h	/^    volatile int              past_StopSoon;      \/* Background should keep playing when buffers empty. *\/$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_Usage	.\portaudio\pa_common\pa_host.h	/^    double                    past_Usage;$/;"	m	struct:internalPortAudioStream	access:public
internalPortAudioStream::past_UserData	.\portaudio\pa_common\pa_host.h	/^    void                     *past_UserData;$/;"	m	struct:internalPortAudioStream	access:public
inverseMicrosPerHostBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    double             inverseMicrosPerHostBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
inverseTicksPerHostBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    double             inverseTicksPerHostBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
lastPosition	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    long               lastPosition;                \/* used to track frames played. *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
leftPink	.\pa_tests\patest_pink.c	/^    PinkNoise   leftPink;$/;"	m	struct:__anon13	file:	access:public
leftPink	.\portaudio\pa_tests\patest_pink.c	/^    PinkNoise   leftPink;$/;"	m	struct:__anon39	file:	access:public
left_phase	.\pa_tests\debug_dual.c	/^    float left_phase;$/;"	m	struct:__anon1	file:	access:public
left_phase	.\pa_tests\debug_sine.c	/^    float left_phase;$/;"	m	struct:__anon5	file:	access:public
left_phase	.\pa_tests\pa_minlat.c	/^    double left_phase;$/;"	m	struct:__anon21	file:	access:public
left_phase	.\pa_tests\patest_clip.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
left_phase	.\pa_tests\patest_dither.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
left_phase	.\pa_tests\patest_latency.c	/^    float left_phase;$/;"	m	struct:__anon8	file:	access:public
left_phase	.\pa_tests\patest_leftright.c	/^    int left_phase;$/;"	m	struct:__anon9	file:	access:public
left_phase	.\pa_tests\patest_longsine.c	/^    int left_phase;$/;"	m	struct:__anon10	file:	access:public
left_phase	.\pa_tests\patest_many.c	/^    int left_phase;$/;"	m	struct:__anon11	file:	access:public
left_phase	.\pa_tests\patest_saw.c	/^    float left_phase;$/;"	m	struct:__anon15	file:	access:public
left_phase	.\pa_tests\patest_sine.c	/^    int left_phase;$/;"	m	struct:__anon16	file:	access:public
left_phase	.\pa_tests\patest_sine8.c	/^    int left_phase;$/;"	m	struct:__anon17	file:	access:public
left_phase	.\pa_tests\patest_sine_time.c	/^    int           left_phase;$/;"	m	struct:__anon18	file:	access:public
left_phase	.\pa_tests\patest_sync.c	/^    float        left_phase;$/;"	m	struct:__anon20	file:	access:public
left_phase	.\portaudio\pa_tests\debug_dual.c	/^    float left_phase;$/;"	m	struct:__anon27	file:	access:public
left_phase	.\portaudio\pa_tests\debug_sine.c	/^    float left_phase;$/;"	m	struct:__anon31	file:	access:public
left_phase	.\portaudio\pa_tests\pa_minlat.c	/^    double left_phase;$/;"	m	struct:__anon47	file:	access:public
left_phase	.\portaudio\pa_tests\patest_clip.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
left_phase	.\portaudio\pa_tests\patest_dither.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
left_phase	.\portaudio\pa_tests\patest_latency.c	/^    float left_phase;$/;"	m	struct:__anon34	file:	access:public
left_phase	.\portaudio\pa_tests\patest_leftright.c	/^    int left_phase;$/;"	m	struct:__anon35	file:	access:public
left_phase	.\portaudio\pa_tests\patest_longsine.c	/^    int left_phase;$/;"	m	struct:__anon36	file:	access:public
left_phase	.\portaudio\pa_tests\patest_many.c	/^    int left_phase;$/;"	m	struct:__anon37	file:	access:public
left_phase	.\portaudio\pa_tests\patest_saw.c	/^    float left_phase;$/;"	m	struct:__anon41	file:	access:public
left_phase	.\portaudio\pa_tests\patest_sine.c	/^    int left_phase;$/;"	m	struct:__anon42	file:	access:public
left_phase	.\portaudio\pa_tests\patest_sine8.c	/^    int left_phase;$/;"	m	struct:__anon43	file:	access:public
left_phase	.\portaudio\pa_tests\patest_sine_time.c	/^    int           left_phase;$/;"	m	struct:__anon44	file:	access:public
left_phase	.\portaudio\pa_tests\patest_sync.c	/^    float        left_phase;$/;"	m	struct:__anon46	file:	access:public
lineID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD lineID;$/;"	m	struct:PxSrcInfo	file:	access:public
liveChannel	.\pa_tests\debug_multi_in.c	/^    int      liveChannel;$/;"	m	struct:__anon2	file:	access:public
liveChannel	.\portaudio\pa_tests\debug_multi_in.c	/^    int      liveChannel;$/;"	m	struct:__anon28	file:	access:public
main	.\pa_tests\debug_dual.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\debug_dual.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\debug_multi_in.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\debug_multi_in.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\debug_multi_out.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\debug_multi_out.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\debug_record.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\debug_record.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\debug_sine.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\debug_sine.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\debug_test1.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	.\pa_tests\debug_test1.c	/^int main(int argc, char* argv[]);$/;"	p	file:	signature:(int argc, char* argv[])
main	.\pa_tests\pa_devs.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\pa_devs.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\pa_fuzz.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\pa_fuzz.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\pa_minlat.c	/^void main( int argc, char **argv )$/;"	f	signature:( int argc, char **argv )
main	.\pa_tests\pa_minlat.c	/^void main( int argc, char **argv );$/;"	p	file:	signature:( int argc, char **argv )
main	.\pa_tests\paqa_devs.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\paqa_devs.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\paqa_errs.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\paqa_errs.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest1.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	.\pa_tests\patest1.c	/^int main(int argc, char* argv[]);$/;"	p	file:	signature:(int argc, char* argv[])
main	.\pa_tests\patest_clip.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_clip.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_dither.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_dither.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_latency.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_latency.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_leftright.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_leftright.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_longsine.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_longsine.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_many.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	.\pa_tests\patest_many.c	/^int main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
main	.\pa_tests\patest_many.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_many.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_maxsines.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_maxsines.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_pink.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_pink.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_record.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_record.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_ringmix.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_saw.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_saw.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_sine.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_sine.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_sine8.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_sine8.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_sine_time.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_sine_time.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_stop.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_stop.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_sync.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_sync.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\pa_tests\patest_wire.c	/^int main(void)$/;"	f	signature:(void)
main	.\pa_tests\patest_wire.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_mac\patest_devinfo.c	/^\/*$/;"	f	signature:( void )
main	.\portaudio\pa_mac\patest_devinfo.c	/^\/*$/;"	p	file:	signature:( void )
main	.\portaudio\pa_tests\debug_dual.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\debug_dual.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\debug_multi_in.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\debug_multi_in.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\debug_multi_out.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\debug_multi_out.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\debug_record.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\debug_record.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\debug_sine.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\debug_sine.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\debug_test1.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	.\portaudio\pa_tests\debug_test1.c	/^int main(int argc, char* argv[]);$/;"	p	file:	signature:(int argc, char* argv[])
main	.\portaudio\pa_tests\pa_devs.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\pa_devs.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\pa_fuzz.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\pa_fuzz.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\pa_minlat.c	/^void main( int argc, char **argv )$/;"	f	signature:( int argc, char **argv )
main	.\portaudio\pa_tests\pa_minlat.c	/^void main( int argc, char **argv );$/;"	p	file:	signature:( int argc, char **argv )
main	.\portaudio\pa_tests\paqa_devs.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\paqa_devs.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\paqa_errs.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\paqa_errs.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest1.c	/^int main(int argc, char* argv[])$/;"	f	signature:(int argc, char* argv[])
main	.\portaudio\pa_tests\patest1.c	/^int main(int argc, char* argv[]);$/;"	p	file:	signature:(int argc, char* argv[])
main	.\portaudio\pa_tests\patest_clip.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_clip.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_dither.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_dither.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_latency.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_latency.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_leftright.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_leftright.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_longsine.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_longsine.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_many.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	.\portaudio\pa_tests\patest_many.c	/^int main(int argc, char **argv);$/;"	p	file:	signature:(int argc, char **argv)
main	.\portaudio\pa_tests\patest_many.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_many.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_maxsines.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_maxsines.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_pink.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_pink.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_record.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_record.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_ringmix.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_saw.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_saw.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_sine.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_sine.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_sine8.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_sine8.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_sine_time.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_sine_time.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_stop.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_stop.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_sync.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_sync.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pa_tests\patest_wire.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pa_tests\patest_wire.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pablio\test_rw.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pablio\test_rw.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pablio\test_rw_echo.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pablio\test_rw_echo.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pablio\test_w_saw.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pablio\test_w_saw.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portaudio\pablio\test_w_saw8.c	/^int main(void)$/;"	f	signature:(void)
main	.\portaudio\pablio\test_w_saw8.c	/^int main(void);$/;"	p	file:	signature:(void)
main	.\portmixer\px_tests\px_test.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	.\px_tests\px_test.c	/^int main(int argc, char **argv)$/;"	f	signature:(int argc, char **argv)
main	.\test.c	/^int main(int argc, char *argv[]) {$/;"	f	signature:(int argc, char *argv[])
maxFrameIndex	.\pa_tests\debug_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon4	file:	access:public
maxFrameIndex	.\pa_tests\patest_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon14	file:	access:public
maxFrameIndex	.\portaudio\pa_tests\debug_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon30	file:	access:public
maxFrameIndex	.\portaudio\pa_tests\patest_record.c	/^    int          maxFrameIndex;$/;"	m	struct:__anon40	file:	access:public
maxInputChannels	.\portaudio\pa_common\portaudio.h	/^    int maxInputChannels;$/;"	m	struct:__anon25	access:public
maxOutputChannels	.\portaudio\pa_common\portaudio.h	/^    int maxOutputChannels;$/;"	m	struct:__anon25	access:public
mode	.\pa_tests\paqa_devs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
mode	.\pa_tests\paqa_errs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
mode	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaDeviceMode       mode;$/;"	m	struct:PaHostSoundControl	file:	access:public
mode	.\portaudio\pa_tests\paqa_devs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
mode	.\portaudio\pa_tests\paqa_errs.c	/^    int            mode;$/;"	m	struct:PaQaData	file:	access:public
muxID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD       muxID;$/;"	m	struct:PxInfo	file:	access:public
myCallback	.\pa_tests\patest_ringmix.c	/^static int myCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
myCallback	.\portaudio\pa_tests\patest_ringmix.c	/^static int myCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
name	.\portaudio\pa_common\portaudio.h	/^    const char *name;$/;"	m	struct:__anon25	access:public
name	.\portaudio\pa_unix_oss\pa_unix.h	/^    const char   *name;$/;"	m	struct:PaDriverInfo	access:public
name	.\portmixer\px_mac\px_mac.c	/^   char name[256];$/;"	m	struct:PxSource	file:	access:public
name	.\portmixer\px_win_wmme\px_win_wmme.c	/^   char  name[256];$/;"	m	struct:PxSrcInfo	file:	access:public
nativeSampleFormats	.\portaudio\pa_common\portaudio.h	/^    PaSampleFormat nativeSampleFormats;$/;"	m	struct:__anon25	access:public
nextRead	.\portaudio\pa_mac\pa_mac.c	/^    int      nextRead;$/;"	m	struct:MultiBuffer	file:	access:public
nextRead	.\portmixer\px_mac\px_mac.c	/^    int      nextRead;$/;"	m	struct:MultiBuffer	file:	access:public
nextWrite	.\portaudio\pa_mac\pa_mac.c	/^    int      nextWrite;$/;"	m	struct:MultiBuffer	file:	access:public
nextWrite	.\portmixer\px_mac\px_mac.c	/^    int      nextWrite;$/;"	m	struct:MultiBuffer	file:	access:public
noteCounter	.\pa_tests\patest_stop.c	/^    int    noteCounter;$/;"	m	struct:__anon19	file:	access:public
noteCounter	.\portaudio\pa_tests\patest_stop.c	/^    int    noteCounter;$/;"	m	struct:__anon45	file:	access:public
notesPerTune	.\pa_tests\patest_stop.c	/^    int    notesPerTune;$/;"	m	struct:__anon19	file:	access:public
notesPerTune	.\portaudio\pa_tests\patest_stop.c	/^    int    notesPerTune;$/;"	m	struct:__anon45	file:	access:public
numBuffers	.\portaudio\pa_mac\pa_mac.c	/^    int      numBuffers;$/;"	m	struct:MultiBuffer	file:	access:public
numBuffers	.\portmixer\px_mac\px_mac.c	/^    int      numBuffers;$/;"	m	struct:MultiBuffer	file:	access:public
numChannels	.\pa_tests\debug_multi_in.c	/^    int      numChannels;$/;"	m	struct:__anon2	file:	access:public
numChannels	.\pa_tests\debug_multi_out.c	/^    int      numChannels;$/;"	m	struct:__anon3	file:	access:public
numChannels	.\pa_tests\paqa_devs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
numChannels	.\pa_tests\paqa_errs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
numChannels	.\portaudio\pa_mac_core\pa_mac_core.c	/^    int                numChannels;$/;"	m	struct:PaHostInOut_s	file:	access:public
numChannels	.\portaudio\pa_tests\debug_multi_in.c	/^    int      numChannels;$/;"	m	struct:__anon28	file:	access:public
numChannels	.\portaudio\pa_tests\debug_multi_out.c	/^    int      numChannels;$/;"	m	struct:__anon29	file:	access:public
numChannels	.\portaudio\pa_tests\paqa_devs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
numChannels	.\portaudio\pa_tests\paqa_errs.c	/^    int            numChannels;$/;"	m	struct:PaQaData	file:	access:public
numChannels	.\portmixer\px_mac_core\px_mac_core.c	/^    int                numChannels;$/;"	m	struct:PaHostInOut_s	file:	access:public
numHostBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                numHostBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
numInputs	.\portmixer\px_win_wmme\px_win_wmme.c	/^   int         numInputs;$/;"	m	struct:PxInfo	file:	access:public
numRates	.\portaudio\pa_mac\pa_mac.c	/^    int16                   numRates;$/;"	m	struct:__anon26	file:	access:public
numSampleRates	.\portaudio\pa_common\portaudio.h	/^    int numSampleRates;$/;"	m	struct:__anon25	access:public
numSines	.\pa_tests\patest_maxsines.c	/^    int numSines;$/;"	m	struct:paTestData	file:	access:public
numSines	.\portaudio\pa_tests\patest_maxsines.c	/^    int numSines;$/;"	m	struct:paTestData	file:	access:public
numSources	.\portmixer\px_mac\px_mac.c	/^   int32          numSources;$/;"	m	struct:PxInfo	file:	access:public
num_out	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int num_out;$/;"	m	struct:PxInfo	file:	access:public
num_rec	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int num_rec;$/;"	m	struct:PxInfo	file:	access:public
outFIFO	.\portaudio\pablio\pablio.h	/^    RingBuffer   outFIFO;$/;"	m	struct:__anon22	access:public
outTime	.\pa_tests\patest_sine_time.c	/^    volatile PaTimestamp   outTime;$/;"	m	struct:__anon18	file:	access:public
outTime	.\pa_tests\patest_stop.c	/^    PaTimestamp    outTime;$/;"	m	struct:__anon19	file:	access:public
outTime	.\portaudio\pa_tests\patest_sine_time.c	/^    volatile PaTimestamp   outTime;$/;"	m	struct:__anon44	file:	access:public
outTime	.\portaudio\pa_tests\patest_stop.c	/^    PaTimestamp    outTime;$/;"	m	struct:__anon45	file:	access:public
output	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaHostInOut        output;$/;"	m	struct:PaHostSoundControl	file:	access:public
output	.\portmixer\px_mac\px_mac.c	/^   SndChannelPtr  output;$/;"	m	struct:PxInfo	file:	access:public
output	.\portmixer\px_mac_core\px_mac_core.c	/^    PaHostInOut        output;$/;"	m	struct:PaHostSoundControl	file:	access:public
output	.\portmixer\px_mac_core\px_mac_core.c	/^   AudioDeviceID   output;$/;"	m	struct:PxInfo	file:	access:public
outputBuffers	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    WAVEHDR           *outputBuffers;$/;"	m	struct:PaWMMEStreamData	file:	access:public
outs	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int outs[SOUND_MIXER_NRDEVICES];$/;"	m	struct:PxInfo	file:	access:public
paBadIODeviceCombination	.\portaudio\pa_common\portaudio.h	/^    paBadIODeviceCombination,$/;"	e	enum:__anon24
paBadStreamPtr	.\portaudio\pa_common\portaudio.h	/^    paBadStreamPtr,$/;"	e	enum:__anon24
paBufferTooBig	.\portaudio\pa_common\portaudio.h	/^    paBufferTooBig,$/;"	e	enum:__anon24
paBufferTooSmall	.\portaudio\pa_common\portaudio.h	/^    paBufferTooSmall,$/;"	e	enum:__anon24
paClipOff	.\portaudio\pa_common\portaudio.h	236;"	d
paCustomFormat	.\portaudio\pa_common\portaudio.h	120;"	d
paDeviceUnavailable	.\portaudio\pa_common\portaudio.h	/^    paDeviceUnavailable$/;"	e	enum:__anon24
paDitherOff	.\portaudio\pa_common\portaudio.h	237;"	d
paFloat32	.\portaudio\pa_common\portaudio.h	113;"	d
paHostError	.\portaudio\pa_common\portaudio.h	/^    paHostError = -10000,$/;"	e	enum:__anon24
paInfo	.\portaudio\pa_mac_core\pa_mac_core.c	/^    PaDeviceInfo      paInfo;$/;"	m	struct:PaHostDeviceInfo	file:	access:public
paInsufficientMemory	.\portaudio\pa_common\portaudio.h	/^    paInsufficientMemory,$/;"	e	enum:__anon24
paInt16	.\portaudio\pa_common\portaudio.h	114;"	d
paInt24	.\portaudio\pa_common\portaudio.h	116;"	d
paInt32	.\portaudio\pa_common\portaudio.h	115;"	d
paInt8	.\portaudio\pa_common\portaudio.h	118;"	d
paInternalError	.\portaudio\pa_common\portaudio.h	/^    paInternalError,$/;"	e	enum:__anon24
paInvalidChannelCount	.\portaudio\pa_common\portaudio.h	/^    paInvalidChannelCount,$/;"	e	enum:__anon24
paInvalidDeviceId	.\portaudio\pa_common\portaudio.h	/^    paInvalidDeviceId,$/;"	e	enum:__anon24
paInvalidFlag	.\portaudio\pa_common\portaudio.h	/^    paInvalidFlag,$/;"	e	enum:__anon24
paInvalidSampleRate	.\portaudio\pa_common\portaudio.h	/^    paInvalidSampleRate,$/;"	e	enum:__anon24
paNoDevice	.\portaudio\pa_common\portaudio.h	132;"	d
paNoError	.\portaudio\pa_common\portaudio.h	/^    paNoError = 0,$/;"	e	enum:__anon24
paNoFlag	.\portaudio\pa_common\portaudio.h	235;"	d
paNullCallback	.\portaudio\pa_common\portaudio.h	/^    paNullCallback,$/;"	e	enum:__anon24
paPackedInt24	.\portaudio\pa_common\portaudio.h	117;"	d
paPlatformSpecificFlags	.\portaudio\pa_common\portaudio.h	238;"	d
paSampleFormatNotSupported	.\portaudio\pa_common\portaudio.h	/^    paSampleFormatNotSupported,$/;"	e	enum:__anon24
paTestData	.\pa_tests\debug_dual.c	/^paTestData;$/;"	t	typeref:struct:__anon1	file:
paTestData	.\pa_tests\debug_multi_in.c	/^paTestData;$/;"	t	typeref:struct:__anon2	file:
paTestData	.\pa_tests\debug_multi_out.c	/^paTestData;$/;"	t	typeref:struct:__anon3	file:
paTestData	.\pa_tests\debug_record.c	/^paTestData;$/;"	t	typeref:struct:__anon4	file:
paTestData	.\pa_tests\debug_sine.c	/^paTestData;$/;"	t	typeref:struct:__anon5	file:
paTestData	.\pa_tests\pa_minlat.c	/^paTestData;$/;"	t	typeref:struct:__anon21	file:
paTestData	.\pa_tests\patest_clip.c	/^paTestData;$/;"	t	typeref:struct:paTestData	file:
paTestData	.\pa_tests\patest_clip.c	/^typedef struct paTestData$/;"	s	file:
paTestData	.\pa_tests\patest_dither.c	/^paTestData;$/;"	t	typeref:struct:paTestData	file:
paTestData	.\pa_tests\patest_dither.c	/^typedef struct paTestData$/;"	s	file:
paTestData	.\pa_tests\patest_latency.c	/^paTestData;$/;"	t	typeref:struct:__anon8	file:
paTestData	.\pa_tests\patest_leftright.c	/^paTestData;$/;"	t	typeref:struct:__anon9	file:
paTestData	.\pa_tests\patest_longsine.c	/^paTestData;$/;"	t	typeref:struct:__anon10	file:
paTestData	.\pa_tests\patest_many.c	/^paTestData;$/;"	t	typeref:struct:__anon11	file:
paTestData	.\pa_tests\patest_maxsines.c	/^paTestData;$/;"	t	typeref:struct:paTestData	file:
paTestData	.\pa_tests\patest_maxsines.c	/^typedef struct paTestData$/;"	s	file:
paTestData	.\pa_tests\patest_pink.c	/^paTestData;$/;"	t	typeref:struct:__anon13	file:
paTestData	.\pa_tests\patest_record.c	/^paTestData;$/;"	t	typeref:struct:__anon14	file:
paTestData	.\pa_tests\patest_saw.c	/^paTestData;$/;"	t	typeref:struct:__anon15	file:
paTestData	.\pa_tests\patest_sine.c	/^paTestData;$/;"	t	typeref:struct:__anon16	file:
paTestData	.\pa_tests\patest_sine8.c	/^paTestData;$/;"	t	typeref:struct:__anon17	file:
paTestData	.\pa_tests\patest_sine_time.c	/^paTestData;$/;"	t	typeref:struct:__anon18	file:
paTestData	.\pa_tests\patest_stop.c	/^paTestData;$/;"	t	typeref:struct:__anon19	file:
paTestData	.\pa_tests\patest_sync.c	/^paTestData;$/;"	t	typeref:struct:__anon20	file:
paTestData	.\portaudio\pa_tests\debug_dual.c	/^paTestData;$/;"	t	typeref:struct:__anon27	file:
paTestData	.\portaudio\pa_tests\debug_multi_in.c	/^paTestData;$/;"	t	typeref:struct:__anon28	file:
paTestData	.\portaudio\pa_tests\debug_multi_out.c	/^paTestData;$/;"	t	typeref:struct:__anon29	file:
paTestData	.\portaudio\pa_tests\debug_record.c	/^paTestData;$/;"	t	typeref:struct:__anon30	file:
paTestData	.\portaudio\pa_tests\debug_sine.c	/^paTestData;$/;"	t	typeref:struct:__anon31	file:
paTestData	.\portaudio\pa_tests\pa_minlat.c	/^paTestData;$/;"	t	typeref:struct:__anon47	file:
paTestData	.\portaudio\pa_tests\patest_clip.c	/^paTestData;$/;"	t	typeref:struct:paTestData	file:
paTestData	.\portaudio\pa_tests\patest_clip.c	/^typedef struct paTestData$/;"	s	file:
paTestData	.\portaudio\pa_tests\patest_dither.c	/^paTestData;$/;"	t	typeref:struct:paTestData	file:
paTestData	.\portaudio\pa_tests\patest_dither.c	/^typedef struct paTestData$/;"	s	file:
paTestData	.\portaudio\pa_tests\patest_latency.c	/^paTestData;$/;"	t	typeref:struct:__anon34	file:
paTestData	.\portaudio\pa_tests\patest_leftright.c	/^paTestData;$/;"	t	typeref:struct:__anon35	file:
paTestData	.\portaudio\pa_tests\patest_longsine.c	/^paTestData;$/;"	t	typeref:struct:__anon36	file:
paTestData	.\portaudio\pa_tests\patest_many.c	/^paTestData;$/;"	t	typeref:struct:__anon37	file:
paTestData	.\portaudio\pa_tests\patest_maxsines.c	/^paTestData;$/;"	t	typeref:struct:paTestData	file:
paTestData	.\portaudio\pa_tests\patest_maxsines.c	/^typedef struct paTestData$/;"	s	file:
paTestData	.\portaudio\pa_tests\patest_pink.c	/^paTestData;$/;"	t	typeref:struct:__anon39	file:
paTestData	.\portaudio\pa_tests\patest_record.c	/^paTestData;$/;"	t	typeref:struct:__anon40	file:
paTestData	.\portaudio\pa_tests\patest_saw.c	/^paTestData;$/;"	t	typeref:struct:__anon41	file:
paTestData	.\portaudio\pa_tests\patest_sine.c	/^paTestData;$/;"	t	typeref:struct:__anon42	file:
paTestData	.\portaudio\pa_tests\patest_sine8.c	/^paTestData;$/;"	t	typeref:struct:__anon43	file:
paTestData	.\portaudio\pa_tests\patest_sine_time.c	/^paTestData;$/;"	t	typeref:struct:__anon44	file:
paTestData	.\portaudio\pa_tests\patest_stop.c	/^paTestData;$/;"	t	typeref:struct:__anon45	file:
paTestData	.\portaudio\pa_tests\patest_sync.c	/^paTestData;$/;"	t	typeref:struct:__anon46	file:
paTestData::amplitude	.\pa_tests\patest_clip.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
paTestData::amplitude	.\pa_tests\patest_dither.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
paTestData::amplitude	.\portaudio\pa_tests\patest_clip.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
paTestData::amplitude	.\portaudio\pa_tests\patest_dither.c	/^    float amplitude;$/;"	m	struct:paTestData	file:	access:public
paTestData::left_phase	.\pa_tests\patest_clip.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::left_phase	.\pa_tests\patest_dither.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::left_phase	.\portaudio\pa_tests\patest_clip.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::left_phase	.\portaudio\pa_tests\patest_dither.c	/^    int left_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::numSines	.\pa_tests\patest_maxsines.c	/^    int numSines;$/;"	m	struct:paTestData	file:	access:public
paTestData::numSines	.\portaudio\pa_tests\patest_maxsines.c	/^    int numSines;$/;"	m	struct:paTestData	file:	access:public
paTestData::phases	.\pa_tests\patest_maxsines.c	/^    float phases[MAX_SINES];$/;"	m	struct:paTestData	file:	access:public
paTestData::phases	.\portaudio\pa_tests\patest_maxsines.c	/^    float phases[MAX_SINES];$/;"	m	struct:paTestData	file:	access:public
paTestData::right_phase	.\pa_tests\patest_clip.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::right_phase	.\pa_tests\patest_dither.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::right_phase	.\portaudio\pa_tests\patest_clip.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::right_phase	.\portaudio\pa_tests\patest_dither.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
paTestData::sine	.\pa_tests\patest_clip.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
paTestData::sine	.\pa_tests\patest_dither.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
paTestData::sine	.\pa_tests\patest_maxsines.c	/^    float sine[TABLE_SIZE + 1]; \/* add one for guard point for interpolation *\/$/;"	m	struct:paTestData	file:	access:public
paTestData::sine	.\portaudio\pa_tests\patest_clip.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
paTestData::sine	.\portaudio\pa_tests\patest_dither.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
paTestData::sine	.\portaudio\pa_tests\patest_maxsines.c	/^    float sine[TABLE_SIZE + 1]; \/* add one for guard point for interpolation *\/$/;"	m	struct:paTestData	file:	access:public
paTimedOut	.\portaudio\pa_common\portaudio.h	/^    paTimedOut,$/;"	e	enum:__anon24
paUInt8	.\portaudio\pa_common\portaudio.h	119;"	d
pad_DeviceBufferSize	.\portaudio\pa_mac\pa_mac.c	/^    long                    pad_DeviceBufferSize;$/;"	m	struct:internalPortAudioDevice	file:	access:public
pad_DeviceName	.\portaudio\pa_unix_oss\pa_unix.h	/^    char            pad_DeviceName[MAX_CHARS_DEVNAME];$/;"	m	struct:internalPortAudioDevice	access:public
pad_DeviceRefNum	.\portaudio\pa_mac\pa_mac.c	/^    long                    pad_DeviceRefNum;$/;"	m	struct:internalPortAudioDevice	file:	access:public
pad_GUID	.\portaudio\pa_win_ds\pa_dsound.c	/^    GUID                             pad_GUID;$/;"	m	struct:internalPortAudioDevice	file:	access:public
pad_Identifier	.\portaudio\pa_mac\pa_mac.c	/^    Component               pad_Identifier;$/;"	m	struct:internalPortAudioDevice	file:	access:public
pad_Info	.\portaudio\pa_mac\pa_mac.c	/^    PaDeviceInfo            pad_Info;$/;"	m	struct:internalPortAudioDevice	file:	access:public
pad_Info	.\portaudio\pa_unix_oss\pa_unix.h	/^    PaDeviceInfo    pad_Info;$/;"	m	struct:internalPortAudioDevice	access:public
pad_Info	.\portaudio\pa_win_ds\pa_dsound.c	/^    PaDeviceInfo                     pad_Info;$/;"	m	struct:internalPortAudioDevice	file:	access:public
pad_Next	.\portaudio\pa_unix_oss\pa_unix.h	/^    struct internalPortAudioDevice *pad_Next; \/* Singly linked list. *\/$/;"	m	struct:internalPortAudioDevice	typeref:struct:internalPortAudioDevice::internalPortAudioDevice	access:public
pad_SampleRates	.\portaudio\pa_unix_oss\pa_unix.h	/^    double          pad_SampleRates[MAX_SAMPLE_RATES]; \/* for pointing to from pad_Info *\/$/;"	m	struct:internalPortAudioDevice	access:public
pad_SampleRates	.\portaudio\pa_win_ds\pa_dsound.c	/^    double                           pad_SampleRates[10]; \/* for pointing to from pad_Info FIXME?!*\/$/;"	m	struct:internalPortAudioDevice	file:	access:public
pad_lpGUID	.\portaudio\pa_win_ds\pa_dsound.c	/^    GUID                            *pad_lpGUID;$/;"	m	struct:internalPortAudioDevice	file:	access:public
pahsc_AudioPriority	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_AudioPriority;          \/* priority of background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_AudioThread	.\portaudio\pa_unix_oss\pa_unix.h	/^    pthread_t        pahsc_AudioThread;            \/* background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_AudioThreadPID	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsAudioThreadValid;     \/* Is pahsc_AudioThread valid?*\/    pid_t            pahsc_AudioThreadPID;         \/* background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_BytesPerBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    unsigned int     pahsc_BytesPerBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_BytesPerInputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    unsigned int     pahsc_BytesPerInputBuffer;    \/* native buffer size in bytes *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_BytesPerInputHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_BytesPerInputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_BytesPerInputHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_BytesPerInputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_BytesPerOutputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    unsigned int     pahsc_BytesPerOutputBuffer;   \/* native buffer size in bytes *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_BytesPerOutputHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_BytesPerOutputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_BytesPerOutputHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_BytesPerOutputHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_CanaryRun	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_CanaryRun;              \/* Ask Canary to stop. *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_CanaryThread	.\portaudio\pa_unix_oss\pa_unix.h	/^    pthread_t        pahsc_CanaryThread;           \/* low priority thread that detects abuse by audio *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_CanaryTime	.\portaudio\pa_unix_oss\pa_unix.h	/^    struct timeval   pahsc_CanaryTime;$/;"	m	struct:PaHostSoundControl	typeref:struct:PaHostSoundControl::timeval	access:public
pahsc_Channel	.\portaudio\pa_mac\pa_mac.c	/^    SndChannelPtr           pahsc_Channel;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_Channel	.\portmixer\px_mac\px_mac.c	/^    SndChannelPtr           pahsc_Channel;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_DSoundWrapper	.\portaudio\pa_win_ds\pa_dsound.c	/^    DSoundWrapper    pahsc_DSoundWrapper;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_EntryCount	.\portaudio\pa_mac\pa_mac.c	/^    UInt64                  pahsc_EntryCount;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_EntryCount	.\portaudio\pa_win_ds\pa_dsound.c	/^    LARGE_INTEGER    pahsc_EntryCount;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_EntryCount	.\portmixer\px_mac\px_mac.c	/^    UInt64                  pahsc_EntryCount;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_EntryTime	.\portaudio\pa_unix_oss\pa_unix.h	/^    struct timeval   pahsc_EntryTime;$/;"	m	struct:PaHostSoundControl	typeref:struct:PaHostSoundControl::timeval	access:public
pahsc_FramesPerDSBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    int              pahsc_FramesPerDSBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_FramesPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_FramesPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_FramesPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_FramesPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_IfInsideCallback	.\portaudio\pa_mac\pa_mac.c	/^    volatile char           pahsc_IfInsideCallback;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_IfInsideCallback	.\portaudio\pa_win_ds\pa_dsound.c	/^    BOOL             pahsc_IfInsideCallback;  \/* Test for reentrancy. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_IfInsideCallback	.\portmixer\px_mac\px_mac.c	/^    volatile char           pahsc_IfInsideCallback;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^    SICompletionUPP         pahsc_InputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputCompletionProc	.\portmixer\px_mac\px_mac.c	/^    SICompletionUPP         pahsc_InputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputHandle	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_InputHandle;$/;"	m	struct:PaHostSoundControl	access:public
pahsc_InputMultiBuffer	.\portaudio\pa_mac\pa_mac.c	/^    MultiBuffer             pahsc_InputMultiBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputMultiBuffer	.\portmixer\px_mac\px_mac.c	/^    MultiBuffer             pahsc_InputMultiBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputParams	.\portaudio\pa_mac\pa_mac.c	/^    SPB                     pahsc_InputParams;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputParams	.\portmixer\px_mac\px_mac.c	/^    SPB                     pahsc_InputParams;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputRefNum	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_InputRefNum;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InputRefNum	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_InputRefNum;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InverseMicrosPerBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    double           pahsc_InverseMicrosPerBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_InverseMicrosPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^	double                  pahsc_InverseMicrosPerHostBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InverseMicrosPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^	double                  pahsc_InverseMicrosPerHostBuffer; \/* 1\/Microseconds of real-time audio per user buffer. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_InverseTicksPerUserBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    double           pahsc_InverseTicksPerUserBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_IsAudioThreadValid	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsAudioThreadValid;     \/* Is pahsc_AudioThread valid?*\/    pid_t            pahsc_AudioThreadPID;         \/* background audio thread *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_IsCanaryThreadValid	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsCanaryThreadValid;    \/* Is pahsc_CanaryThread valid?*\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_IsRecording	.\portaudio\pa_mac\pa_mac.c	/^    volatile char           pahsc_IsRecording;   \/* Recording in progress. Set by foreground. Cleared by background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_IsRecording	.\portmixer\px_mac\px_mac.c	/^    volatile char           pahsc_IsRecording;   \/* Recording in progress. Set by foreground. Cleared by background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_IsWatchDogThreadValid	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_IsWatchDogThreadValid;  \/* Is pahsc_WatchDogThread valid?*\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_LastPosPtr	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_LastPosPtr;$/;"	m	struct:PaHostSoundControl	access:public
pahsc_LastStreamBytes	.\portaudio\pa_unix_oss\pa_unix.h	/^    double           pahsc_LastStreamBytes;$/;"	m	struct:PaHostSoundControl	access:public
pahsc_MinFramesPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_MinFramesPerHostBuffer; \/* Can vary depending on virtual memory usage. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_MinFramesPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_MinFramesPerHostBuffer; \/* Can vary depending on virtual memory usage. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NativeBuffer	.\portaudio\pa_win_ds\pa_dsound.c	/^    short           *pahsc_NativeBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NativeInputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    short           *pahsc_NativeInputBuffer;$/;"	m	struct:PaHostSoundControl	access:public
pahsc_NativeOutputBuffer	.\portaudio\pa_unix_oss\pa_unix.h	/^    short           *pahsc_NativeOutputBuffer;$/;"	m	struct:PaHostSoundControl	access:public
pahsc_NumFramesDone	.\portaudio\pa_mac\pa_mac.c	/^    PaTimestamp             pahsc_NumFramesDone;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NumFramesDone	.\portmixer\px_mac\px_mac.c	/^    PaTimestamp             pahsc_NumFramesDone;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NumHostBuffers	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_NumHostBuffers;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NumHostBuffers	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_NumHostBuffers;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NumOutsPlayed	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_NumOutsPlayed;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NumOutsPlayed	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_NumOutsPlayed;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NumOutsQueued	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_NumOutsQueued;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_NumOutsQueued	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_NumOutsQueued;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_OutputCompletionProc	.\portaudio\pa_mac\pa_mac.c	/^    SndCallBackUPP          pahsc_OutputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_OutputCompletionProc	.\portmixer\px_mac\px_mac.c	/^    SndCallBackUPP          pahsc_OutputCompletionProc;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_OutputHandle	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_OutputHandle;$/;"	m	struct:PaHostSoundControl	access:public
pahsc_SoundHeaders	.\portaudio\pa_mac\pa_mac.c	/^    CmpSoundHeader          pahsc_SoundHeaders[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_SoundHeaders	.\portmixer\px_mac\px_mac.c	/^    CmpSoundHeader          pahsc_SoundHeaders[PA_MAX_NUM_HOST_BUFFERS];$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_StopRecording	.\portaudio\pa_mac\pa_mac.c	/^    volatile char           pahsc_StopRecording; \/* Signal sent to background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_StopRecording	.\portmixer\px_mac\px_mac.c	/^    volatile char           pahsc_StopRecording; \/* Signal sent to background. *\/$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_TimerID	.\portaudio\pa_win_ds\pa_dsound.c	/^    MMRESULT         pahsc_TimerID;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_UserBuffersPerHostBuffer	.\portaudio\pa_mac\pa_mac.c	/^    int32                   pahsc_UserBuffersPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_UserBuffersPerHostBuffer	.\portmixer\px_mac\px_mac.c	/^    int32                   pahsc_UserBuffersPerHostBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_ValidFramesWritten	.\portaudio\pa_win_ds\pa_dsound.c	/^    double           pahsc_ValidFramesWritten;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_WatchDogRun	.\portaudio\pa_unix_oss\pa_unix.h	/^    int              pahsc_WatchDogRun;            \/* Ask WatchDog to stop. *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_WatchDogThread	.\portaudio\pa_unix_oss\pa_unix.h	/^    pthread_t        pahsc_WatchDogThread;         \/* highest priority thread that protects system *\/$/;"	m	struct:PaHostSoundControl	access:public
pahsc_WhenFramesDoneIncremented	.\portaudio\pa_mac\pa_mac.c	/^    UInt64                  pahsc_WhenFramesDoneIncremented;$/;"	m	struct:PaHostSoundControl	file:	access:public
pahsc_WhenFramesDoneIncremented	.\portmixer\px_mac\px_mac.c	/^    UInt64                  pahsc_WhenFramesDoneIncremented;$/;"	m	struct:PaHostSoundControl	file:	access:public
paminlatCallback	.\pa_tests\pa_minlat.c	/^static int paminlatCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
paminlatCallback	.\portaudio\pa_tests\pa_minlat.c	/^static int paminlatCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
past_AverageInsideCount	.\portaudio\pa_common\pa_host.h	/^    double                    past_AverageInsideCount;$/;"	m	struct:internalPortAudioStream	access:public
past_AverageTotalCount	.\portaudio\pa_common\pa_host.h	/^    double                    past_AverageTotalCount;$/;"	m	struct:internalPortAudioStream	access:public
past_Callback	.\portaudio\pa_common\pa_host.h	/^    PortAudioCallback        *past_Callback;$/;"	m	struct:internalPortAudioStream	access:public
past_DeviceData	.\portaudio\pa_common\pa_host.h	/^    void                     *past_DeviceData;$/;"	m	struct:internalPortAudioStream	access:public
past_Flags	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_Flags;$/;"	m	struct:internalPortAudioStream	access:public
past_FrameCount	.\portaudio\pa_common\pa_host.h	/^    PaTimestamp               past_FrameCount;    \/* Frames output to buffer. *\/$/;"	m	struct:internalPortAudioStream	access:public
past_FramesPerUserBuffer	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_FramesPerUserBuffer;$/;"	m	struct:internalPortAudioStream	access:public
past_IfLastExitValid	.\portaudio\pa_common\pa_host.h	/^    int                       past_IfLastExitValid;$/;"	m	struct:internalPortAudioStream	access:public
past_InputBuffer	.\portaudio\pa_common\pa_host.h	/^    void                     *past_InputBuffer;$/;"	m	struct:internalPortAudioStream	access:public
past_InputBufferSize	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_InputBufferSize; \/* Size in bytes of the input buffer. *\/$/;"	m	struct:internalPortAudioStream	access:public
past_InputConversionProc	.\portaudio\pa_common\pa_host.h	/^    PortAudioConverter       *past_InputConversionProc;$/;"	m	struct:internalPortAudioStream	access:public
past_InputConversionSourceStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_InputConversionSourceStride;$/;"	m	struct:internalPortAudioStream	access:public
past_InputConversionTargetStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_InputConversionTargetStride;$/;"	m	struct:internalPortAudioStream	access:public
past_InputDeviceID	.\portaudio\pa_common\pa_host.h	/^    PaDeviceID                past_InputDeviceID;$/;"	m	struct:internalPortAudioStream	access:public
past_InputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_InputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
past_IsActive	.\portaudio\pa_common\pa_host.h	/^    volatile int              past_IsActive;      \/* Background is still playing. *\/$/;"	m	struct:internalPortAudioStream	access:public
past_Magic	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_Magic;  \/* ID for struct to catch bugs. *\/$/;"	m	struct:internalPortAudioStream	access:public
past_NativeInputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_NativeInputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
past_NativeOutputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_NativeOutputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
past_NumCallbacks	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_NumCallbacks;$/;"	m	struct:internalPortAudioStream	access:public
past_NumInputChannels	.\portaudio\pa_common\pa_host.h	/^    int                       past_NumInputChannels;$/;"	m	struct:internalPortAudioStream	access:public
past_NumOutputChannels	.\portaudio\pa_common\pa_host.h	/^    int                       past_NumOutputChannels;$/;"	m	struct:internalPortAudioStream	access:public
past_NumUserBuffers	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_NumUserBuffers;$/;"	m	struct:internalPortAudioStream	access:public
past_OutputBuffer	.\portaudio\pa_common\pa_host.h	/^    void                     *past_OutputBuffer;$/;"	m	struct:internalPortAudioStream	access:public
past_OutputBufferSize	.\portaudio\pa_common\pa_host.h	/^    uint32                    past_OutputBufferSize;$/;"	m	struct:internalPortAudioStream	access:public
past_OutputConversionProc	.\portaudio\pa_common\pa_host.h	/^    PortAudioConverter       *past_OutputConversionProc;$/;"	m	struct:internalPortAudioStream	access:public
past_OutputConversionSourceStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_OutputConversionSourceStride;$/;"	m	struct:internalPortAudioStream	access:public
past_OutputConversionTargetStride	.\portaudio\pa_common\pa_host.h	/^    int                       past_OutputConversionTargetStride;$/;"	m	struct:internalPortAudioStream	access:public
past_OutputDeviceID	.\portaudio\pa_common\pa_host.h	/^    PaDeviceID                past_OutputDeviceID;$/;"	m	struct:internalPortAudioStream	access:public
past_OutputSampleFormat	.\portaudio\pa_common\pa_host.h	/^    PaSampleFormat            past_OutputSampleFormat;$/;"	m	struct:internalPortAudioStream	access:public
past_SampleRate	.\portaudio\pa_common\pa_host.h	/^    double                    past_SampleRate;     \/* Closest supported sample rate. *\/$/;"	m	struct:internalPortAudioStream	access:public
past_StopNow	.\portaudio\pa_common\pa_host.h	/^    volatile int              past_StopNow;       \/* Background should stop playing now. *\/$/;"	m	struct:internalPortAudioStream	access:public
past_StopSoon	.\portaudio\pa_common\pa_host.h	/^    volatile int              past_StopSoon;      \/* Background should keep playing when buffers empty. *\/$/;"	m	struct:internalPortAudioStream	access:public
past_Usage	.\portaudio\pa_common\pa_host.h	/^    double                    past_Usage;$/;"	m	struct:internalPortAudioStream	access:public
past_UserData	.\portaudio\pa_common\pa_host.h	/^    void                     *past_UserData;$/;"	m	struct:internalPortAudioStream	access:public
patest1Callback	.\pa_tests\debug_test1.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long bufferFrames, PaTimestamp outTime, void *userData )
patest1Callback	.\pa_tests\patest1.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long bufferFrames, PaTimestamp outTime, void *userData )
patest1Callback	.\pa_tests\patest_many.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patest1Callback	.\pa_tests\patest_many.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patest1Callback	.\portaudio\pa_tests\debug_test1.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long bufferFrames, PaTimestamp outTime, void *userData )
patest1Callback	.\portaudio\pa_tests\patest1.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long bufferFrames, PaTimestamp outTime, void *userData )
patest1Callback	.\portaudio\pa_tests\patest_many.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patest1Callback	.\portaudio\pa_tests\patest_many.c	/^static int patest1Callback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patest1data	.\pa_tests\debug_test1.c	/^patest1data;$/;"	t	typeref:struct:__anon6	file:
patest1data	.\pa_tests\patest1.c	/^patest1data;$/;"	t	typeref:struct:__anon7	file:
patest1data	.\portaudio\pa_tests\debug_test1.c	/^patest1data;$/;"	t	typeref:struct:__anon32	file:
patest1data	.\portaudio\pa_tests\patest1.c	/^patest1data;$/;"	t	typeref:struct:__anon33	file:
patestCallback	.\pa_tests\debug_dual.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\debug_multi_in.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\debug_multi_out.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\debug_sine.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_latency.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_leftright.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_longsine.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_maxsines.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_pink.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_saw.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_sine.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_sine8.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_sine_time.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_stop.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\pa_tests\patest_sync.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\debug_dual.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\debug_multi_in.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\debug_multi_out.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\debug_sine.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_latency.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_leftright.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_longsine.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_maxsines.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_pink.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_saw.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_sine.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_sine8.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_sine_time.c	/^static int patestCallback(   void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_stop.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
patestCallback	.\portaudio\pa_tests\patest_sync.c	/^static int patestCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
phase	.\pa_tests\debug_test1.c	/^    int phase;$/;"	m	struct:__anon6	file:	access:public
phase	.\pa_tests\patest1.c	/^    int phase;$/;"	m	struct:__anon7	file:	access:public
phase	.\pa_tests\patest_stop.c	/^    float  phase;$/;"	m	struct:__anon19	file:	access:public
phase	.\portaudio\pa_tests\debug_test1.c	/^    int phase;$/;"	m	struct:__anon32	file:	access:public
phase	.\portaudio\pa_tests\patest1.c	/^    int phase;$/;"	m	struct:__anon33	file:	access:public
phase	.\portaudio\pa_tests\patest_stop.c	/^    float  phase;$/;"	m	struct:__anon45	file:	access:public
phase_increment	.\pa_tests\debug_dual.c	/^    float phase_increment;$/;"	m	struct:__anon1	file:	access:public
phase_increment	.\pa_tests\debug_sine.c	/^    float phase_increment;$/;"	m	struct:__anon5	file:	access:public
phase_increment	.\pa_tests\patest_latency.c	/^    float phase_increment;$/;"	m	struct:__anon8	file:	access:public
phase_increment	.\pa_tests\patest_stop.c	/^    float  phase_increment;$/;"	m	struct:__anon19	file:	access:public
phase_increment	.\portaudio\pa_tests\debug_dual.c	/^    float phase_increment;$/;"	m	struct:__anon27	file:	access:public
phase_increment	.\portaudio\pa_tests\debug_sine.c	/^    float phase_increment;$/;"	m	struct:__anon31	file:	access:public
phase_increment	.\portaudio\pa_tests\patest_latency.c	/^    float phase_increment;$/;"	m	struct:__anon34	file:	access:public
phase_increment	.\portaudio\pa_tests\patest_stop.c	/^    float  phase_increment;$/;"	m	struct:__anon45	file:	access:public
phases	.\pa_tests\debug_multi_out.c	/^    double   phases[MAX_CHANNELS];$/;"	m	struct:__anon3	file:	access:public
phases	.\pa_tests\patest_maxsines.c	/^    float phases[MAX_SINES];$/;"	m	struct:paTestData	file:	access:public
phases	.\portaudio\pa_tests\debug_multi_out.c	/^    double   phases[MAX_CHANNELS];$/;"	m	struct:__anon29	file:	access:public
phases	.\portaudio\pa_tests\patest_maxsines.c	/^    float phases[MAX_SINES];$/;"	m	struct:paTestData	file:	access:public
phases	.\portaudio\pablio\test_w_saw.c	/^float   phases[SAMPLES_PER_FRAME];$/;"	v
phases	.\portaudio\pablio\test_w_saw8.c	/^unsigned char   phases[SAMPLES_PER_FRAME];$/;"	v
pinkMax	.\pa_tests\patest_pink.c	/^float pinkMax = -999.0;$/;"	v
pinkMax	.\portaudio\pa_tests\patest_pink.c	/^float pinkMax = -999.0;$/;"	v
pinkMin	.\pa_tests\patest_pink.c	/^float pinkMin =  999.0;$/;"	v
pinkMin	.\portaudio\pa_tests\patest_pink.c	/^float pinkMin =  999.0;$/;"	v
pink_Index	.\pa_tests\patest_pink.c	/^    int       pink_Index;        \/* Incremented each sample. *\/$/;"	m	struct:__anon12	file:	access:public
pink_Index	.\portaudio\pa_tests\patest_pink.c	/^    int       pink_Index;        \/* Incremented each sample. *\/$/;"	m	struct:__anon38	file:	access:public
pink_IndexMask	.\pa_tests\patest_pink.c	/^    int       pink_IndexMask;    \/* Index wrapped by ANDing with this mask. *\/$/;"	m	struct:__anon12	file:	access:public
pink_IndexMask	.\portaudio\pa_tests\patest_pink.c	/^    int       pink_IndexMask;    \/* Index wrapped by ANDing with this mask. *\/$/;"	m	struct:__anon38	file:	access:public
pink_Rows	.\pa_tests\patest_pink.c	/^    long      pink_Rows[PINK_MAX_RANDOM_ROWS];$/;"	m	struct:__anon12	file:	access:public
pink_Rows	.\portaudio\pa_tests\patest_pink.c	/^    long      pink_Rows[PINK_MAX_RANDOM_ROWS];$/;"	m	struct:__anon38	file:	access:public
pink_RunningSum	.\pa_tests\patest_pink.c	/^    long      pink_RunningSum;   \/* Used to optimize summing of generators. *\/$/;"	m	struct:__anon12	file:	access:public
pink_RunningSum	.\portaudio\pa_tests\patest_pink.c	/^    long      pink_RunningSum;   \/* Used to optimize summing of generators. *\/$/;"	m	struct:__anon38	file:	access:public
pink_Scalar	.\pa_tests\patest_pink.c	/^    float     pink_Scalar;       \/* Used to scale within range of -1.0 to +1.0 *\/$/;"	m	struct:__anon12	file:	access:public
pink_Scalar	.\portaudio\pa_tests\patest_pink.c	/^    float     pink_Scalar;       \/* Used to scale within range of -1.0 to +1.0 *\/$/;"	m	struct:__anon38	file:	access:public
playCallback	.\pa_tests\debug_record.c	/^static int playCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
playCallback	.\pa_tests\patest_record.c	/^static int playCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
playCallback	.\portaudio\pa_tests\debug_record.c	/^static int playCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
playCallback	.\portaudio\pa_tests\patest_record.c	/^static int playCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
primaryDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^    AudioDeviceID      primaryDeviceID;$/;"	m	struct:PaHostSoundControl	file:	access:public
primaryDeviceID	.\portmixer\px_mac_core\px_mac_core.c	/^    AudioDeviceID      primaryDeviceID;$/;"	m	struct:PaHostSoundControl	file:	access:public
pthread_function_t	.\portaudio\pa_unix_oss\pa_unix.c	/^typedef void *(*pthread_function_t)(void *);$/;"	t	file:
rates	.\portaudio\pa_mac\pa_mac.c	/^    UnsignedFixed           (**rates)[]; \/* Handle created by SPBGetDeviceInfo *\/$/;"	m	struct:__anon26	file:	access:public
readIndex	.\portaudio\pablio\ringbuffer.h	/^    long   readIndex;  \/* Index of next readable byte. Set by RingBuffer_AdvanceReadIndex. *\/$/;"	m	struct:__anon23	access:public
recordCallback	.\pa_tests\debug_record.c	/^static int recordCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
recordCallback	.\pa_tests\patest_record.c	/^static int recordCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
recordCallback	.\portaudio\pa_tests\debug_record.c	/^static int recordCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
recordCallback	.\portaudio\pa_tests\patest_record.c	/^static int recordCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
recordedSamples	.\pa_tests\debug_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon4	file:	access:public
recordedSamples	.\pa_tests\patest_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon14	file:	access:public
recordedSamples	.\portaudio\pa_tests\debug_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon30	file:	access:public
recordedSamples	.\portaudio\pa_tests\patest_record.c	/^    SAMPLE      *recordedSamples;$/;"	m	struct:__anon40	file:	access:public
recs	.\portmixer\px_unix_oss\px_unix_oss.c	/^   int recs[SOUND_MIXER_NRDEVICES];$/;"	m	struct:PxInfo	file:	access:public
repeatCounter	.\pa_tests\patest_stop.c	/^    int    repeatCounter;$/;"	m	struct:__anon19	file:	access:public
repeatCounter	.\portaudio\pa_tests\patest_stop.c	/^    int    repeatCounter;$/;"	m	struct:__anon45	file:	access:public
requestBeep	.\pa_tests\patest_sync.c	/^    int          requestBeep;  \/* Set by foreground, cleared by background. *\/$/;"	m	struct:__anon20	file:	access:public
requestBeep	.\portaudio\pa_tests\patest_sync.c	/^    int          requestBeep;  \/* Set by foreground, cleared by background. *\/$/;"	m	struct:__anon46	file:	access:public
rightPink	.\pa_tests\patest_pink.c	/^    PinkNoise   rightPink;$/;"	m	struct:__anon13	file:	access:public
rightPink	.\portaudio\pa_tests\patest_pink.c	/^    PinkNoise   rightPink;$/;"	m	struct:__anon39	file:	access:public
right_phase	.\pa_tests\debug_dual.c	/^    float right_phase;$/;"	m	struct:__anon1	file:	access:public
right_phase	.\pa_tests\debug_sine.c	/^    float right_phase;$/;"	m	struct:__anon5	file:	access:public
right_phase	.\pa_tests\pa_minlat.c	/^    double right_phase;$/;"	m	struct:__anon21	file:	access:public
right_phase	.\pa_tests\patest_clip.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
right_phase	.\pa_tests\patest_dither.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
right_phase	.\pa_tests\patest_latency.c	/^    float right_phase;$/;"	m	struct:__anon8	file:	access:public
right_phase	.\pa_tests\patest_leftright.c	/^    int right_phase;$/;"	m	struct:__anon9	file:	access:public
right_phase	.\pa_tests\patest_longsine.c	/^    int right_phase;$/;"	m	struct:__anon10	file:	access:public
right_phase	.\pa_tests\patest_many.c	/^    int right_phase;$/;"	m	struct:__anon11	file:	access:public
right_phase	.\pa_tests\patest_saw.c	/^    float right_phase;$/;"	m	struct:__anon15	file:	access:public
right_phase	.\pa_tests\patest_sine.c	/^    int right_phase;$/;"	m	struct:__anon16	file:	access:public
right_phase	.\pa_tests\patest_sine8.c	/^    int right_phase;$/;"	m	struct:__anon17	file:	access:public
right_phase	.\pa_tests\patest_sine_time.c	/^    int           right_phase;$/;"	m	struct:__anon18	file:	access:public
right_phase	.\pa_tests\patest_sync.c	/^    float        right_phase;$/;"	m	struct:__anon20	file:	access:public
right_phase	.\portaudio\pa_tests\debug_dual.c	/^    float right_phase;$/;"	m	struct:__anon27	file:	access:public
right_phase	.\portaudio\pa_tests\debug_sine.c	/^    float right_phase;$/;"	m	struct:__anon31	file:	access:public
right_phase	.\portaudio\pa_tests\pa_minlat.c	/^    double right_phase;$/;"	m	struct:__anon47	file:	access:public
right_phase	.\portaudio\pa_tests\patest_clip.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
right_phase	.\portaudio\pa_tests\patest_dither.c	/^    int right_phase;$/;"	m	struct:paTestData	file:	access:public
right_phase	.\portaudio\pa_tests\patest_latency.c	/^    float right_phase;$/;"	m	struct:__anon34	file:	access:public
right_phase	.\portaudio\pa_tests\patest_leftright.c	/^    int right_phase;$/;"	m	struct:__anon35	file:	access:public
right_phase	.\portaudio\pa_tests\patest_longsine.c	/^    int right_phase;$/;"	m	struct:__anon36	file:	access:public
right_phase	.\portaudio\pa_tests\patest_many.c	/^    int right_phase;$/;"	m	struct:__anon37	file:	access:public
right_phase	.\portaudio\pa_tests\patest_saw.c	/^    float right_phase;$/;"	m	struct:__anon41	file:	access:public
right_phase	.\portaudio\pa_tests\patest_sine.c	/^    int right_phase;$/;"	m	struct:__anon42	file:	access:public
right_phase	.\portaudio\pa_tests\patest_sine8.c	/^    int right_phase;$/;"	m	struct:__anon43	file:	access:public
right_phase	.\portaudio\pa_tests\patest_sine_time.c	/^    int           right_phase;$/;"	m	struct:__anon44	file:	access:public
right_phase	.\portaudio\pa_tests\patest_sync.c	/^    float        right_phase;$/;"	m	struct:__anon46	file:	access:public
ringBuffer	.\portaudio\pa_mac_core\pa_mac_core.c	/^    RingBuffer         ringBuffer;$/;"	m	struct:PaHostSoundControl	file:	access:public
ringBufferData	.\portaudio\pa_mac_core\pa_mac_core.c	/^    char              *ringBufferData;$/;"	m	struct:PaHostSoundControl	file:	access:public
sCoreDeviceIDs	.\portaudio\pa_mac_core\pa_mac_core.c	/^static AudioDeviceID *sCoreDeviceIDs;   \/\/ Array of Core AudioDeviceIDs$/;"	v	file:
sDefaultInputDeviceID	.\portaudio\pa_mac\pa_mac.c	/^static int                 sDefaultInputDeviceID;$/;"	v	file:
sDefaultInputDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int sDefaultInputDeviceID = paNoDevice;$/;"	v	file:
sDefaultInputDeviceID	.\portaudio\pa_unix_oss\pa_unix.c	/^static int sDefaultInputDeviceID = paNoDevice;$/;"	v	file:
sDefaultInputDeviceID	.\portaudio\pa_win_ds\pa_dsound.c	/^static int sDefaultInputDeviceID = paNoDevice;$/;"	v	file:
sDefaultInputDeviceID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static int sDefaultInputDeviceID = paNoDevice;$/;"	v	file:
sDefaultOutputDeviceID	.\portaudio\pa_mac\pa_mac.c	/^static int                 sDefaultOutputDeviceID;$/;"	v	file:
sDefaultOutputDeviceID	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int sDefaultOutputDeviceID = paNoDevice;$/;"	v	file:
sDefaultOutputDeviceID	.\portaudio\pa_unix_oss\pa_unix.c	/^static int sDefaultOutputDeviceID = paNoDevice;$/;"	v	file:
sDefaultOutputDeviceID	.\portaudio\pa_win_ds\pa_dsound.c	/^static int sDefaultOutputDeviceID = paNoDevice;$/;"	v	file:
sDefaultOutputDeviceID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static int sDefaultOutputDeviceID = paNoDevice;$/;"	v	file:
sDeviceIndex	.\portaudio\pa_win_ds\pa_dsound.c	/^static int sDeviceIndex = 0;$/;"	v	file:
sDeviceInfos	.\portaudio\pa_mac_core\pa_mac_core.c	/^static PaHostDeviceInfo *sDeviceInfos = NULL;$/;"	v	file:
sDeviceList	.\portaudio\pa_unix_oss\pa_unix.c	/^static internalPortAudioDevice *sDeviceList = NULL;$/;"	v	file:
sDevicePtrs	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static PaDeviceInfo **sDevicePtrs = NULL;$/;"	v	file:
sDevices	.\portaudio\pa_mac\pa_mac.c	/^static internalPortAudioDevice sDevices[PA_MAX_DEVICE_INFO] = { 0 };$/;"	v	file:
sDevices	.\portaudio\pa_win_ds\pa_dsound.c	/^static internalPortAudioDevice *sDevices = NULL;$/;"	v	file:
sEnumerationError	.\portaudio\pa_win_ds\pa_dsound.c	/^static int sEnumerationError;$/;"	v	file:
sMapperSuffixInput	.\portaudio\pa_mac_core\pa_mac_core.c	/^static const char sMapperSuffixInput[] = " - Input";$/;"	v	file:
sMapperSuffixInput	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static const char sMapperSuffixInput[] = " - Input";$/;"	v	file:
sMapperSuffixOutput	.\portaudio\pa_mac_core\pa_mac_core.c	/^static const char sMapperSuffixOutput[] = " - Output";$/;"	v	file:
sMapperSuffixOutput	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static const char sMapperSuffixOutput[] = " - Output";$/;"	v	file:
sNumAllocations	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static int sNumAllocations = 0;$/;"	v	file:
sNumCoreDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int sNumCoreDevices = 0;$/;"	v	file:
sNumDevices	.\portaudio\pa_mac\pa_mac.c	/^static int                 sNumDevices = 0;$/;"	v	file:
sNumDevices	.\portaudio\pa_win_ds\pa_dsound.c	/^static int sNumDevices = 0;$/;"	v	file:
sNumDevices	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static int sNumDevices = 0;$/;"	v	file:
sNumInputDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int sNumInputDevices = 0; \/* Total number of input PaDeviceInfos *\/$/;"	v	file:
sNumInputDevices	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static int sNumInputDevices = 0;$/;"	v	file:
sNumOutputDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int sNumOutputDevices = 0;$/;"	v	file:
sNumOutputDevices	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static int sNumOutputDevices = 0;$/;"	v	file:
sNumPaDevices	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int sNumPaDevices = 0;   \/* Total number of PaDeviceInfos *\/$/;"	v	file:
sPaHostError	.\portaudio\pa_mac\pa_mac.c	/^static int32               sPaHostError = 0;$/;"	v	file:
sPaHostError	.\portaudio\pa_unix_oss\pa_unix.c	/^static int sPaHostError = 0;$/;"	v	file:
sPaHostError	.\portaudio\pa_win_ds\pa_dsound.c	/^static int sPaHostError = 0;$/;"	v	file:
sPaHostError	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^static int sPaHostError = 0;$/;"	v	file:
sSavedHostError	.\portaudio\pa_mac_core\pa_mac_core.c	/^static int sSavedHostError = 0;$/;"	v	file:
sampleRates	.\portaudio\pa_common\portaudio.h	/^    const double *sampleRates;$/;"	m	struct:__anon25	access:public
samples	.\portaudio\pablio\test_rw_echo.c	/^SAMPLE   samples[NUM_ECHO_FRAMES][SAMPLES_PER_FRAME] = {0.0};$/;"	v
samples	.\portaudio\pablio\test_w_saw.c	/^float   samples[FRAMES_PER_BLOCK][SAMPLES_PER_FRAME];$/;"	v
samples	.\portaudio\pablio\test_w_saw8.c	/^unsigned char   samples[FRAMES_PER_BLOCK][SAMPLES_PER_FRAME];$/;"	v
samplesPerFrame	.\portaudio\pablio\pablio.h	/^    int          samplesPerFrame;$/;"	m	struct:__anon22	access:public
sampsToGo	.\pa_tests\debug_test1.c	/^    int sampsToGo;$/;"	m	struct:__anon6	file:	access:public
sampsToGo	.\pa_tests\patest1.c	/^    int sampsToGo;$/;"	m	struct:__anon7	file:	access:public
sampsToGo	.\pa_tests\patest_many.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon11	file:	access:public
sampsToGo	.\pa_tests\patest_pink.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon13	file:	access:public
sampsToGo	.\portaudio\pa_tests\debug_test1.c	/^    int sampsToGo;$/;"	m	struct:__anon32	file:	access:public
sampsToGo	.\portaudio\pa_tests\patest1.c	/^    int sampsToGo;$/;"	m	struct:__anon33	file:	access:public
sampsToGo	.\portaudio\pa_tests\patest_many.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon37	file:	access:public
sampsToGo	.\portaudio\pa_tests\patest_pink.c	/^    unsigned int sampsToGo;$/;"	m	struct:__anon39	file:	access:public
sawPhase	.\pa_tests\paqa_devs.c	/^    short          sawPhase;$/;"	m	struct:PaQaData	file:	access:public
sawPhase	.\portaudio\pa_tests\paqa_devs.c	/^    short          sawPhase;$/;"	m	struct:PaQaData	file:	access:public
sine	.\pa_tests\debug_dual.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon1	file:	access:public
sine	.\pa_tests\debug_sine.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon5	file:	access:public
sine	.\pa_tests\debug_test1.c	/^    float sine[100];$/;"	m	struct:__anon6	file:	access:public
sine	.\pa_tests\patest1.c	/^    float sine[100];$/;"	m	struct:__anon7	file:	access:public
sine	.\pa_tests\patest_clip.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
sine	.\pa_tests\patest_dither.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
sine	.\pa_tests\patest_latency.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon8	file:	access:public
sine	.\pa_tests\patest_leftright.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon9	file:	access:public
sine	.\pa_tests\patest_longsine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon10	file:	access:public
sine	.\pa_tests\patest_many.c	/^    short sine[TABLE_SIZE];$/;"	m	struct:__anon11	file:	access:public
sine	.\pa_tests\patest_maxsines.c	/^    float sine[TABLE_SIZE + 1]; \/* add one for guard point for interpolation *\/$/;"	m	struct:paTestData	file:	access:public
sine	.\pa_tests\patest_sine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon16	file:	access:public
sine	.\pa_tests\patest_sine8.c	/^    unsigned char sine[TABLE_SIZE];$/;"	m	struct:__anon17	file:	access:public
sine	.\pa_tests\patest_sine_time.c	/^    float         sine[TABLE_SIZE];$/;"	m	struct:__anon18	file:	access:public
sine	.\portaudio\pa_tests\debug_dual.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon27	file:	access:public
sine	.\portaudio\pa_tests\debug_sine.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon31	file:	access:public
sine	.\portaudio\pa_tests\debug_test1.c	/^    float sine[100];$/;"	m	struct:__anon32	file:	access:public
sine	.\portaudio\pa_tests\patest1.c	/^    float sine[100];$/;"	m	struct:__anon33	file:	access:public
sine	.\portaudio\pa_tests\patest_clip.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
sine	.\portaudio\pa_tests\patest_dither.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:paTestData	file:	access:public
sine	.\portaudio\pa_tests\patest_latency.c	/^    float sine[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon34	file:	access:public
sine	.\portaudio\pa_tests\patest_leftright.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon35	file:	access:public
sine	.\portaudio\pa_tests\patest_longsine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon36	file:	access:public
sine	.\portaudio\pa_tests\patest_many.c	/^    short sine[TABLE_SIZE];$/;"	m	struct:__anon37	file:	access:public
sine	.\portaudio\pa_tests\patest_maxsines.c	/^    float sine[TABLE_SIZE + 1]; \/* add one for guard point for interpolation *\/$/;"	m	struct:paTestData	file:	access:public
sine	.\portaudio\pa_tests\patest_sine.c	/^    float sine[TABLE_SIZE];$/;"	m	struct:__anon42	file:	access:public
sine	.\portaudio\pa_tests\patest_sine8.c	/^    unsigned char sine[TABLE_SIZE];$/;"	m	struct:__anon43	file:	access:public
sine	.\portaudio\pa_tests\patest_sine_time.c	/^    float         sine[TABLE_SIZE];$/;"	m	struct:__anon44	file:	access:public
sineCallback	.\pa_tests\patest_clip.c	/^static int sineCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
sineCallback	.\pa_tests\patest_dither.c	/^static int sineCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
sineCallback	.\pa_tests\patest_dither.c	/^static int sineCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
sineCallback	.\portaudio\pa_tests\patest_clip.c	/^static int sineCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
sineCallback	.\portaudio\pa_tests\patest_dither.c	/^static int sineCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
sineCallback	.\portaudio\pa_tests\patest_dither.c	/^static int sineCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
size	.\portaudio\pa_unix_oss\pa_unix.h	/^    int           size;$/;"	m	struct:PaDriverInfo	access:public
smallMask	.\portaudio\pablio\ringbuffer.h	/^    long   smallMask;  \/* Used for fitting indices to buffer. *\/$/;"	m	struct:__anon23	access:public
sources	.\portmixer\px_mac\px_mac.c	/^   PxSource      *sources;$/;"	m	struct:PxInfo	file:	access:public
speakerID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD       speakerID;$/;"	m	struct:PxInfo	file:	access:public
src	.\portmixer\px_win_wmme\px_win_wmme.c	/^   PxSrcInfo   src[32];$/;"	m	struct:PxInfo	file:	access:public
state	.\pa_tests\patest_sync.c	/^    int          state;$/;"	m	struct:__anon20	file:	access:public
state	.\portaudio\pa_tests\patest_sync.c	/^    int          state;$/;"	m	struct:__anon46	file:	access:public
statusText	.\portaudio\pa_mac_core\pa_mac_core.c	/^static OSStatus statusText[2] = { 0, 0 };$/;"	v	file:
stopMode	.\pa_tests\patest_stop.c	/^    int    stopMode;$/;"	m	struct:__anon19	file:	access:public
stopMode	.\portaudio\pa_tests\patest_stop.c	/^    int    stopMode;$/;"	m	struct:__anon45	file:	access:public
stream	.\portaudio\pablio\pablio.h	/^    PortAudioStream *stream;$/;"	m	struct:__anon22	access:public
streamLock	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    CRITICAL_SECTION   streamLock;                  \/* Mutext to prevent threads from colliding. *\/$/;"	m	struct:PaWMMEStreamData	file:	access:public
streamLockInited	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    INT                streamLockInited;$/;"	m	struct:PaWMMEStreamData	file:	access:public
structVersion	.\portaudio\pa_common\portaudio.h	/^    int structVersion;$/;"	m	struct:__anon25	access:public
supportedSampleRateRange	.\portaudio\pa_mac_core\pa_mac_core.c	/^static const double supportedSampleRateRange[] = { 8000.0, 96000.0 }; \/* FIXME - go to double HW rate. *\/$/;"	v	file:
timerID	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    MMRESULT           timerID;$/;"	m	struct:PaWMMEStreamData	file:	access:public
toggle	.\pa_tests\patest_leftright.c	/^    int toggle;$/;"	m	struct:__anon9	file:	access:public
toggle	.\portaudio\pa_tests\patest_leftright.c	/^    int toggle;$/;"	m	struct:__anon35	file:	access:public
traceBlock	.\portaudio\pa_common\pa_trace.c	/^static int traceBlock = 0;$/;"	v	file:
traceIndex	.\portaudio\pa_common\pa_trace.c	/^static int traceIndex = 0;$/;"	v	file:
traceIntArray	.\portaudio\pa_common\pa_trace.c	/^static int traceIntArray[MAX_TRACE_RECORDS];$/;"	v	file:
traceTextArray	.\portaudio\pa_common\pa_trace.c	/^static char *traceTextArray[MAX_TRACE_RECORDS];$/;"	v	file:
tune	.\pa_tests\patest_stop.c	/^    float *tune;$/;"	m	struct:__anon19	file:	access:public
tune	.\portaudio\pa_tests\patest_stop.c	/^    float *tune;$/;"	m	struct:__anon45	file:	access:public
uint16	.\portaudio\pa_common\pa_host.h	/^    typedef unsigned short uint16;$/;"	t
uint32	.\portaudio\pa_common\pa_host.h	/^    typedef unsigned long uint32;$/;"	t
userBuffersPerHostBuffer	.\portaudio\pa_win_wmme\pa_win_wmme.c	/^    int                userBuffersPerHostBuffer;$/;"	m	struct:PaWMMEStreamData	file:	access:public
waveID	.\portmixer\px_win_wmme\px_win_wmme.c	/^   DWORD       waveID;$/;"	m	struct:PxInfo	file:	access:public
waveform	.\pa_tests\patest_stop.c	/^    float  waveform[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon19	file:	access:public
waveform	.\portaudio\pa_tests\patest_stop.c	/^    float  waveform[TABLE_SIZE + 1]; \/\/ add one for guard point for interpolation$/;"	m	struct:__anon45	file:	access:public
wireCallback	.\pa_tests\patest_wire.c	/^static int wireCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
wireCallback	.\pa_tests\patest_wire.c	/^static int wireCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
wireCallback	.\portaudio\pa_tests\patest_wire.c	/^static int wireCallback( void *inputBuffer, void *outputBuffer,$/;"	f	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
wireCallback	.\portaudio\pa_tests\patest_wire.c	/^static int wireCallback( void *inputBuffer, void *outputBuffer,$/;"	p	file:	signature:( void *inputBuffer, void *outputBuffer, unsigned long framesPerBuffer, PaTimestamp outTime, void *userData )
writeIndex	.\portaudio\pablio\ringbuffer.h	/^    long   writeIndex; \/* Index of next writable byte. Set by RingBuffer_AdvanceWriteIndex. *\/$/;"	m	struct:__anon23	access:public
zeroPad	.\portaudio\pa_mac_core\pa_mac_core.c	/^static char zeroPad[256] = { 0 };$/;"	v	file:
