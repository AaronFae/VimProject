I'm setting item.
I'm getting item.
Study.__module__
__main__

study.Study.__module__
study

study.__doc__
 This is a python study module to practise the python.

dir(study)
['Study', '__builtins__', '__doc__', '__file__', '__name__', '__package__', 'studyMethod']

['E:\\VimProject\\StudyPython', 'D:\\Python26\\python26.zip', 'D:\\Python26\\DLLs', 'D:\\Python26\\lib', 'D:\\Python26\\lib\\plat-win', 'D:\\Python26\\lib\\lib-tk', 'D:\\Python26', 'D:\\Python26\\lib\\site-packages', 'D:\\Python26\\lib\\site-packages\\win32', 'D:\\Python26\\lib\\site-packages\\win32\\lib', 'D:\\Python26\\lib\\site-packages\\Pythonwin']
I'm doing something here in TestMe.
True
('jiawei', '.zip')
jiawei
jiawei\jjjj                                    jiadfdssdf
jiawei\njiawei\jjjj \
                                   jiadfdssdf
Test + word sequence
 jiawei 
 jiawei  jiawei  jiawei  jiawei  jiawei 
w
 j
ia
 j
iawei 
jiawei 


Test - word sequence
 
i
i 
 jiawe
 jiawei 
len(word): 8
Hello World
Hello World
Hello\u0020World
中国
中国
中国
中国
Test list, list is just a sequence, its behaviour
['spam', 'eggs', 100, 1234]
spam
1234
100
['eggs', 100]
['spam', 'eggs', 'bacon', 4]
['spam', 'eggs', 123, 1234]
[1, 12, 123, 1234]
[123, 1234]
[123, 'bletch', 'xyzzy', 1234]
[123, 'bletch', 'xyzzy', 1234, 123, 'bletch', 'xyzzy', 1234]
len(a): 8
[]
[2, 3]
2
[1, [2, 3, 'xtra'], 4]
[2, 3, 'xtra']
1 1 2 3 5 8 0 1 2 3 4 5 6 7 8 9
else of for clause will not be executed, because break clause has been executed.
else clause is being executed because no break clause has been executed.
This is a function.
This is a assigned function

None
string: i
tuple: (1, 2, 'list')
dictionary: {'age': 30}
1 2 3
1 2 3
string: i
tuple: (1, 2, 3)
dictionary: {'one': 1, 'three': 3, 'two': 2}
3
2 1 0
[66.25, 333, -1, 333, 1, 1234.5, 333]
333 is located in the position: 1
The first 333 has been removed: 
 [66.25, -1, 333, 1, 1234.5, 333]
The a list has been reversed: 
 [333, 1234.5, 1, 333, -1, 66.25]
The a list has been sorted: 
 [-1, 1, 66.25, 333, 333, 1234.5]
Pop the last item like stack, filo: 
 1234.5
 [-1, 1, 66.25, 333, 333]
Pop the first item like queue, fifo: 
 -1
 [1, 66.25, 333, 333]
['banana', 'loganberry', 'passion fruit']
[12, 18]
[(2, 4), (4, 16), (6, 36)]
vector 1: [2, 4, 6]
vector 2: [1, 2, 3]
[x * y for x in vec for y in vec1]: [2, 4, 6, 4, 8, 12, 6, 12, 18]
vector 3: [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
zip(*vector3): [(1, 4, 7), (2, 5, 8), (3, 6, 9)]
ready to delete list: [1, 66.25, 333, 333]
del a[0]: [66.25, 333, 333]
del a[1:3]: [66.25]
del a[:]: []
"del a" means a will not point to any memory block
(1, 2, 3)
sequence packing: (1, 2, 3)
sequence unpacking i=1, j=2, k=3
Before invoking set function: ['apple', 'orange', 'apple', 'pear', 'orange', 'banana']
After invoking set function: ['orange', 'pear', 'apple', 'banana']
set(['a', 'c', 'b', 'd'])
set(['a', 'c', 'b'])
a - b: set(['d'])
dictionary: {'sape': 4139, 'jack': 4098, 'guido': 4127}
jack in dictionary: 4098
dictionary: {'jack': 4098, 'irv': 4127, 'guido': 4127}
dictionary keys: ['jack', 'irv', 'guido']
'guido' in tel: True
dictionary built by dict(): {'sape': 4139, 'jack': 4098, 'guido': 4127}
reversal dict() by using {}.items(): [('sape', 4139), ('jack', 4098), ('guido', 4127)]
sape 4139
jack 4098
guido 4127
0 a
1 b
2 c
3 d
What is your name? It is lancelot.
What is your quest? It is the holy grail.
What is your favorite color? It is blue.
[9, 7, 5, 3, 1]
['e', 'd', 'c', 'b', 'a']
apple banana orange pear
Trondheim
True Value
True Value
I'm test_method()
I'm test_method()
I'm doing something here in TestMe.
I'm invoking studyMethod() in main directly without module name as prefix. 
Hello studyMethod()
"python study.py" will make sys.argv equals to: ['study.py']
['E:\\VimProject\\StudyPython', 'D:\\Python26\\python26.zip', 'D:\\Python26\\DLLs', 'D:\\Python26\\lib', 'D:\\Python26\\lib\\plat-win', 'D:\\Python26\\lib\\lib-tk', 'D:\\Python26', 'D:\\Python26\\lib\\site-packages', 'D:\\Python26\\lib\\site-packages\\win32', 'D:\\Python26\\lib\\site-packages\\win32\\lib', 'D:\\Python26\\lib\\site-packages\\Pythonwin']
['E:\\VimProject\\StudyPython', 'D:\\Python26\\python26.zip', 'D:\\Python26\\DLLs', 'D:\\Python26\\lib', 'D:\\Python26\\lib\\plat-win', 'D:\\Python26\\lib\\lib-tk', 'D:\\Python26', 'D:\\Python26\\lib\\site-packages', 'D:\\Python26\\lib\\site-packages\\win32', 'D:\\Python26\\lib\\site-packages\\win32\\lib', 'D:\\Python26\\lib\\site-packages\\Pythonwin', '.']
dir(): ['Study', 'TestMe', '__builtins__', '__doc__', '__file__', '__name__', '__package__', 'a', 'answers', 'b', 'basket', 'decoded_str1', 'decoded_str2', 'decoded_str3', 'dicts', 'f', 'freshfruit', 'fruit', 'function', 'function1', 'function2', 'i', 'item', 'j', 'k', 'list', 'non_null', 'os', 'p', 'q', 'questions', 'string1', 'string2', 'string3', 'study', 'studyMethod', 'sys', 't', 'tel', 'test', 'test_method', 'v', 'vec', 'vec1', 'vec2', 'weapon', 'word', 'x', 'y']
Hello world.
'Hello world.'
 1   1    1
 2   4    8
 3   9   27
 4  16   64
 5  25  125
 6  36  216
 7  49  343
 8  64  512
 9  81  729
10 100 1000
00012
-003.14
3.14159265359
1, 3.142, 2
1, 2
jiawei zhang
0
""" This is a test to study Python """


I'm printing the result of f.seek(-3,2) for test.py: 


""" This is a test to study Python """

def test_method():

    print "I'm test_method()"

    test_method()

f.closed: True

I'm doing something here in TestMe.
I'm running an method of object which has been dumped and loaded with pickle above, it return: None
<type 'exceptions.Exception'>
('spam', 'eggs')
x = spam
y = eggs
get item0
get item1
get item2
get item3
x = 1, y = 2, z = 3
can be opened
An exception flew by!
I am finally.
My exception occurred, value: 4
The MyClass doc:  A simple example class 

iClassVariable can be visited as a class variable by the ways below:
MyClass.iClassVariable: 12345
Increase the value of class variable by 1. MyClass.iClassVariable += 1
MyClass().__class__.iClassVariable: 12346
self.__class__.iClassVariable: 12346

MyClass().iClassVariable has two behaviour:
if there is no the same name called iClassVariable for instance variable, it return class variable.
if there is the same name called iClassVariable for instance variable, it return instance variable.
So, use object.__class__.iClassVariable to visit class variable always while use object.iInstanceVariable to visit instance variable always.

iInstanceVariable can be visited by the ways below:
MyClass().iInstanceVariable: 54321
self.iInstanceVariable: 54321
Invoking MyClass.iInstanceVariable will definitely raise a error saying: no attribute iInstanceVariable for MyClass
Thus, MyClass can only invoke class variable, not instance variable, not any method.

invoking a parent class method which is not overwritten: 
111111

invoking a parent class method which is overwritten: 
12346
I am sub class overwritten method.

invoking a subclass its own method: 
invoking a parent class method which is not overwritten: 
111111
111111

invoking a parent class method which is overwritten: 
12346
I am sub class overwritten method.
12346

invoking a subclass its own method: 
111111
12346
I am sub class own method

"object" subclass is instance of "class" SubMyClass: True
"class" SubMyClass is sub class of "class" MyClass: True
1
1
1
I am private method in class PrivateSample
B
C
D
two one
1 2 3
Testing generator for iterator instead of implementing __iter__(self) and next(self) method.(reversing "123")
3 2 1
Testing generator expression
285
260
{0: 0.0, 1: 0.017452406437283512, 2: 0.034899496702500969, 3: 0.052335956242943828, 4: 0.069756473744125302, 5: 0.087155742747658166, 6: 0.10452846326765346, 7: 0.12186934340514748, 8: 0.13917310096006544, 9: 0.15643446504023087, 10: 0.17364817766693033, 11: 0.1908089953765448, 12: 0.20791169081775931, 13: 0.224951054343865, 14: 0.24192189559966773, 15: 0.25881904510252074, 16: 0.27563735581699916, 17: 0.29237170472273677, 18: 0.3090169943749474, 19: 0.32556815445715664, 20: 0.34202014332566871, 21: 0.35836794954530027, 22: 0.37460659341591201, 23: 0.39073112848927372, 24: 0.40673664307580015, 25: 0.42261826174069944, 26: 0.4383711467890774, 27: 0.45399049973954675, 28: 0.46947156278589081, 29: 0.48480962024633706, 30: 0.49999999999999994, 31: 0.51503807491005416, 32: 0.5299192642332049, 33: 0.54463903501502708, 34: 0.5591929034707469, 35: 0.57357643635104605, 36: 0.58778525229247314, 37: 0.60181502315204827, 38: 0.61566147532565818, 39: 0.62932039104983739, 40: 0.64278760968653925, 41: 0.65605902899050716, 42: 0.66913060635885824, 43: 0.68199836006249848, 44: 0.69465837045899725, 45: 0.70710678118654746, 46: 0.71933980033865108, 47: 0.73135370161917046, 48: 0.74314482547739413, 49: 0.75470958022277201, 50: 0.76604444311897801, 51: 0.77714596145697079, 52: 0.78801075360672201, 53: 0.79863551004729283, 54: 0.80901699437494745, 55: 0.8191520442889918, 56: 0.82903757255504174, 57: 0.83867056794542394, 58: 0.84804809615642596, 59: 0.85716730070211222, 60: 0.8660254037844386, 61: 0.87461970713939574, 62: 0.88294759285892688, 63: 0.89100652418836779, 64: 0.89879404629916704, 65: 0.90630778703664994, 66: 0.91354545764260087, 67: 0.92050485345244026, 68: 0.92718385456678742, 69: 0.93358042649720174, 70: 0.93969262078590832, 71: 0.94551857559931674, 72: 0.95105651629515353, 73: 0.95630475596303544, 74: 0.96126169593831889, 75: 0.96592582628906831, 76: 0.97029572627599647, 77: 0.97437006478523525, 78: 0.97814760073380558, 79: 0.98162718344766398, 80: 0.98480775301220802, 81: 0.98768834059513777, 82: 0.99026806874157025, 83: 0.99254615164132198, 84: 0.99452189536827329, 85: 0.99619469809174555, 86: 0.9975640502598242, 87: 0.99862953475457383, 88: 0.99939082701909576, 89: 0.99984769515639127, 90: 1.0}
['f', 'l', 'o', 'g']

